SENDER:+16508989508
USER_SLUG:bart
EDIT_TARGET:admin-admin
EDIT_INSTRUCTIONS:make the background a red gradient

ORIGINAL_HTML:
<!DOCTYPE html>
<html lang="en">
<head>
    <title>WTAF – Delusional App Generator</title>
    <meta property="og:title" content="WTAF by AF" />
    <meta property="og:description" content="Vibecoded chaos, shipped via SMS." />
    <meta property="og:image" content="https://tqniseocczttrfwtpbdr.supabase.co/storage/v1/object/public/og-images/bart-admin-admin.png?" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:url" content="https://theaf-web.ngrok.io/bart/admin-admin" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Élysée Coffee House - Admin Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        :root {
            --gradient-start: #ffd700;
            --gradient-end: #fff5d7;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            min-height: 100vh;
            background: linear-gradient(-45deg, var(--gradient-start), var(--gradient-end), #fff8e7, #ffe4b5);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            color: #2c1810;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            margin-bottom: 2rem;
            text-align: center;
        }

        .glass-container {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .admin-controls {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 1rem;
        }

        button {
            background: #2c1810;
            color: white;
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 8px;
            font-family: 'Space Grotesk', sans-serif;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-left: 1rem;
        }

        button:hover {
            background: #4a2c1c;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            overflow: hidden;
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid rgba(44, 24, 16, 0.1);
        }

        th {
            background: rgba(44, 24, 16, 0.1);
            font-family: 'Space Grotesk', sans-serif;
        }

        tr:hover {
            background: rgba(255, 255, 255, 0.95);
        }

        @media (max-width: 768px) {
            .container { padding: 1rem; }
            table { font-size: 0.9rem; }
            th, td { padding: 0.8rem; }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Élysée Coffee House - Admin Dashboard</h1>
        
        <div class="glass-container">
            <div class="admin-controls">
                <button onclick="exportCSV()">Export CSV</button>
                <button onclick="loadSubmissions()">Refresh</button>
            </div>
            
            <table>
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Message</th>
                    </tr>
                </thead>
                <tbody id="submissionsTable"></tbody>
            </table>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('https://tqniseocczttrfwtpbdr.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRxbmlzZW9jY3p0dHJmd3RwYmRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg4ODI5MjIsImV4cCI6MjA2NDQ1ODkyMn0.mwb33p0xIEXy5F7ZoLc1j9-4ZNk3FuT4zrR0aTdm350');

        async function loadSubmissions() {
            try {
                const { data, error } = await supabase.from('wtaf_submissions')
                    .select('*')
                    .eq('app_id', 'wtaf_abc123')
                    .order('created_at', { ascending: false });

                if (error) throw error;

                const tableBody = document.getElementById('submissionsTable');
                tableBody.innerHTML = '';

                data.forEach(row => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${new Date(row.created_at).toLocaleDateString()}</td>
                        <td>${row.submission_data.name}</td>
                        <td>${row.submission_data.email}</td>
                        <td>${row.submission_data.message}</td>
                    `;
                    tableBody.appendChild(tr);
                });
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to load submissions');
            }
        }

        function exportCSV() {
            const table = document.getElementById('submissionsTable');
            const rows = Array.from(table.getElementsByTagName('tr'));
            
            const csvContent = 'Date,Name,Email,Message\n' + 
                rows.map(row => 
                    Array.from(row.getElementsByTagName('td'))
                        .map(cell => `"${cell.textContent}"`)
                        .join(',')
                ).join('\n');

            const blob = new Blob([csvContent], { type: 'text/csv' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'elysee_submissions.csv';
            a.click();
        }

        // Load submissions when page loads
        loadSubmissions();
    </script>
</body>
</html>