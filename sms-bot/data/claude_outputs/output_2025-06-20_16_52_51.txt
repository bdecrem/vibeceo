I'll create both pages with the specified luxury design elements and functionality. Here's the complete implementation:

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LuxChic | Connect With Elegance</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        :root {
            --black: #1a1a1a;
            --gold: #D4AF37;
            --silver: #C0C0C0;
            --charcoal: #36454F;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(-45deg, #1a1a1a, #36454F, #2C3539, #23282C);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            min-height: 100vh;
            color: white;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .glass-container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 3rem;
            margin: 2rem 0;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        h1, h2, h3 {
            font-family: 'Space Grotesk', sans-serif;
            color: var(--gold);
        }

        h1 {
            font-size: 3.5rem;
            margin-bottom: 1rem;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        input, select, textarea {
            width: 100%;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            color: white;
            font-family: 'Inter', sans-serif;
            transition: all 0.3s ease;
        }

        input:focus, select:focus, textarea:focus {
            outline: none;
            border-color: var(--gold);
            background: rgba(255, 255, 255, 0.1);
        }

        button {
            background: var(--gold);
            color: var(--black);
            padding: 1rem 2rem;
            border: none;
            border-radius: 8px;
            font-family: 'Space Grotesk', sans-serif;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(212, 175, 55, 0.3);
        }

        .floating-emojis span {
            position: fixed;
            font-size: 2rem;
            pointer-events: none;
            transition: all 0.1s ease;
        }

        .location-details {
            margin-top: 3rem;
            font-size: 0.9rem;
            color: var(--silver);
        }

        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            h1 {
                font-size: 2.5rem;
            }

            .glass-container {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="floating-emojis">
        <span class="emoji-1" data-value="2">üíé</span>
        <span class="emoji-2" data-value="3">‚ú®</span>
        <span class="emoji-3" data-value="1">üëó</span>
        <span class="emoji-4" data-value="4">üõçÔ∏è</span>
    </div>

    <div class="container">
        <div class="glass-container">
            <h1>LuxChic</h1>
            <h2>Beverly Hills' Premier Fashion House</h2>
            
            <form id="contactForm">
                <div class="form-group">
                    <input type="text" id="name" placeholder="Your Name" required>
                </div>
                <div class="form-group">
                    <input type="email" id="email" placeholder="Your Email" required>
                </div>
                <div class="form-group">
                    <input type="tel" id="phone" placeholder="Phone Number" required>
                </div>
                <div class="form-group">
                    <select id="inquiryType" required>
                        <option value="">Select Inquiry Type</option>
                        <option value="General">General Inquiry</option>
                        <option value="Support">Exclusive Support</option>
                        <option value="Partnership">Partnership Opportunities</option>
                    </select>
                </div>
                <div class="form-group">
                    <textarea id="message" rows="5" placeholder="Your Message" required></textarea>
                </div>
                <button type="submit">Submit Inquiry</button>
            </form>

            <div class="location-details">
                <p>Located in the heart of Beverly Hills</p>
                <p>Adjacent to Rodeo Drive & The Beverly Hills Hotel</p>
                <p>By appointment only</p>
            </div>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emojis span').forEach((elem) => {
                const speed = elem.getAttribute('data-value')
                const x = (e.clientX * speed) / 100
                const y = (e.clientY * speed) / 100
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`
            })
        })

        document.getElementById('contactForm').addEventListener('submit', async (e) => {
            e.preventDefault()
            
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                phone: document.getElementById('phone').value,
                inquiryType: document.getElementById('inquiryType').value,
                message: document.getElementById('message').value
            }

            try {
                const { data, error } = await supabase.from('contact_submissions_jk45lm').insert({
                    app_id: 'contact_submissions_jk45lm',
                    submission_data: formData
                })
                if (error) throw error
                alert('Thank you for your inquiry. Our team will contact you shortly.')
                e.target.reset()
            } catch (error) {
                console.error('Error:', error)
                alert('Submission failed. Please try again.')
            }
        })
    </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LuxChic Admin | Submission Management</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        :root {
            --black: #1a1a1a;
            --gold: #D4AF37;
            --silver: #C0C0C0;
            --charcoal: #36454F;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(-45deg, #1a1a1a, #36454F, #2C3539, #23282C);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            min-height: 100vh;
            color: white;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .admin-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }

        .glass-container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            margin: 2rem 0;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            color: var(--gold);
            font-size: 2.5rem;
            margin-bottom: 2rem;
        }

        .controls {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        input[type="search"] {
            flex: 1;
            padding: 0.75rem;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            color: white;
        }

        button {
            background: var(--gold);
            color: var(--black);
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(212, 175, 55, 0.3);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        th {
            font-family: 'Space Grotesk', sans-serif;
            color: var(--gold);
            font-weight: 500;
        }

        tr:hover {
            background: rgba(255, 255, 255, 0.05);
        }

        .floating-emojis span {
            position: fixed;
            font-size: 2rem;
            pointer-events: none;
            transition: all 0.1s ease;
        }

        @media (max-width: 768px) {
            .admin-container {
                padding: 1rem;
            }

            .controls {
                flex-direction: column;
            }

            th, td {
                padding: 0.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="floating-emojis">
        <span class="emoji-1" data-value="2">üíé</span>
        <span class="emoji-2" data-value="3">‚ú®</span>
        <span class="emoji-3" data-value="1">üëó</span>
        <span class="emoji-4" data-value="4">üõçÔ∏è</span>
    </div>

    <div class="admin-container">
        <div class="glass-container">
            <h1>LuxChic Inquiry Management</h1>
            
            <div class="controls">
                <input type="search" id="searchInput" placeholder="Search submissions...">
                <button onclick="exportToCSV()">Export to CSV</button>
            </div>

            <table id="submissionsTable">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Inquiry Type</th>
                        <th>Message</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emojis span').forEach((elem) => {
                const speed = elem.getAttribute('data-value')
                const x = (e.clientX * speed) / 100
                const y = (e.clientY * speed) / 100
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`
            })
        })

        async function loadSubmissions() {
            try {
                const { data, error } = await supabase.from('contact_submissions_jk45lm')
                    .select('*')
                    .eq('app_id', 'contact_submissions_jk45lm')
                    .order('created_at', { ascending: false })
                
                if (error) throw error

                const tbody = document.querySelector('#submissionsTable tbody')
                tbody.innerHTML = ''

                data.forEach(row => {
                    const tr = document.createElement('tr')
                    tr.innerHTML = `
                        <td>${new Date(row.created_at).toLocaleDateString()}</td>
                        <td>${row.submission_data.name}</td>
                        <td>${row.submission_data.email}</td>
                        <td>${row.submission_data.phone}</td>
                        <td>${row.submission_data.inquiryType}</td>
                        <td>${row.submission_data.message}</td>
                    `
                    tbody.appendChild(tr)
                })
            } catch (error) {
                console.error('Error:', error)
                alert('Failed to load submissions')
            }
        }

        function exportToCSV() {
            const rows = Array.from(document.querySelectorAll('#submissionsTable tbody tr'))
            const csvContent = 'Date,Name,Email,Phone,Inquiry Type,Message\n' + 
                rows.map(row => 
                    Array.from(row.cells)
                        .map(cell => `"${cell.textContent}"`)
                        .join(',')
                ).join('\n')

            const blob = new Blob([csvContent], { type: 'text/csv' })
            const url = URL.createObjectURL(blob)
            const a = document.createElement('a')
            a.href = url
            a.download = 'luxchic-submissions.csv'
            a.click()
        }

        document.getElementById('searchInput').addEventListener('input', (e) => {
            const searchTerm = e.target.value.toLowerCase()
            const rows = document.querySelectorAll('#submissionsTable tbody tr')
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase()
                row.style.display = text.includes(searchTerm) ? '' : 'none'
            })
        })

        loadSubmissions()
    </script>
</body>
</html>
```

This implementation includes both the public contact form and admin dashboard pages, separated by the required delimiter. The design features all requested elements including:

1. Luxury aesthetic with gold and charcoal color scheme
2. Floating emojis with parallax effects
3. Animated gradient background
4. Glass morphism containers
5. Space Grotesk and Inter fonts
6. Full mobile responsiveness
7. Sophisticated copy and Beverly Hills references
8. Complete Supabase integration
9. CSV export functionality
10. Search and filter capabilities in the admin dashboard

Both pages maintain consistent branding while serving their distinct purposes. The public page focuses on elegant user interaction, while the admin dashboard provides efficient management of submissions.