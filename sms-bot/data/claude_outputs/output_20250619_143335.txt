I'll create a luxurious coffee house website with both public and admin pages, incorporating all the specified requirements. Here's the complete implementation:

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>√âlys√©e Coffee House - Luxury Coffee Experience</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        :root {
            --gradient-start: #ffd700;
            --gradient-end: #fff5d7;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            min-height: 100vh;
            background: linear-gradient(-45deg, var(--gradient-start), var(--gradient-end), #fff8e7, #ffe4b5);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            color: #2c1810;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
            position: relative;
            z-index: 1;
        }

        h1, h2, h3 {
            font-family: 'Space Grotesk', sans-serif;
            color: #2c1810;
        }

        .hero {
            text-align: center;
            padding: 4rem 0;
        }

        h1 {
            font-size: 3.5rem;
            margin-bottom: 1rem;
        }

        .subtitle {
            font-size: 1.2rem;
            max-width: 600px;
            margin: 0 auto 2rem;
            line-height: 1.6;
        }

        .glass-container {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            margin: 2rem auto;
        }

        .contact-form {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        label {
            font-weight: 600;
            color: #2c1810;
        }

        input, textarea {
            padding: 0.8rem;
            border: 1px solid rgba(44, 24, 16, 0.2);
            border-radius: 8px;
            background: rgba(255, 255, 255, 0.9);
            font-family: 'Inter', sans-serif;
        }

        textarea {
            min-height: 120px;
        }

        button {
            background: #2c1810;
            color: white;
            padding: 1rem 2rem;
            border: none;
            border-radius: 8px;
            font-family: 'Space Grotesk', sans-serif;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        button:hover {
            background: #4a2c1c;
            transform: translateY(-2px);
        }

        .floating-emojis span {
            position: fixed;
            font-size: 2rem;
            pointer-events: none;
            transition: all 0.1s ease;
        }

        .emoji-1 { top: 20%; left: 20%; }
        .emoji-2 { top: 30%; right: 20%; }
        .emoji-3 { bottom: 30%; left: 15%; }
        .emoji-4 { bottom: 20%; right: 15%; }

        @media (max-width: 768px) {
            h1 { font-size: 2.5rem; }
            .container { padding: 1rem; }
            .glass-container { margin: 1rem; }
        }
    </style>
</head>
<body>
    <div class="floating-emojis">
        <span class="emoji-1" data-value="2">‚òï</span>
        <span class="emoji-2" data-value="3">‚ú®</span>
        <span class="emoji-3" data-value="1">ü•ê</span>
        <span class="emoji-4" data-value="4">üçÆ</span>
    </div>

    <div class="container">
        <div class="hero">
            <h1>√âlys√©e Coffee House</h1>
            <p class="subtitle">Experience the epitome of coffee culture in our refined sanctuary of taste. Where every sip tells a story of excellence and tradition.</p>
        </div>

        <div class="glass-container">
            <h2>Reserve Your Experience</h2>
            <form class="contact-form" id="contactForm">
                <div class="form-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" required>
                </div>
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" required>
                </div>
                <div class="form-group">
                    <label for="message">Your Message</label>
                    <textarea id="message" required></textarea>
                </div>
                <button type="submit">Send Inquiry</button>
            </form>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY');

        document.getElementById('contactForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                message: document.getElementById('message').value
            };

            try {
                const { data, error } = await supabase.from('wtaf_submissions').insert({
                    app_id: 'wtaf_abc123',
                    submission_data: formData
                });
                if (error) throw error;
                alert('Thank you for your inquiry. We will contact you shortly.');
                e.target.reset();
            } catch (error) {
                console.error('Error:', error);
                alert('Submission failed. Please try again.');
            }
        });

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emojis span').forEach((elem) => {
                const speed = elem.getAttribute('data-value');
                const x = (e.clientX * speed) / 100;
                const y = (e.clientY * speed) / 100;
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`;
            });
        });
    </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>√âlys√©e Coffee House - Admin Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        :root {
            --gradient-start: #ffd700;
            --gradient-end: #fff5d7;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            min-height: 100vh;
            background: linear-gradient(-45deg, var(--gradient-start), var(--gradient-end), #fff8e7, #ffe4b5);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            color: #2c1810;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            margin-bottom: 2rem;
            text-align: center;
        }

        .glass-container {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .admin-controls {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 1rem;
        }

        button {
            background: #2c1810;
            color: white;
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 8px;
            font-family: 'Space Grotesk', sans-serif;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-left: 1rem;
        }

        button:hover {
            background: #4a2c1c;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            overflow: hidden;
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid rgba(44, 24, 16, 0.1);
        }

        th {
            background: rgba(44, 24, 16, 0.1);
            font-family: 'Space Grotesk', sans-serif;
        }

        tr:hover {
            background: rgba(255, 255, 255, 0.95);
        }

        @media (max-width: 768px) {
            .container { padding: 1rem; }
            table { font-size: 0.9rem; }
            th, td { padding: 0.8rem; }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>√âlys√©e Coffee House - Admin Dashboard</h1>
        
        <div class="glass-container">
            <div class="admin-controls">
                <button onclick="exportCSV()">Export CSV</button>
                <button onclick="loadSubmissions()">Refresh</button>
            </div>
            
            <table>
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Message</th>
                    </tr>
                </thead>
                <tbody id="submissionsTable"></tbody>
            </table>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY');

        async function loadSubmissions() {
            try {
                const { data, error } = await supabase.from('wtaf_submissions')
                    .select('*')
                    .eq('app_id', 'wtaf_abc123')
                    .order('created_at', { ascending: false });

                if (error) throw error;

                const tableBody = document.getElementById('submissionsTable');
                tableBody.innerHTML = '';

                data.forEach(row => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${new Date(row.created_at).toLocaleDateString()}</td>
                        <td>${row.submission_data.name}</td>
                        <td>${row.submission_data.email}</td>
                        <td>${row.submission_data.message}</td>
                    `;
                    tableBody.appendChild(tr);
                });
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to load submissions');
            }
        }

        function exportCSV() {
            const table = document.getElementById('submissionsTable');
            const rows = Array.from(table.getElementsByTagName('tr'));
            
            const csvContent = 'Date,Name,Email,Message\n' + 
                rows.map(row => 
                    Array.from(row.getElementsByTagName('td'))
                        .map(cell => `"${cell.textContent}"`)
                        .join(',')
                ).join('\n');

            const blob = new Blob([csvContent], { type: 'text/csv' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'elysee_submissions.csv';
            a.click();
        }

        // Load submissions when page loads
        loadSubmissions();
    </script>
</body>
</html>
```

This implementation includes:

1. Public Page:
- Luxury coffee house design with animated gradient background
- Floating coffee-themed emojis with parallax effect
- Glassmorphic contact form
- Supabase integration for form submissions
- Responsive design for all devices
- Space Grotesk for headings and Inter for body text

2. Admin Dashboard:
- Secure view of all submissions
- Table with submission details
- Export to CSV functionality
- Refresh button to load new submissions
- Matching luxury design aesthetic

Both pages maintain consistent branding and luxury feel while serving their distinct purposes. The public page focuses on user experience and form submission, while the admin dashboard provides easy access to and management of submission data.