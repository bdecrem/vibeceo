```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BrewConnect | Premium Coffee Experience</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;500;600&family=Inter:wght@300;400;500&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(120deg, #f3e7d9, #e6d5c3, #d4c4b7);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            min-height: 100vh;
            color: #2c1810;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .glass-card {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 3rem;
            margin: 2rem 0;
            transition: transform 0.3s ease;
        }

        .glass-card:hover {
            transform: scale(1.01);
        }

        h1, h2, h3 {
            font-family: 'Space Grotesk', sans-serif;
            color: #2c1810;
        }

        h1 {
            font-size: 4rem;
            margin-bottom: 1rem;
        }

        .subtitle {
            font-size: 1.5rem;
            margin-bottom: 3rem;
            color: #5c3924;
        }

        .menu-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            margin: 3rem 0;
        }

        .menu-item {
            padding: 1.5rem;
            border-radius: 15px;
            background: rgba(255, 255, 255, 0.6);
            backdrop-filter: blur(5px);
        }

        .menu-item h3 {
            margin-bottom: 0.5rem;
        }

        .contact-form {
            display: grid;
            gap: 1.5rem;
            max-width: 600px;
        }

        input, textarea {
            width: 100%;
            padding: 1rem;
            border: 2px solid #d4c4b7;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.8);
            font-family: 'Inter', sans-serif;
            transition: all 0.3s ease;
        }

        input:focus, textarea:focus {
            outline: none;
            border-color: #8b5e3c;
            background: white;
        }

        button {
            background: #5c3924;
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 10px;
            font-family: 'Space Grotesk', sans-serif;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        button:hover {
            background: #2c1810;
            transform: scale(1.02);
        }

        .floating-emojis span {
            position: fixed;
            font-size: 2rem;
            pointer-events: none;
            transition: all 0.1s ease;
        }

        .location-info {
            margin-top: 3rem;
            font-size: 1.1rem;
            line-height: 1.6;
        }

        @media (max-width: 768px) {
            h1 {
                font-size: 2.5rem;
            }
            
            .container {
                padding: 1rem;
            }

            .glass-card {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="floating-emojis">
        <span class="emoji-1" data-value="2">‚òïÔ∏è</span>
        <span class="emoji-2" data-value="3">ü´ñ</span>
        <span class="emoji-3" data-value="1">üç™</span>
        <span class="emoji-4" data-value="4">‚ú®</span>
    </div>

    <div class="container">
        <div class="glass-card">
            <h1>BrewConnect</h1>
            <p class="subtitle">Where every cup tells a story</p>
            
            <div class="menu-grid">
                <div class="menu-item">
                    <h3>Signature Espresso</h3>
                    <p>Single-origin beans, perfectly roasted</p>
                </div>
                <div class="menu-item">
                    <h3>Artisan Pour-Over</h3>
                    <p>Handcrafted precision in every cup</p>
                </div>
                <div class="menu-item">
                    <h3>House Specialties</h3>
                    <p>Seasonal crafted beverages</p>
                </div>
            </div>
        </div>

        <div class="glass-card">
            <h2>Connect With Us</h2>
            <form class="contact-form">
                <input type="text" placeholder="Your name" required>
                <input type="email" placeholder="Your email" required>
                <textarea placeholder="Your message" rows="4" required></textarea>
                <button type="submit">Send Message</button>
            </form>
        </div>

        <div class="glass-card">
            <h2>Visit Us</h2>
            <div class="location-info">
                <p>Located in the heart of the Arts District</p>
                <p>123 Artisan Avenue</p>
                <p>Open Daily: 7am - 8pm</p>
                <p>Near: Gallery Row, Design Quarter</p>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emojis span').forEach((elem) => {
                const speed = elem.getAttribute('data-value')
                const x = (e.clientX * speed) / 100
                const y = (e.clientY * speed) / 100
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`
            })
        })

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.transform = 'scale(1)'
                    entry.target.style.opacity = '1'
                }
            })
        }, {
            threshold: 0.1
        })

        document.querySelectorAll('.glass-card').forEach((card) => {
            observer.observe(card)
        })
    </script>
</body>
</html>
```