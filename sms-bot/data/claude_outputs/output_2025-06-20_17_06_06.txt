I'll help create both the public and admin pages for the Delusional App Generator. Here's the complete implementation:

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <title>WTAF â€“ Delusional App Generator</title>
    <meta property="og:title" content="WTAF by AF" />
    <meta property="og:description" content="Vibecoded chaos, shipped via SMS." />
    <meta property="og:image" content="https://theaf-web.ngrok.io/api/generate-og-cached?user=bart&app=silver-rabbit-painting" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:url" content="https://theaf-web.ngrok.io/bart/silver-rabbit-painting" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        :root {
            --gold: #D4AF37;
            --cream: #FDF5E6;
            --black: #1A1A1A;
            --glass: rgba(255, 255, 255, 0.1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            min-height: 100vh;
            background: linear-gradient(-45deg, #D4AF37, #1A1A1A, #FDF5E6, #B8860B);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            font-family: 'Inter', sans-serif;
            color: var(--cream);
            overflow-x: hidden;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .glass-card {
            background: var(--glass);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 3rem;
            margin: 2rem 0;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 4.5rem;
            margin-bottom: 1rem;
            background: linear-gradient(to right, var(--cream), var(--gold));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .floating-emojis span {
            position: fixed;
            font-size: 3rem;
            pointer-events: none;
            transition: transform 0.1s ease;
        }

        .emoji-1 { top: 20%; left: 20%; }
        .emoji-2 { top: 30%; right: 20%; }
        .emoji-3 { bottom: 30%; left: 25%; }
        .emoji-4 { bottom: 20%; right: 25%; }

        .form-group {
            margin-bottom: 1.5rem;
        }

        input, textarea {
            width: 100%;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid var(--gold);
            border-radius: 8px;
            color: var(--cream);
            font-family: 'Inter', sans-serif;
        }

        button {
            background: var(--gold);
            color: var(--black);
            padding: 1rem 2rem;
            border: none;
            border-radius: 8px;
            font-family: 'Space Grotesk', sans-serif;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s;
        }

        button:hover {
            transform: scale(1.05);
        }

        @media (max-width: 768px) {
            h1 { font-size: 2.5rem; }
            .container { padding: 1rem; }
        }
    </style>
</head>
<body>
    <div class="floating-emojis">
        <span class="emoji-1" data-value="2">ðŸŽ¨</span>
        <span class="emoji-2" data-value="3">âœ¨</span>
        <span class="emoji-3" data-value="1">ðŸš€</span>
        <span class="emoji-4" data-value="4">ðŸ’«</span>
    </div>

    <div class="container">
        <div class="glass-card">
            <h1>Delusional App Generator</h1>
            <p>Transform your wildest digital dreams into reality. Share your vision, and let our AI-powered system create something truly extraordinary.</p>
            
            <form id="appForm">
                <div class="form-group">
                    <input type="text" id="name" placeholder="Your Name" required>
                </div>
                <div class="form-group">
                    <input type="email" id="email" placeholder="Your Email" required>
                </div>
                <div class="form-group">
                    <textarea id="vision" placeholder="Describe your app vision..." rows="4" required></textarea>
                </div>
                <button type="submit">Generate Magic âœ¨</button>
            </form>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emojis span').forEach((elem) => {
                const speed = elem.getAttribute('data-value')
                const x = (e.clientX * speed) / 100
                const y = (e.clientY * speed) / 100
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`
            })
        })

        document.getElementById('appForm').addEventListener('submit', async (e) => {
            e.preventDefault()
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                vision: document.getElementById('vision').value
            }

            try {
                const { data, error } = await supabase.from('wtaf_submissions').insert({
                    app_id: 'delusional_app_generator',
                    submission_data: formData
                })
                if (error) throw error
                alert('Your vision has been received! We\'ll make magic happen.')
                e.target.reset()
            } catch (error) {
                console.error('Error:', error)
                alert('Submission failed. Please try again.')
            }
        })
    </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
    <title>WTAF Admin â€“ Delusional App Generator</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        :root {
            --gold: #D4AF37;
            --cream: #FDF5E6;
            --black: #1A1A1A;
            --glass: rgba(255, 255, 255, 0.1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            min-height: 100vh;
            background: linear-gradient(-45deg, #1A1A1A, #2A2A2A, #3A3A3A, #1A1A1A);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            font-family: 'Inter', sans-serif;
            color: var(--cream);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .glass-card {
            background: var(--glass);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            margin: 2rem 0;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 2.5rem;
            margin-bottom: 1rem;
            color: var(--gold);
        }

        .submissions-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 2rem;
        }

        .submissions-table th,
        .submissions-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid var(--glass);
        }

        .submissions-table th {
            background: var(--glass);
            font-family: 'Space Grotesk', sans-serif;
        }

        .export-btn {
            background: var(--gold);
            color: var(--black);
            padding: 1rem 2rem;
            border: none;
            border-radius: 8px;
            font-family: 'Space Grotesk', sans-serif;
            font-weight: 600;
            cursor: pointer;
            margin-bottom: 1rem;
        }

        @media (max-width: 768px) {
            .container { padding: 1rem; }
            .submissions-table { font-size: 0.9rem; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="glass-card">
            <h1>Admin Dashboard</h1>
            <button class="export-btn" onclick="exportToCSV()">Export to CSV</button>
            <div id="submissionsTable"></div>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

        async function loadSubmissions() {
            try {
                const { data, error } = await supabase.from('wtaf_submissions')
                    .select('*')
                    .eq('app_id', 'delusional_app_generator')
                    .order('created_at', { ascending: false })

                if (error) throw error

                const tableHTML = `
                    <table class="submissions-table">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Vision</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${data.map(row => `
                                <tr>
                                    <td>${new Date(row.created_at).toLocaleDateString()}</td>
                                    <td>${row.submission_data.name}</td>
                                    <td>${row.submission_data.email}</td>
                                    <td>${row.submission_data.vision}</td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                `
                document.getElementById('submissionsTable').innerHTML = tableHTML
            } catch (error) {
                console.error('Error:', error)
                alert('Failed to load submissions')
            }
        }

        function exportToCSV() {
            const table = document.querySelector('.submissions-table')
            const rows = table.querySelectorAll('tr')
            let csvContent = 'data:text/csv;charset=utf-8,'

            rows.forEach(row => {
                const cells = row.querySelectorAll('td, th')
                const rowData = Array.from(cells).map(cell => cell.textContent)
                csvContent += rowData.join(',') + '\n'
            })

            const encodedUri = encodeURI(csvContent)
            const link = document.createElement('a')
            link.setAttribute('href', encodedUri)
            link.setAttribute('download', 'delusional_app_submissions.csv')
            document.body.appendChild(link)
            link.click()
            document.body.removeChild(link)
        }

        loadSubmissions()
    </script>
</body>
</html>
```

This implementation includes both the public-facing submission form and the admin dashboard, separated by the required delimiter. The design features all required elements including floating emojis, animated gradients, glass morphism, and proper font usage. The Supabase integration is set up with proper error handling and CSV export functionality.