```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Snake Game</title>
  <style>
    body, html { margin: 0; padding: 0; overflow: hidden; background: linear-gradient(135deg, #f06, #f79); }
    canvas { display: block; }
    .controls {
      position: fixed;
      bottom: 20px;
      right: 20px;
      display: grid;
      grid-template-columns: repeat(3, 60px);
      grid-template-rows: repeat(3, 60px);
      gap: 10px;
    }
    .button {
      width: 60px;
      height: 60px;
      background: rgba(255, 255, 255, 0.2);
      border: 2px solid rgba(255, 255, 255, 0.4);
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 24px;
      color: white;
      user-select: none;
    }
    .button:active {
      background: rgba(255, 255, 255, 0.4);
    }
  </style>
</head>
<body>
  <canvas id="gameCanvas"></canvas>
  <div class="controls">
    <div></div>
    <div class="button" id="up">⬆️</div>
    <div></div>
    <div class="button" id="left">⬅️</div>
    <div></div>
    <div class="button" id="right">➡️</div>
    <div></div>
    <div class="button" id="down">⬇️</div>
    <div></div>
  </div>
  <script>
    var canvas = document.getElementById('gameCanvas');
    var ctx = canvas.getContext('2d', { alpha: false });
    canvas.width = window.innerWidth * devicePixelRatio;
    canvas.height = window.innerHeight * devicePixelRatio;
    canvas.style.width = window.innerWidth + 'px';
    canvas.style.height = window.innerHeight + 'px';
    ctx.scale(devicePixelRatio, devicePixelRatio);

    var cellSize = 20;
    var gridWidth = Math.floor(window.innerWidth / cellSize);
    var gridHeight = Math.floor(window.innerHeight / cellSize);

    var snake = [{ x: 5, y: 5 }];
    var direction = { x: 1, y: 0 };
    var food = { x: 10, y: 10 };
    var gameOver = false;
    var score = 0;

    function spawnFood() {
      food.x = Math.floor(Math.random() * gridWidth);
      food.y = Math.floor(Math.random() * gridHeight);
      while (snake.some(segment => segment.x === food.x && segment.y === food.y)) {
        food.x = Math.floor(Math.random() * gridWidth);
        food.y = Math.floor(Math.random() * gridHeight);
      }
    }

    function update() {
      var head = { x: snake[0].x + direction.x, y: snake[0].y + direction.y };
      if (head.x < 0 || head.x >= gridWidth || head.y < 0 || head.y >= gridHeight || snake.some(segment => segment.x === head.x && segment.y === head.y)) {
        gameOver = true;
        return;
      }
      snake.unshift(head);
      if (head.x === food.x && head.y === food.y) {
        score++;
        spawnFood();
      } else {
        snake.pop();
      }
    }

    function draw() {
      ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);
      ctx.fillStyle = 'black';
      snake.forEach(segment => {
        ctx.fillRect(segment.x * cellSize, segment.y * cellSize, cellSize, cellSize);
      });
      ctx.fillStyle = 'red';
      ctx.fillRect(food.x * cellSize, food.y * cellSize, cellSize, cellSize);
    }

    function gameLoop(currentTime) {
      if (currentTime - lastTime > gameSpeed) {
        lastTime = currentTime;
        update();
      }
      draw();
      if (!gameOver) requestAnimationFrame(gameLoop);
      else endGame();
    }

    function endGame() {
      ctx.fillStyle = 'white';
      ctx.font = '20px sans-serif';
      ctx.fillText('Game Over! Score: ' + score, window.innerWidth / 2 - 50, window.innerHeight / 2);
      ctx.fillText('Tap to Restart', window.innerWidth / 2 - 50, window.innerHeight / 2 + 30);
      document.addEventListener('click', restartGame, { once: true });
    }

    function restartGame() {
      snake = [{ x: 5, y: 5 }];
      direction = { x: 1, y: 0 };
      spawnFood();
      gameOver = false;
      score = 0;
      requestAnimationFrame(gameLoop);
    }

    var lastTime = 0;
    var gameSpeed = 150;

    document.getElementById('up').addEventListener('click', function() { if (direction.y === 0) direction = { x: 0, y: -1 }; });
    document.getElementById('down').addEventListener('click', function() { if (direction.y === 0) direction = { x: 0, y: 1 }; });
    document.getElementById('left').addEventListener('click', function() { if (direction.x === 0) direction = { x: -1, y: 0 }; });
    document.getElementById('right').addEventListener('click', function() { if (direction.x === 0) direction = { x: 1, y: 0 }; });

    document.addEventListener('keydown', function(e) {
      if (e.key === 'ArrowUp' && direction.y === 0) direction = { x: 0, y: -1 };
      if (e.key === 'ArrowDown' && direction.y === 0) direction = { x: 0, y: 1 };
      if (e.key === 'ArrowLeft' && direction.x === 0) direction = { x: -1, y: 0 };
      if (e.key === 'ArrowRight' && direction.x === 0) direction = { x: 1, y: 0 };
    });

    spawnFood();
    requestAnimationFrame(gameLoop);
  </script>
</body>
</html>
```