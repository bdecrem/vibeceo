I'll help you create an admin panel for managing paintings with a luxurious WTAF design and delete functionality. Here's a complete solution:

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>Paintings Admin Panel</title>
    <style>
        /* Core WTAF Styling */
        body { 
            margin: 0; 
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: white;
            padding: 20px;
        }

        .screen {
            display: none;
            max-width: 800px;
            margin: 0 auto;
        }

        .screen.active {
            display: block;
        }

        /* Luxury Components */
        .glass-card {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 16px;
            padding: 20px;
            margin-bottom: 20px;
            transition: all 0.3s ease;
        }

        .glass-card:hover {
            transform: translateY(-2px);
            background: rgba(255, 255, 255, 0.2);
        }

        .btn {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            min-height: 44px;
            font-size: 16px;
            width: 100%;
            margin: 5px 0;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
        }

        .btn.delete {
            background: linear-gradient(45deg, #ff416c, #ff4b2b);
        }

        input {
            width: 100%;
            padding: 12px;
            margin: 8px 0;
            border: none;
            border-radius: 8px;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            font-size: 16px;
            min-height: 44px;
        }

        input::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .painting-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .painting-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 8px;
            margin-bottom: 10px;
        }

        h1 {
            font-size: 2.5rem;
            margin-bottom: 30px;
            text-align: center;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
        }

        .stats {
            text-align: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
        }
    </style>
</head>
<body>
    <!-- Auth Screens -->
    <div id="welcome-screen" class="screen active">
        <h1>ðŸŽ¨ Paintings Admin Panel</h1>
        <div class="glass-card">
            <button class="btn" onclick="showNewUserScreen()">New Admin</button>
            <button class="btn" onclick="showReturningUserScreen()">Returning Admin</button>
        </div>
    </div>

    <div id="new-user-screen" class="screen">
        <h1>New Admin Setup</h1>
        <div class="glass-card">
            <div id="new-user-info"></div>
            <button class="btn" onclick="registerNewUser()">Register & Enter</button>
            <button class="btn" onclick="showScreen('welcome-screen')">Back</button>
        </div>
    </div>

    <div id="returning-user-screen" class="screen">
        <h1>Returning Admin</h1>
        <div class="glass-card">
            <input type="text" id="username-input" placeholder="Username">
            <input type="text" id="passcode-input" placeholder="Passcode">
            <button class="btn" onclick="loginReturningUser()">Enter</button>
            <button class="btn" onclick="showScreen('welcome-screen')">Back</button>
        </div>
    </div>

    <!-- Main Admin Interface -->
    <div id="main-screen" class="screen">
        <h1>ðŸŽ¨ Paintings Management</h1>
        <div class="stats" id="stats"></div>
        <div class="painting-grid" id="paintings-container"></div>
    </div>

    <script>
        // Authentication helpers
        function showScreen(screenId) {
            document.querySelectorAll('.screen').forEach(screen => {
                screen.classList.remove('active');
            });
            document.getElementById(screenId).classList.add('active');
        }

        function showNewUserScreen() {
            showScreen('new-user-screen');
        }

        function showReturningUserScreen() {
            showScreen('returning-user-screen');
        }

        async function registerNewUser() {
            await initAuth();
            showScreen('main-screen');
            loadPaintings();
        }

        async function loginReturningUser() {
            await initAuth();
            showScreen('main-screen');
            loadPaintings();
        }

        // Paintings Management
        async function loadPaintings() {
            const paintings = await load('painting');
            const stats = document.getElementById('stats');
            stats.textContent = `Total Paintings: ${paintings.length}`;

            const container = document.getElementById('paintings-container');
            container.innerHTML = '';

            paintings.forEach(painting => {
                const card = document.createElement('div');
                card.className = 'glass-card';
                card.innerHTML = `
                    <img src="${painting.imageUrl}" alt="${painting.title}" class="painting-image">
                    <h3>${painting.title}</h3>
                    <p>By ${painting.author}</p>
                    <p>Created: ${new Date(painting.created_at).toLocaleDateString()}</p>
                    <button class="btn delete" onclick="deletePainting('${painting.id}')">
                        Delete Painting
                    </button>
                `;
                container.appendChild(card);
            });
        }

        async function deletePainting(id) {
            if (confirm('Are you sure you want to delete this painting?')) {
                await save('delete', { recordId: id });
                await loadPaintings();
            }
        }

        // Initialize app
        initAuth();
        
        // Auto-refresh data
        setInterval(loadPaintings, 2000);
    </script>
</body>
</html>
```

This admin panel includes:

1. **Authentication System** with new/returning user flows
2. **Luxury WTAF Design** with glassmorphism and gradients
3. **Responsive Grid Layout** for paintings
4. **Delete Functionality** for removing paintings
5. **Auto-Refresh** every 2 seconds
6. **Stats Display** showing total paintings
7. **Mobile-First Design** with touch-friendly buttons

Key features:

- Beautiful glass-card design for each painting
- Confirmation before deletion
- Real-time updates
- Responsive grid that works on all screen sizes
- Full-size images with proper aspect ratio
- Touch-friendly controls (44px minimum)
- Stats counter at the top
- Smooth animations and transitions

The interface shows each painting with:
- Image preview
- Title
- Author
- Creation date
- Delete button

The design follows WTAF luxury principles with:
- Gradient backgrounds
- Glass-effect cards
- Smooth animations
- Large, touch-friendly controls
- Professional typography
- Consistent spacing and layout

Let me know if you need any adjustments or have questions about the implementation!