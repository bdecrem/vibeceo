```html
<!DOCTYPE html>
<html>
<head>
  <title>HELLO WORLD GENERATOR 3000</title>
  <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
  <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      min-height: 100vh;
      overflow: hidden;
      position: relative;
      cursor: pointer;
    }

    #hello {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-family: 'Space Grotesk', sans-serif;
      font-size: 5rem;
      text-align: center;
      transition: all 0.3s ease;
      user-select: none;
      text-shadow: 3px 3px 0px rgba(0,0,0,0.2);
    }

    .floating-emoji {
      position: absolute;
      font-size: 4rem;
      pointer-events: none;
      transition: transform 0.1s ease;
      animation: float 6s ease-in-out infinite;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-20px); }
    }

    #save-btn {
      position: fixed;
      bottom: 20px;
      right: 20px;
      font-size: 2rem;
      background: none;
      border: none;
      cursor: pointer;
      opacity: 0.7;
      transition: all 0.3s ease;
    }

    #save-btn:hover {
      transform: scale(1.2);
      opacity: 1;
    }

    #easter-egg {
      position: fixed;
      bottom: 10px;
      left: 10px;
      font-size: 0.8rem;
      opacity: 0.7;
    }
  </style>
</head>
<body>
  <div id="hello">HELLO WORLD</div>
  <button id="save-btn">‚ù§Ô∏è</button>
  <div id="easter-egg">Generated from: hello world generator request</div>

  <script>
    const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')
    
    const emojis = ['‚ú®', 'üåà', 'üöÄ', 'ü¶Ñ', 'üí´', '‚ö°Ô∏è', 'üåô', 'üîÆ']
    const gradients = [
      'linear-gradient(45deg, #FF2E93, #FF61C7)',
      'linear-gradient(45deg, #3F88FF, #6E7FFF)',
      'linear-gradient(45deg, #FF7C5C, #FFB178)',
      'linear-gradient(45deg, #7C3AED, #A855F7)',
      'linear-gradient(45deg, #00FFC6, #57E2E5)'
    ]

    let currentStyle = {
      gradient: '',
      emojis: [],
      positions: []
    }

    function generateRandomStyle() {
      document.body.style.background = gradients[Math.floor(Math.random() * gradients.length)]
      document.body.innerHTML = `
        <div id="hello">HELLO WORLD</div>
        <button id="save-btn">‚ù§Ô∏è</button>
        <div id="easter-egg">Generated from: hello world generator request</div>
      `

      // Add random emojis
      for(let i = 0; i < 6; i++) {
        const emoji = document.createElement('div')
        emoji.className = 'floating-emoji'
        emoji.textContent = emojis[Math.floor(Math.random() * emojis.length)]
        emoji.style.left = Math.random() * 90 + 'vw'
        emoji.style.top = Math.random() * 90 + 'vh'
        emoji.setAttribute('data-value', Math.random() * 4 + 1)
        document.body.appendChild(emoji)
      }

      currentStyle = {
        gradient: document.body.style.background,
        emojis: Array.from(document.querySelectorAll('.floating-emoji')).map(e => ({
          emoji: e.textContent,
          left: e.style.left,
          top: e.style.top
        }))
      }
    }

    // Mouse parallax
    document.addEventListener('mousemove', (e) => {
      document.querySelectorAll('.floating-emoji').forEach((elem) => {
        const speed = elem.getAttribute('data-value')
        const x = (e.clientX * speed) / 100
        const y = (e.clientY * speed) / 100
        elem.style.transform = `translate(${x}px, ${y}px)`
      })
    })

    // Click to regenerate
    document.body.addEventListener('click', (e) => {
      if(e.target.id !== 'save-btn') {
        generateRandomStyle()
      }
    })

    // Save favorite
    document.body.addEventListener('click', async (e) => {
      if(e.target.id === 'save-btn') {
        try {
          const { data, error } = await supabase.from('wtaf_submissions').insert({
            app_id: 'hello_world_gen',
            submission_data: currentStyle
          })
          if (error) throw error
          alert('Saved your favorite! ‚ú®')
        } catch (error) {
          console.error('Error:', error)
          alert('Failed to save. Try again!')
        }
      }
    })

    // Easter egg - type WTAF
    let typed = ''
    document.addEventListener('keydown', (e) => {
      typed += e.key.toLowerCase()
      if(typed.includes('wtaf')) {
        document.body.style.animation = 'spin 1s linear'
        typed = ''
      }
    })

    // Initial generation
    generateRandomStyle()
  </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html>
<head>
  <title>Hello World Generator Admin</title>
  <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
  <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      padding: 2rem;
      background: #f5f5f5;
    }

    h1 {
      font-family: 'Space Grotesk', sans-serif;
      margin-bottom: 2rem;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      background: white;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    th, td {
      padding: 1rem;
      text-align: left;
      border-bottom: 1px solid #eee;
    }

    th {
      background: #333;
      color: white;
    }

    .preview {
      width: 200px;
      height: 100px;
      border-radius: 4px;
    }

    .export-btn {
      margin-bottom: 1rem;
      padding: 0.5rem 1rem;
      background: #333;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .export-btn:hover {
      background: #555;
    }
  </style>
</head>
<body>
  <h1>Saved Hello Worlds</h1>
  <button class="export-btn" onclick="exportCSV()">Export to CSV</button>
  <table id="submissions">
    <thead>
      <tr>
        <th>Date</th>
        <th>Preview</th>
        <th>Emojis Used</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>

  <script>
    const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

    async function loadSubmissions() {
      try {
        const { data, error } = await supabase.from('wtaf_submissions')
          .select('*')
          .eq('app_id', 'hello_world_gen')
          .order('created_at', { ascending: false })
        
        if (error) throw error

        const tbody = document.querySelector('tbody')
        tbody.innerHTML = ''

        data.forEach(row => {
          const tr = document.createElement('tr')
          tr.innerHTML = `
            <td>${new Date(row.created_at).toLocaleString()}</td>
            <td><div class="preview" style="background: ${row.submission_data.gradient}"></div></td>
            <td>${row.submission_data.emojis.map(e => e.emoji).join(' ')}</td>
          `
          tbody.appendChild(tr)
        })
      } catch (error) {
        console.error('Error:', error)
        alert('Failed to load submissions')
      }
    }

    function exportCSV() {
      try {
        const rows = Array.from(document.querySelectorAll('tbody tr'))
        const csvContent = 'Date,Gradient,Emojis\n' + rows.map(row => {
          const cells = Array.from(row.cells)
          return `${cells[0].textContent},${cells[1].querySelector('.preview').style.background},${cells[2].textContent}`
        }).join('\n')

        const blob = new Blob([csvContent], { type: 'text/csv' })
        const url = URL.createObjectURL(blob)
        const a = document.createElement('a')
        a.href = url
        a.download = 'hello_world_styles.csv'
        a.click()
      } catch (error) {
        console.error('Error:', error)
        alert('Failed to export CSV')
      }
    }

    // Load submissions on page load
    loadSubmissions()
  </script>
</body>
</html>
```