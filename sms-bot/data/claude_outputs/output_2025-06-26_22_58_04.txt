```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WTAF SMS Portal</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #0f0f0f;
            color: #fff;
            min-height: 100vh;
            overflow-x: hidden;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        h1, h2, h3 {
            font-family: 'Space Grotesk', sans-serif;
            background: linear-gradient(90deg, #FF2E93, #FF61C7, #FFA5E5);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: gradient 15s ease infinite;
            background-size: 400% 400%;
        }

        .hero {
            text-align: center;
            padding: 4rem 0;
            position: relative;
        }

        .hero h1 {
            font-size: 4rem;
            margin-bottom: 1rem;
        }

        .floating-emoji {
            position: absolute;
            font-size: 3rem;
            pointer-events: none;
            transition: transform 0.1s ease;
        }

        #emoji1 { top: 10%; left: 10%; animation: float 6s ease-in-out infinite; }
        #emoji2 { top: 20%; right: 15%; animation: float 7s ease-in-out infinite 1s; }
        #emoji3 { bottom: 30%; left: 20%; animation: float 5s ease-in-out infinite 0.5s; }
        #emoji4 { bottom: 20%; right: 25%; animation: float 8s ease-in-out infinite 1.5s; }

        .sms-form {
            background: rgba(255,255,255,0.05);
            padding: 2rem;
            border-radius: 15px;
            backdrop-filter: blur(10px);
            max-width: 500px;
            margin: 0 auto;
            border: 1px solid rgba(255,255,255,0.1);
        }

        input {
            width: 100%;
            padding: 1rem;
            margin: 0.5rem 0;
            border: none;
            border-radius: 8px;
            background: rgba(255,255,255,0.1);
            color: white;
            font-family: 'Inter', sans-serif;
        }

        button {
            width: 100%;
            padding: 1rem;
            margin-top: 1rem;
            border: none;
            border-radius: 8px;
            background: linear-gradient(90deg, #FF2E93, #FF61C7);
            color: white;
            font-family: 'Space Grotesk', sans-serif;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.2s;
        }

        button:hover {
            transform: scale(1.02);
            animation: pulse 1s infinite;
        }

        .success-message {
            display: none;
            background: rgba(0,255,0,0.1);
            padding: 1rem;
            border-radius: 8px;
            margin-top: 1rem;
        }

        .call-to-text {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: linear-gradient(90deg, #FF2E93, #FF61C7);
            padding: 1rem;
            border-radius: 8px;
            font-weight: bold;
            animation: float 4s ease-in-out infinite;
        }

        .prompt-display {
            position: fixed;
            bottom: 10px;
            left: 10px;
            font-size: 0.8rem;
            opacity: 0.7;
        }

        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-20px); }
            100% { transform: translateY(0px); }
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="hero">
            <h1>SMS CHAOS PORTAL ðŸ“±âœ¨</h1>
            <p>Like a group chat had a baby with the future</p>
            <div class="floating-emoji" id="emoji1" data-value="2">ðŸ“±</div>
            <div class="floating-emoji" id="emoji2" data-value="4">âœ¨</div>
            <div class="floating-emoji" id="emoji3" data-value="3">ðŸ’«</div>
            <div class="floating-emoji" id="emoji4" data-value="5">ðŸš€</div>
        </div>

        <div class="sms-form">
            <h2>Send Your Message to the Void</h2>
            <form id="smsForm">
                <input type="text" id="name" placeholder="Your name (or your alter ego)" required>
                <input type="tel" id="phone" placeholder="Your phone number" required>
                <input type="text" id="message" placeholder="Drop your wildest message" required>
                <button type="submit">BEAM IT UP ðŸš€</button>
            </form>
            <div id="successMessage" class="success-message">
                Message sent to the digital cosmos! âœ¨
            </div>
        </div>
    </div>

    <div class="call-to-text">
        ðŸ“± Text START to +1-866-330-0015 to get initiated
    </div>

    <div class="prompt-display">
        Generated from: SENDER_PHONE: +15551234567
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY');

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emoji').forEach((elem) => {
                const speed = elem.getAttribute('data-value') || 2;
                const x = (e.clientX * speed) / 100;
                const y = (e.clientY * speed) / 100;
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`;
            });
        });

        let logoClicks = 0;
        document.querySelector('h1').addEventListener('click', () => {
            logoClicks++;
            if(logoClicks === 5) {
                document.body.style.animation = 'gradient 5s ease infinite';
                alert('ðŸŽ‰ WTAF SMS DIMENSION UNLOCKED!');
            }
        });

        document.getElementById('smsForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = {
                name: document.getElementById('name').value,
                phone: document.getElementById('phone').value,
                message: document.getElementById('message').value
            };

            try {
                const { data, error } = await supabase.from('wtaf_submissions').insert({
                    app_id: 'sms_portal',
                    submission_data: formData
                });

                if (error) throw error;

                document.getElementById('successMessage').style.display = 'block';
                document.getElementById('smsForm').reset();
                
                setTimeout(() => {
                    document.getElementById('successMessage').style.display = 'none';
                }, 3000);

            } catch (error) {
                console.error('Error:', error);
                alert('Submission failed. Please try again.');
            }
        });
    </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WTAF SMS Portal Admin</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #0f0f0f;
            color: #fff;
            min-height: 100vh;
        }

        .admin-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            background: linear-gradient(90deg, #3F88FF, #6E7FFF, #ABF7FF);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 2rem;
        }

        .admin-controls {
            margin-bottom: 2rem;
            display: flex;
            gap: 1rem;
        }

        button {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 8px;
            background: linear-gradient(90deg, #3F88FF, #6E7FFF);
            color: white;
            font-family: 'Space Grotesk', sans-serif;
            cursor: pointer;
            transition: transform 0.2s;
        }

        button:hover {
            transform: scale(1.05);
        }

        .submissions-table {
            width: 100%;
            border-collapse: collapse;
            background: rgba(255,255,255,0.05);
            border-radius: 15px;
            overflow: hidden;
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        th {
            background: rgba(255,255,255,0.1);
            font-family: 'Space Grotesk', sans-serif;
        }

        tr:hover {
            background: rgba(255,255,255,0.1);
        }

        .loading {
            text-align: center;
            padding: 2rem;
            font-style: italic;
        }

        .error {
            background: rgba(255,0,0,0.1);
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="admin-container">
        <h1>SMS Portal Admin Dashboard ðŸŽ®</h1>
        
        <div class="admin-controls">
            <button onclick="refreshData()">Refresh Data ðŸ”„</button>
            <button onclick="exportCSV()">Export CSV ðŸ“Š</button>
        </div>

        <div id="error" class="error" style="display: none;"></div>
        
        <table class="submissions-table">
            <thead>
                <tr>
                    <th>Timestamp</th>
                    <th>Name</th>
                    <th>Phone</th>
                    <th>Message</th>
                </tr>
            </thead>
            <tbody id="submissionsTable">
                <tr>
                    <td colspan="4" class="loading">Loading submissions...</td>
                </tr>
            </tbody>
        </table>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY');

        async function loadSubmissions() {
            try {
                const { data, error } = await supabase.from('wtaf_submissions')
                    .select('*')
                    .eq('app_id', 'sms_portal')
                    .order('created_at', { ascending: false });

                if (error) throw error;

                const tableBody = document.getElementById('submissionsTable');
                tableBody.innerHTML = '';

                data.forEach(row => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${new Date(row.created_at).toLocaleString()}</td>
                        <td>${row.submission_data.name}</td>
                        <td>${row.submission_data.phone}</td>
                        <td>${row.submission_data.message}</td>
                    `;
                    tableBody.appendChild(tr);
                });

            } catch (error) {
                console.error('Error:', error);
                document.getElementById('error').textContent = 'Failed to load submissions';
                document.getElementById('error').style.display = 'block';
            }
        }

        function exportCSV() {
            try {
                const table = document.querySelector('.submissions-table');
                const rows = Array.from(table.querySelectorAll('tr'));
                
                const csvContent = rows.map(row => {
                    return Array.from(row.cells)
                        .map(cell => `"${cell.textContent.replace(/"/g, '""')}"`)
                        .join(',');
                }).join('\n');

                const blob = new Blob([csvContent], { type: 'text/csv' });
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'sms_submissions.csv';
                a.click();
                URL.revokeObjectURL(url);

            } catch (error) {
                console.error('Error:', error);
                alert('Failed to export CSV');
            }
        }

        function refreshData() {
            loadSubmissions();
        }

        // Initial load
        loadSubmissions();

        // Refresh every 30 seconds
        setInterval(loadSubmissions, 30000);
    </script>
</body>
</html>
```