```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shanghai Night | Exclusive Party RSVP</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(-45deg, #FF1B6B, #45CAFF, #FF1B6B, #45CAFF);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            min-height: 100vh;
            color: white;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 40px 20px;
            position: relative;
            z-index: 1;
        }

        .glass-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            margin: 20px 0;
            border: 1px solid rgba(255, 255, 255, 0.2);
            transform: translateY(50px);
            opacity: 0;
            transition: all 0.6s ease;
        }

        .glass-card.visible {
            transform: translateY(0);
            opacity: 1;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 4rem;
            margin-bottom: 20px;
            background: linear-gradient(to right, #fff, #ffe1e9);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        h2 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 2rem;
            margin-bottom: 20px;
        }

        p {
            font-size: 1.1rem;
            line-height: 1.6;
            margin-bottom: 20px;
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        input {
            padding: 15px;
            border: none;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(5px);
            color: white;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        input:focus {
            outline: none;
            background: rgba(255, 255, 255, 0.2);
        }

        button {
            padding: 15px 30px;
            border: none;
            border-radius: 10px;
            background: white;
            color: #FF1B6B;
            font-weight: bold;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        button:hover {
            transform: scale(1.02);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .floating-emojis span {
            position: fixed;
            font-size: 3rem;
            pointer-events: none;
            transition: all 0.1s ease;
        }

        .success-message {
            display: none;
            text-align: center;
            padding: 20px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            margin-top: 20px;
        }

        @media (max-width: 768px) {
            h1 { font-size: 2.5rem; }
            .container { padding: 20px; }
            .glass-card { padding: 20px; }
        }
    </style>
</head>
<body>
    <div class="floating-emojis">
        <span class="emoji-1" data-value="2">ðŸŽ‰</span>
        <span class="emoji-2" data-value="3">âœ¨</span>
        <span class="emoji-3" data-value="1">ðŸ¥‚</span>
        <span class="emoji-4" data-value="4">ðŸ—¼</span>
    </div>

    <div class="container">
        <div class="glass-card">
            <h1>Shanghai Night</h1>
            <h2>Next Friday at 11PM</h2>
            <p>Join us for an exclusive night of luxury and excitement at Shanghai's most prestigious venue, nestled between The Bund and Xintiandi. Limited spots available.</p>
        </div>

        <div class="glass-card">
            <h2>RSVP Now</h2>
            <form id="rsvp-form">
                <input type="text" placeholder="Your Name" required name="name">
                <input type="email" placeholder="Email Address" required name="email">
                <input type="tel" placeholder="Phone Number" required name="phone">
                <button type="submit">Secure Your Spot</button>
            </form>
            <div class="success-message">
                <h2>ðŸŽ‰ See you there!</h2>
                <p>Check your email for confirmation details.</p>
            </div>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emojis span').forEach((elem) => {
                const speed = elem.getAttribute('data-value')
                const x = (e.clientX * speed) / 100
                const y = (e.clientY * speed) / 100
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`
            })
        })

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible')
                }
            })
        })

        document.querySelectorAll('.glass-card').forEach((card) => {
            observer.observe(card)
        })

        document.getElementById('rsvp-form').addEventListener('submit', async (e) => {
            e.preventDefault()
            const form = e.target
            const formData = {
                name: form.name.value,
                email: form.email.value,
                phone: form.phone.value
            }

            try {
                const { data, error } = await supabase.from('wtaf_submissions').insert({
                    app_id: 'brief_admin_table_id_here',
                    submission_data: formData
                })
                
                if (error) throw error
                
                form.style.display = 'none'
                document.querySelector('.success-message').style.display = 'block'
            } catch (error) {
                console.error('Error:', error)
                alert('Submission failed. Please try again.')
            }
        })
    </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shanghai Night | Admin Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(-45deg, #FF1B6B, #45CAFF, #FF1B6B, #45CAFF);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            min-height: 100vh;
            color: white;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        .glass-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            margin: 20px 0;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 2.5rem;
            margin-bottom: 20px;
        }

        .controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        button {
            padding: 12px 24px;
            border: none;
            border-radius: 10px;
            background: white;
            color: #FF1B6B;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        button:hover {
            transform: scale(1.02);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(5px);
            border-radius: 10px;
        }

        th, td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        th {
            font-family: 'Space Grotesk', sans-serif;
            font-weight: bold;
            background: rgba(255, 255, 255, 0.1);
        }

        tr:hover {
            background: rgba(255, 255, 255, 0.05);
        }

        .floating-emojis span {
            position: fixed;
            font-size: 3rem;
            pointer-events: none;
            transition: all 0.1s ease;
        }

        @media (max-width: 768px) {
            .container { padding: 20px; }
            .glass-card { padding: 20px; }
            .controls { flex-direction: column; gap: 10px; }
        }
    </style>
</head>
<body>
    <div class="floating-emojis">
        <span class="emoji-1" data-value="2">ðŸ“Š</span>
        <span class="emoji-2" data-value="3">ðŸ“ˆ</span>
        <span class="emoji-3" data-value="1">ðŸ’«</span>
        <span class="emoji-4" data-value="4">âœ¨</span>
    </div>

    <div class="container">
        <div class="glass-card">
            <h1>RSVP Management Dashboard</h1>
            <div class="controls">
                <h2>Total RSVPs: <span id="rsvp-count">0</span></h2>
                <button onclick="exportCSV()">Export to CSV</button>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Timestamp</th>
                    </tr>
                </thead>
                <tbody id="submissions-table"></tbody>
            </table>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emojis span').forEach((elem) => {
                const speed = elem.getAttribute('data-value')
                const x = (e.clientX * speed) / 100
                const y = (e.clientY * speed) / 100
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`
            })
        })

        let submissionsData = []

        async function loadSubmissions() {
            try {
                const { data, error } = await supabase.from('wtaf_submissions')
                    .select('*')
                    .eq('app_id', 'brief_admin_table_id_here')
                    .order('created_at', { ascending: false })

                if (error) throw error

                submissionsData = data
                document.getElementById('rsvp-count').textContent = data.length

                const tableBody = document.getElementById('submissions-table')
                tableBody.innerHTML = data.map(row => `
                    <tr>
                        <td>${row.submission_data.name}</td>
                        <td>${row.submission_data.email}</td>
                        <td>${row.submission_data.phone}</td>
                        <td>${new Date(row.created_at).toLocaleString()}</td>
                    </tr>
                `).join('')
            } catch (error) {
                console.error('Error:', error)
                alert('Failed to load submissions')
            }
        }

        function exportCSV() {
            const csvContent = 'Name,Email,Phone,Timestamp\n' + submissionsData.map(row => 
                `${row.submission_data.name},${row.submission_data.email},${row.submission_data.phone},${new Date(row.created_at).toLocaleString()}`
            ).join('\n')

            const blob = new Blob([csvContent], { type: 'text/csv' })
            const url = URL.createObjectURL(blob)
            const a = document.createElement('a')
            a.href = url
            a.download = 'shanghai-party-rsvps.csv'
            a.click()
        }

        loadSubmissions()
    </script>
</body>
</html>
```