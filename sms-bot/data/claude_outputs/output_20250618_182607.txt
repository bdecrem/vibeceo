```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Hello World Hub</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Inter:wght@400;500&display=swap" rel="stylesheet">
  <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    body {
      font-family: 'Inter', sans-serif;
      color: #333;
      background: linear-gradient(45deg, #FFE74C, #FF5964, #35A7FF);
      background-size: 400% 400%;
      animation: gradient 15s ease infinite;
      padding: 2rem;
      text-align: center;
    }
    @keyframes gradient {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }
    h1 {
      font-family: 'Space Grotesk', sans-serif; 
      font-size: 3rem;
      margin-bottom: 1rem;
      color: #FFF;
    }
    main {
      max-width: 600px;
      margin: 0 auto;
    }
    .glass {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      border: 2px solid rgba(255, 255, 255, 0.2);
      border-radius: 10px;
      padding: 2rem;
      margin-bottom: 2rem; 
    }
    input, button {
      font-size: 1rem;
      padding: 0.5rem 1rem;
      border-radius: 50px;
      border: none;
      margin: 0.5rem;
    }
    button {
      background: #FFF;
      color: #FF5964;
      font-weight: bold;
      cursor: pointer;
      transition: transform 0.3s ease;
    }
    button:hover {
      transform: scale(1.05);
    }
    #messages {
      text-align: left;
      height: 300px;
      overflow-y: auto;
    }
    .message {
      background: #FFF;
      padding: 1rem;
      margin-bottom: 1rem;
      border-radius: 10px;
      animation: fadeIn 0.5s ease;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    .floating-emojis {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
    }
    .floating-emojis span {
      position: absolute;
      font-size: 2rem;
      animation: floatEmoji 5s linear infinite;
    }
    @keyframes floatEmoji {
      0% { transform: translate(0, 0); }
      100% { transform: translate(100vw, 100vh); }
    }
    .emoji-1 { left: 10%; top: 20%; }
    .emoji-2 { right: 20%; top: 10%; }
    .emoji-3 { left: 30%; bottom: 10%; }
    .emoji-4 { right: 10%; bottom: 20%; }
  </style>
</head>
<body>
  <h1>Hello World Hub üëãüåç</h1>
  
  <main>
    <div class="glass">
      <h2>Send a Message</h2>
      <form id="send-form">
        <input type="text" id="message-input" placeholder="Type your message..." required>
        <button type="submit">Send üíå</button>
      </form>
    </div>
    
    <div class="glass">
      <h2>Received Messages</h2>
      <div id="messages"></div>
    </div>
  </main>
  
  <div class="floating-emojis">
    <span class="emoji-1" data-value="2">üéâ</span>
    <span class="emoji-2" data-value="3">‚ú®</span>  
    <span class="emoji-3" data-value="1">ü•Ç</span>
    <span class="emoji-4" data-value="4">üåà</span>
  </div>

  <script>
    const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')
    
    const sendForm = document.getElementById('send-form')
    const messageInput = document.getElementById('message-input')
    const messagesDiv = document.getElementById('messages')
    
    sendForm.addEventListener('submit', async (e) => {
      e.preventDefault()
      
      const message = messageInput.value
      
      try {
        const { data, error } = await supabase.from('wtaf_submissions').insert({
          app_id: 'hello_world_hub',
          submission_data: { message }
        })
        if (error) throw error
        messageInput.value = ''
        alert('Message sent! üì®')
      } catch (error) {
        console.error('Error:', error)
        alert('Failed to send message. Please try again.')
      }
    })

    async function fetchMessages() {
      try {
        const { data, error } = await supabase.from('wtaf_submissions')
          .select('*')
          .eq('app_id', 'hello_world_hub')
          .order('created_at', { ascending: false })
        if (error) throw error
        
        messagesDiv.innerHTML = ''
        data.forEach(row => {
          const message = document.createElement('div')
          message.classList.add('message')
          message.textContent = row.submission_data.message
          messagesDiv.appendChild(message)
        })
      } catch (error) {
        console.error('Error:', error)  
        alert('Failed to load messages')
      }
    }

    fetchMessages()
    setInterval(fetchMessages, 5000)

    document.addEventListener('mousemove', (e) => {
      document.querySelectorAll('.floating-emojis span').forEach((elem) => {  
        const speed = elem.getAttribute('data-value')
        const x = (e.clientX * speed) / 100
        const y = (e.clientY * speed) / 100
        elem.style.transform = `translateX(${x}px) translateY(${y}px)` 
      })
    })
  </script>
</body>
</html>
```