I'll create an admin page to view and delete paintings. Since this needs both a public and admin view, I'll create two pages separated by the admin delimiter.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>Paintings Gallery</title>
    <style>
        * { box-sizing: border-box; }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: #0a0a0a;
            color: #fff;
            margin: 0;
            padding: 10px;
            font-size: 16px;
        }

        .app-container {
            max-width: 800px;
            margin: 0 auto;
            background: #1a1a1a;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 0 40px rgba(0,0,0,0.5);
        }

        h1 {
            font-size: 24px;
            margin: 0 0 20px 0;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .painting-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .painting-card {
            background: #2a2a2a;
            border-radius: 8px;
            padding: 15px;
            position: relative;
        }

        .painting-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 4px;
            margin-bottom: 10px;
        }

        .painting-info {
            margin-bottom: 10px;
        }

        .delete-btn {
            background: #ff0066;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            width: 100%;
            min-height: 44px;
        }

        .delete-btn:hover {
            background: #ff1a75;
        }

        .stats {
            background: #2a2a2a;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        @media (min-width: 600px) {
            body { padding: 20px; }
            .app-container { padding: 30px; }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <h1>Public Gallery</h1>
        <p>This is the public view of the gallery. Switch to admin view to manage paintings.</p>
    </div>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>Paintings Admin</title>
    <style>
        * { box-sizing: border-box; }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: #0a0a0a;
            color: #fff;
            margin: 0;
            padding: 10px;
            font-size: 16px;
        }

        .app-container {
            max-width: 800px;
            margin: 0 auto;
            background: #1a1a1a;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 0 40px rgba(0,0,0,0.5);
        }

        h1 {
            font-size: 24px;
            margin: 0 0 20px 0;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .painting-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .painting-card {
            background: #2a2a2a;
            border-radius: 8px;
            padding: 15px;
            position: relative;
        }

        .painting-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 4px;
            margin-bottom: 10px;
        }

        .painting-info {
            margin-bottom: 10px;
        }

        .delete-btn {
            background: #ff0066;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            width: 100%;
            min-height: 44px;
        }

        .delete-btn:hover {
            background: #ff1a75;
        }

        .stats {
            background: #2a2a2a;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        @media (min-width: 600px) {
            body { padding: 20px; }
            .app-container { padding: 30px; }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <h1>Paintings Admin</h1>
        
        <div class="stats">
            <p>Total Paintings: <span id="painting-count">0</span></p>
        </div>

        <div id="painting-grid" class="painting-grid">
            <!-- Paintings will be loaded here -->
        </div>
    </div>

    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY');
        
        let pollingInterval;

        async function loadPaintings() {
            try {
                const { data, error } = await supabase
                    .from('wtaf_submissions')
                    .select('*')
                    .eq('app_id', 'paintings_gallery')
                    .order('created_at', { ascending: false });

                if (error) throw error;
                
                document.getElementById('painting-count').textContent = data.length;
                
                const grid = document.getElementById('painting-grid');
                grid.innerHTML = data.map(painting => `
                    <div class="painting-card">
                        <img src="${painting.submission_data.image_url}" 
                             alt="${painting.submission_data.title}"
                             class="painting-image">
                        <div class="painting-info">
                            <h3>${painting.submission_data.title}</h3>
                            <p>By ${painting.author}</p>
                            <p>Added: ${new Date(painting.created_at).toLocaleDateString()}</p>
                        </div>
                        <button class="delete-btn" 
                                onclick="deletePainting(${painting.id})">
                            Delete Painting
                        </button>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error loading paintings:', error);
                alert('Failed to load paintings');
            }
        }

        async function deletePainting(id) {
            if (!confirm('Are you sure you want to delete this painting?')) return;
            
            try {
                const { error } = await supabase
                    .from('wtaf_submissions')
                    .delete()
                    .eq('id', id);
                
                if (error) throw error;
                
                await loadPaintings();
            } catch (error) {
                console.error('Error deleting painting:', error);
                alert('Failed to delete painting');
            }
        }

        function startPolling() {
            loadPaintings();
            pollingInterval = setInterval(loadPaintings, 2000);
        }

        function stopPolling() {
            if (pollingInterval) clearInterval(pollingInterval);
        }

        // Start the app
        startPolling();

        // Cleanup on page hide/unload
        document.addEventListener('visibilitychange', () => {
            if (document.hidden) {
                stopPolling();
            } else {
                startPolling();
            }
        });
    </script>
</body>
</html>
```

This creates a two-page system:

1. A simple public view that shows the gallery exists
2. An admin interface that:
   - Shows all paintings in a responsive grid
   - Displays painting details (title, author, date)
   - Shows total painting count
   - Allows deletion with confirmation
   - Auto-refreshes every 2 seconds
   - Is fully mobile-responsive
   - Uses the WTAF design system

The admin page assumes paintings have this structure:
```javascript
{
    submission_data: {
        title: "Painting Title",
        image_url: "https://...",
        // other painting data
    },
    author: "User123",
    created_at: "2023-..."
}
```

The interface will automatically adjust its layout based on screen size and follows all WTAF design guidelines including minimum touch target sizes and proper font sizing.