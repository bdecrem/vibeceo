Here's a simple journal app that allows users to create, view, and save journal entries:

```html
<!DOCTYPE html>
<html>
<head>
    <title>My Journal</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            max-width: 800px; 
            margin: 0 auto; 
            padding: 20px;
            background-color: #f5f5f5;
        }
        .entry-form {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        .entry {
            background: white;
            padding: 20px;
            margin: 10px 0;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        textarea {
            width: 100%;
            height: 150px;
            margin: 10px 0;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-family: inherit;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .entry-date {
            color: #666;
            font-size: 0.9em;
            margin-bottom: 10px;
        }
        .entry-text {
            white-space: pre-wrap;
        }
    </style>
</head>
<body>
    <h1>My Journal</h1>
    
    <div class="entry-form">
        <h2>New Entry</h2>
        <textarea id="entryText" placeholder="Write your thoughts..."></textarea>
        <button onclick="saveEntry()">Save Entry</button>
    </div>

    <h2>Previous Entries</h2>
    <div id="entriesList"></div>

    <script>
        // Initialize authentication
        initAuth();

        // Load entries when page loads
        window.addEventListener('load', loadEntries);

        async function saveEntry() {
            const entryText = document.getElementById('entryText').value.trim();
            if (!entryText) return;

            const entry = {
                text: entryText,
                date: new Date().toISOString(),
            };

            try {
                await save('journal-entries', entry);
                document.getElementById('entryText').value = '';
                await loadEntries();
            } catch (error) {
                console.error('Error saving entry:', error);
                alert('Failed to save entry. Please try again.');
            }
        }

        async function loadEntries() {
            try {
                const entries = await load('journal-entries') || [];
                const entriesList = document.getElementById('entriesList');
                
                // Sort entries by date, newest first
                entries.sort((a, b) => new Date(b.date) - new Date(a.date));

                entriesList.innerHTML = entries.map(entry => `
                    <div class="entry">
                        <div class="entry-date">
                            ${new Date(entry.date).toLocaleString()}
                        </div>
                        <div class="entry-text">
                            ${entry.text}
                        </div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error loading entries:', error);
                document.getElementById('entriesList').innerHTML = 
                    '<p>Error loading entries. Please refresh the page.</p>';
            }
        }
    </script>
</body>
</html>
```

This journal app includes the following features:

1. A text area to write new journal entries
2. A save button to store entries
3. Display of all previous entries, sorted by date (newest first)
4. Simple, clean styling with cards for each entry
5. Date and time stamp for each entry
6. Error handling for save and load operations

Key functionality:
- Uses `initAuth()` for authentication
- Saves entries using `save('journal-entries', entry)`
- Loads entries using `load('journal-entries')`
- Automatically refreshes the entries list after saving
- Preserves whitespace in entries using `white-space: pre-wrap`
- Responsive design that works on both desktop and mobile

To use the app:
1. Simply write your thoughts in the text area
2. Click "Save Entry" to save your journal entry
3. Your entry will appear below in the "Previous Entries" section
4. All entries are preserved and will reload when you return to the page

The app has a clean, modern design with subtle shadows and spacing to make it easy to read and use. Each entry is clearly separated and includes a timestamp.