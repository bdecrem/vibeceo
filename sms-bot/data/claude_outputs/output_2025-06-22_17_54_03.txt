```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sticky Note Chat | WTAF</title>
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --gradient: linear-gradient(45deg, #FF2E93, #FF61C7, #FFA5E5);
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #111;
            color: white;
            min-height: 100vh;
            overflow-x: hidden;
        }

        h1, h2, h3 {
            font-family: 'Space Grotesk', sans-serif;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
            position: relative;
        }

        .onboarding {
            text-align: center;
            padding: 4rem 2rem;
        }

        .onboarding h1 {
            font-size: 3rem;
            margin-bottom: 2rem;
            background: var(--gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .choice-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin: 2rem 0;
        }

        button {
            background: var(--gradient);
            border: none;
            padding: 1rem 2rem;
            color: white;
            border-radius: 50px;
            font-family: 'Space Grotesk';
            cursor: pointer;
            transition: transform 0.2s;
        }

        button:hover {
            transform: scale(1.05);
        }

        .emoji-select {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));
            gap: 1rem;
            margin: 2rem 0;
        }

        .emoji-option {
            font-size: 2rem;
            padding: 1rem;
            cursor: pointer;
            border-radius: 10px;
            transition: transform 0.2s;
        }

        .emoji-option:hover {
            transform: scale(1.2);
            background: rgba(255,255,255,0.1);
        }

        .chat-container {
            display: none;
            background: rgba(0,0,0,0.5);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
        }

        .messages {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            max-height: 60vh;
            overflow-y: auto;
            padding: 1rem;
        }

        .message {
            background: rgba(255,255,255,0.1);
            padding: 1rem;
            border-radius: 10px;
            animation: slideIn 0.3s ease-out;
            transform-origin: top;
        }

        .message-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .input-container {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        input {
            flex: 1;
            padding: 1rem;
            border: none;
            border-radius: 50px;
            background: rgba(255,255,255,0.1);
            color: white;
        }

        .floating-emoji {
            position: fixed;
            font-size: 2rem;
            pointer-events: none;
            transition: transform 0.1s ease-out;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-20px); }
        }

        .call-to-text {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--gradient);
            padding: 1rem;
            border-radius: 10px;
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="onboarding" id="onboarding">
            <h1>✨ Sticky Note Chat ✨</h1>
            <p>Your personal space to leave notes for each other</p>
            
            <div class="choice-buttons">
                <button onclick="showStartFlow()">Start New Space</button>
                <button onclick="showJoinFlow()">Join Existing</button>
            </div>

            <div id="emoji-select" style="display:none">
                <h2>Choose your emoji identity:</h2>
                <div class="emoji-select">
                    <div class="emoji-option" onclick="selectEmoji('🌸')">🌸</div>
                    <div class="emoji-option" onclick="selectEmoji('🌟')">🌟</div>
                    <div class="emoji-option" onclick="selectEmoji('🦋')">🦋</div>
                    <div class="emoji-option" onclick="selectEmoji('🌈')">🌈</div>
                    <div class="emoji-option" onclick="selectEmoji('🌙')">🌙</div>
                    <div class="emoji-option" onclick="selectEmoji('⚡')">⚡</div>
                </div>
            </div>

            <div id="passcode-display" style="display:none"></div>
            <div id="passcode-input" style="display:none">
                <input type="text" id="passcode" placeholder="Enter passcode">
                <button onclick="validatePasscode()">Join Space</button>
            </div>
        </div>

        <div class="chat-container" id="chat">
            <div class="messages" id="messages"></div>
            
            <div class="input-container">
                <input type="text" id="message-input" placeholder="Write your note...">
                <button onclick="sendMessage()">Cast It ✨</button>
            </div>
        </div>
    </div>

    <div class="call-to-text">
        📱 Text START to +1-866-330-0015 to get initiated
    </div>

    <script>
        const APP_ID = 'sticky_note_chat_v1';
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY');
        
        let currentEmoji = '';
        let currentPasscode = '';

        // Floating emoji setup
        const emojis = ['✨', '🌟', '💫', '⭐'];
        emojis.forEach(emoji => {
            const el = document.createElement('div');
            el.className = 'floating-emoji';
            el.textContent = emoji;
            el.style.left = Math.random() * 100 + 'vw';
            el.style.top = Math.random() * 100 + 'vh';
            el.setAttribute('data-value', Math.random() * 4 + 1);
            document.body.appendChild(el);
        });

        // Parallax effect
        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emoji').forEach(emoji => {
                const speed = emoji.getAttribute('data-value');
                const x = (window.innerWidth - e.pageX * speed) / 100;
                const y = (window.innerHeight - e.pageY * speed) / 100;
                emoji.style.transform = `translateX(${x}px) translateY(${y}px)`;
            });
        });

        function showStartFlow() {
            document.getElementById('emoji-select').style.display = 'block';
            document.querySelector('.choice-buttons').style.display = 'none';
        }

        function showJoinFlow() {
            document.getElementById('passcode-input').style.display = 'block';
            document.getElementById('emoji-select').style.display = 'block';
            document.querySelector('.choice-buttons').style.display = 'none';
        }

        async function selectEmoji(emoji) {
            currentEmoji = emoji;
            if (!currentPasscode) {
                currentPasscode = generatePasscode();
                document.getElementById('passcode-display').innerHTML = 
                    `Your passcode is: <strong>${currentPasscode}</strong>`;
                document.getElementById('passcode-display').style.display = 'block';
                
                await saveUser(emoji, currentPasscode);
                showChat();
            }
        }

        function generatePasscode() {
            return Math.random().toString(36).substring(2, 8);
        }

        async function validatePasscode() {
            const inputPasscode = document.getElementById('passcode').value;
            const isValid = await validateUser(currentEmoji, inputPasscode);
            
            if (isValid) {
                currentPasscode = inputPasscode;
                showChat();
            } else {
                alert('Invalid passcode!');
            }
        }

        async function showChat() {
            document.getElementById('onboarding').style.display = 'none';
            document.getElementById('chat').style.display = 'block';
            await loadMessages();
        }

        async function sendMessage() {
            const input = document.getElementById('message-input');
            const message = input.value.trim();
            
            if (message) {
                await saveMessage(currentEmoji, message);
                input.value = '';
                await loadMessages();
            }
        }

        async function loadMessages() {
            const messages = await loadData();
            const container = document.getElementById('messages');
            container.innerHTML = '';
            
            messages.forEach(msg => {
                if (msg.action_type === 'message' && msg.content_data?.message) {
                    const div = document.createElement('div');
                    div.className = 'message';
                    div.innerHTML = `
                        <div class="message-header">
                            <span>${msg.participant_id}</span>
                            <span>${new Date(msg.created_at).toLocaleTimeString()}</span>
                        </div>
                        <div class="message-content">${msg.content_data.message}</div>
                    `;
                    container.appendChild(div);
                }
            });
            
            container.scrollTop = container.scrollHeight;
        }

        // Easter egg
        let konami = '';
        document.addEventListener('keydown', (e) => {
            konami += e.key;
            if (konami.includes('wtaf')) {
                document.body.style.animation = 'rainbow 1s infinite';
                konami = '';
            }
        });
    </script>
</body>
</html>
```