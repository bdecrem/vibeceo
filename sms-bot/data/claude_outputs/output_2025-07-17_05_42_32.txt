```html
<!DOCTYPE html>
<html>
<head>
    <title>PUNK BILLBOARD | MESSAGE MAYHEM</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&display=swap');
        
        body {
            margin: 0;
            background: #000;
            color: #fff;
            font-family: 'Space Grotesk', sans-serif;
            overflow: hidden;
            cursor: crosshair;
        }

        .message-container {
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            perspective: 1000px;
            background: repeating-linear-gradient(
                45deg,
                #000 0px,
                #000 10px,
                #0f0f0f 10px,
                #0f0f0f 20px
            );
        }

        .message {
            font-size: 8vw;
            text-transform: uppercase;
            color: #ff00ff;
            text-shadow: 
                3px 3px 0 #0ff,
                -3px -3px 0 #f0f;
            animation: glitch 0.3s infinite;
            transform-style: preserve-3d;
            padding: 2rem;
            text-align: center;
            max-width: 90vw;
        }

        @keyframes glitch {
            0% {
                transform: translate(0);
            }
            20% {
                transform: translate(-2px, 2px);
            }
            40% {
                transform: translate(-2px, -2px);
            }
            60% {
                transform: translate(2px, 2px);
            }
            80% {
                transform: translate(2px, -2px);
            }
            100% {
                transform: translate(0);
            }
        }

        .floating-emoji {
            position: fixed;
            font-size: 5rem;
            pointer-events: none;
            filter: blur(1px);
            animation: float 3s infinite ease-in-out;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-20px); }
        }

        .submit-message {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #ff00ff;
            color: #000;
            border: none;
            padding: 1rem 2rem;
            font-family: 'Space Grotesk';
            font-size: 1.2rem;
            cursor: pointer;
            transition: all 0.3s;
        }

        .submit-message:hover {
            background: #0ff;
            transform: translateX(-50%) scale(1.1);
        }

        #messageInput {
            position: fixed;
            bottom: 80px;
            left: 50%;
            transform: translateX(-50%);
            background: #000;
            border: 2px solid #ff00ff;
            color: #fff;
            padding: 1rem;
            font-family: 'Space Grotesk';
            width: 80%;
            max-width: 500px;
            text-align: center;
        }

        .easter-egg {
            position: fixed;
            top: 20px;
            right: 20px;
            font-size: 0.8rem;
            opacity: 0.5;
        }
    </style>
</head>
<body>
    <div class="message-container">
        <div class="message" id="messageDisplay">LOADING CHAOS...</div>
    </div>

    <div class="floating-emoji" style="top: 10%; left: 10%;" data-value="3">ðŸ’€</div>
    <div class="floating-emoji" style="top: 70%; left: 80%;" data-value="2">âš¡</div>
    <div class="floating-emoji" style="top: 30%; left: 90%;" data-value="4">ðŸ”¥</div>
    <div class="floating-emoji" style="top: 80%; left: 20%;" data-value="1">ðŸ’£</div>

    <input type="text" id="messageInput" placeholder="ADD TO THE CHAOS" maxlength="50">
    <button class="submit-message" onclick="submitMessage()">INJECT MESSAGE</button>

    <div class="easter-egg">type WTAF to unleash</div>

    <script>
        let messages = [];
        let currentIndex = 0;
        let wtafSequence = '';

        document.addEventListener('keydown', (e) => {
            wtafSequence += e.key.toLowerCase();
            if (wtafSequence.includes('wtaf')) {
                document.body.style.animation = 'rainbow 1s infinite';
                wtafSequence = '';
            }
        });

        async function loadMessages() {
            try {
                const response = await fetch('/api/admin/load?app_id=PUNK_BILLBOARD');
                if (!response.ok) throw new Error('Failed to load messages');
                const data = await response.json();
                messages = data.map(item => item.submission_data.message);
                if (messages.length === 0) {
                    messages = ["NO MESSAGES YET", "ADD YOURS NOW", "BE THE CHAOS"];
                }
                cycleMessages();
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function cycleMessages() {
            const display = document.getElementById('messageDisplay');
            display.style.opacity = 0;
            
            setTimeout(() => {
                display.textContent = messages[currentIndex];
                display.style.opacity = 1;
                currentIndex = (currentIndex + 1) % messages.length;
            }, 100);
        }

        async function submitMessage() {
            const input = document.getElementById('messageInput');
            const message = input.value.trim();
            
            if (!message) return;

            try {
                const response = await fetch('/api/admin/save', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        app_id: 'PUNK_BILLBOARD',
                        submission_data: { message }
                    })
                });

                if (!response.ok) throw new Error('Submission failed');
                
                input.value = '';
                await loadMessages();
            } catch (error) {
                console.error('Error:', error);
                alert('SUBMISSION FAILED. TRY AGAIN.');
            }
        }

        // Parallax effect for floating emojis
        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emoji').forEach((emoji) => {
                const speed = emoji.getAttribute('data-value') || 2;
                const x = (e.clientX * speed) / 100;
                const y = (e.clientY * speed) / 100;
                emoji.style.transform = `translate(${x}px, ${y}px)`;
            });
        });

        loadMessages();
        setInterval(cycleMessages, 2000);
    </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html>
<head>
    <title>PUNK BILLBOARD ADMIN</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&display=swap');
        
        body {
            margin: 0;
            padding: 20px;
            background: #000;
            color: #fff;
            font-family: 'Space Grotesk', sans-serif;
        }

        .admin-container {
            max-width: 1200px;
            margin: 0 auto;
        }

        h1 {
            color: #ff00ff;
            text-shadow: 2px 2px #0ff;
            margin-bottom: 2rem;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 2rem;
            background: #111;
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #ff00ff;
        }

        th {
            background: #ff00ff;
            color: #000;
        }

        tr:hover {
            background: #222;
        }

        .controls {
            margin: 2rem 0;
            display: flex;
            gap: 1rem;
        }

        button {
            background: #ff00ff;
            color: #000;
            border: none;
            padding: 1rem 2rem;
            font-family: 'Space Grotesk';
            cursor: pointer;
            transition: all 0.3s;
        }

        button:hover {
            background: #0ff;
            transform: scale(1.05);
        }

        .delete-btn {
            background: #ff0000;
            color: #fff;
            padding: 0.5rem 1rem;
        }
    </style>
</head>
<body>
    <div class="admin-container">
        <h1>ðŸ¤˜ PUNK BILLBOARD ADMIN ðŸ¤˜</h1>
        
        <div class="controls">
            <button onclick="refreshMessages()">REFRESH</button>
            <button onclick="exportCSV()">EXPORT CSV</button>
        </div>

        <table id="messagesTable">
            <thead>
                <tr>
                    <th>MESSAGE</th>
                    <th>TIMESTAMP</th>
                    <th>ACTIONS</th>
                </tr>
            </thead>
            <tbody id="tableBody"></tbody>
        </table>
    </div>

    <script>
        async function loadMessages() {
            try {
                const response = await fetch('/api/admin/load?app_id=PUNK_BILLBOARD');
                if (!response.ok) throw new Error('Failed to load messages');
                const data = await response.json();
                
                const tbody = document.getElementById('tableBody');
                tbody.innerHTML = '';
                
                data.forEach(item => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${item.submission_data.message}</td>
                        <td>${new Date(item.timestamp).toLocaleString()}</td>
                        <td>
                            <button class="delete-btn" onclick="deleteMessage('${item.id}')">DELETE</button>
                        </td>
                    `;
                    tbody.appendChild(row);
                });
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to load messages');
            }
        }

        function refreshMessages() {
            loadMessages();
        }

        function exportCSV() {
            try {
                const table = document.getElementById('messagesTable');
                const rows = Array.from(table.querySelectorAll('tr'));
                
                const csvContent = rows.map(row => {
                    const cells = Array.from(row.querySelectorAll('td, th'));
                    return cells.map(cell => cell.textContent).join(',');
                }).join('\n');

                const blob = new Blob([csvContent], { type: 'text/csv' });
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'punk_billboard_messages.csv';
                a.click();
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to export CSV');
            }
        }

        async function deleteMessage(id) {
            if (!confirm('DELETE THIS MESSAGE?')) return;
            
            try {
                const response = await fetch(`/api/admin/delete`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        app_id: 'PUNK_BILLBOARD',
                        message_id: id
                    })
                });

                if (!response.ok) throw new Error('Delete failed');
                loadMessages();
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to delete message');
            }
        }

        loadMessages();
    </script>
</body>
</html>
```