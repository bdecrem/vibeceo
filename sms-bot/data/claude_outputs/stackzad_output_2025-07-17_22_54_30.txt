I'll create an admin page to manage paintings with delete functionality. Since this is an admin interface, I'll create both the public and admin views separated by the admin delimiter.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>Paintings Admin</title>
    <style>
        * { box-sizing: border-box; }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: #0a0a0a;
            color: #fff;
            margin: 0;
            padding: 10px;
            font-size: 16px;
        }

        .app-container {
            max-width: 800px;
            margin: 0 auto;
            background: #1a1a1a;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 0 40px rgba(0,0,0,0.5);
        }

        h1 {
            font-size: 24px;
            margin: 0 0 20px 0;
            text-transform: uppercase;
            color: #ff0066;
        }

        .painting-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .painting-card {
            background: #2a2a2a;
            border-radius: 8px;
            padding: 15px;
            position: relative;
        }

        .painting-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 4px;
            margin-bottom: 10px;
        }

        .painting-info {
            margin-bottom: 10px;
        }

        .delete-btn {
            background: #ff0066;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            min-height: 44px;
            width: 100%;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .delete-btn:hover {
            background: #ff3388;
        }

        .screen { display: none; }
        .screen.active { display: block; }

        #no-paintings {
            text-align: center;
            padding: 40px;
            color: #666;
            font-style: italic;
        }

        @media (min-width: 600px) {
            body { padding: 20px; }
            .app-container { padding: 30px; }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <div id="main-screen" class="screen active">
            <h1>ðŸŽ¨ Paintings Admin</h1>
            <div id="paintings-container"></div>
        </div>
    </div>

    <script>
        let currentPaintings = [];

        async function loadLatestData() {
            const paintings = await load('painting');
            if (JSON.stringify(paintings) !== JSON.stringify(currentPaintings)) {
                currentPaintings = paintings;
                updateUI(paintings);
            }
        }

        async function deletePainting(paintingId) {
            if (confirm('Are you sure you want to delete this painting?')) {
                await save('delete', { recordId: paintingId });
                loadLatestData();
            }
        }

        function updateUI(paintings) {
            const container = document.getElementById('paintings-container');
            
            if (!paintings || paintings.length === 0) {
                container.innerHTML = '<div id="no-paintings">No paintings found</div>';
                return;
            }

            const paintingsHtml = `
                <div class="painting-grid">
                    ${paintings.map(painting => `
                        <div class="painting-card">
                            <img src="${painting.imageUrl || 'https://via.placeholder.com/300x200?text=No+Image'}" 
                                 alt="${painting.title || 'Untitled'}"
                                 onerror="this.src='https://via.placeholder.com/300x200?text=Error+Loading+Image'">
                            <div class="painting-info">
                                <strong>${painting.title || 'Untitled'}</strong><br>
                                <small>Added by: ${painting.author}</small>
                            </div>
                            <button class="delete-btn" onclick="deletePainting(${painting.id})">
                                Delete Painting
                            </button>
                        </div>
                    `).join('')}
                </div>
            `;
            
            container.innerHTML = paintingsHtml;
        }

        // Start auto-refresh
        startPolling();
        loadLatestData();
    </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>Add New Painting</title>
    <style>
        * { box-sizing: border-box; }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: #0a0a0a;
            color: #fff;
            margin: 0;
            padding: 10px;
            font-size: 16px;
        }

        .app-container {
            max-width: 800px;
            margin: 0 auto;
            background: #1a1a1a;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 0 40px rgba(0,0,0,0.5);
        }

        h1 {
            font-size: 24px;
            margin: 0 0 20px 0;
            text-transform: uppercase;
            color: #ff0066;
        }

        input, textarea {
            background: #2a2a2a;
            border: 1px solid #444;
            color: white;
            padding: 16px;
            border-radius: 6px;
            width: 100%;
            margin: 10px 0;
            font-size: 16px;
            min-height: 44px;
        }

        button {
            background: #ff0066;
            color: white;
            border: none;
            padding: 16px 24px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: bold;
            margin: 8px 0;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 16px;
            width: 100%;
            min-height: 44px;
        }

        button:hover {
            background: #ff3388;
        }

        .screen { display: none; }
        .screen.active { display: block; }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #888;
        }

        @media (min-width: 600px) {
            body { padding: 20px; }
            .app-container { padding: 30px; }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <div id="main-screen" class="screen active">
            <h1>ðŸŽ¨ Add New Painting</h1>
            
            <form id="painting-form" onsubmit="submitPainting(event)">
                <div class="form-group">
                    <label for="title">Painting Title</label>
                    <input type="text" id="title" required>
                </div>

                <div class="form-group">
                    <label for="imageUrl">Image URL</label>
                    <input type="url" id="imageUrl" required>
                </div>

                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea id="description" rows="4"></textarea>
                </div>

                <button type="submit">Add Painting</button>
            </form>
        </div>
    </div>

    <script>
        async function submitPainting(event) {
            event.preventDefault();
            
            const paintingData = {
                title: document.getElementById('title').value,
                imageUrl: document.getElementById('imageUrl').value,
                description: document.getElementById('description').value
            };

            await save('painting', paintingData);
            
            // Clear form
            event.target.reset();
            alert('Painting added successfully!');
        }

        // Initialize auth
        initAuth();
    </script>
</body>
</html>
```

This creates a two-page system:

1. An admin view to see all paintings and delete them
2. A form to add new paintings

The admin page features:
- Grid layout for paintings
- Image preview with fallback
- Delete confirmation
- Auto-refresh every 2 seconds
- Mobile-friendly design
- Author attribution

The add painting form includes:
- Title field
- Image URL field
- Description field
- Simple submission process
- Mobile-friendly inputs

Both pages follow WTAF styling guidelines and include all required meta tags and mobile optimization.