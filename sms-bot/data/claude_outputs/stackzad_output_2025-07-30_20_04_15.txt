```html
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>Blog Reader</title>
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: #0a0a0a;
            color: #fff;
            margin: 0;
            padding: 10px;
            font-size: 16px;
            line-height: 1.5;
        }

        .app-container {
            max-width: 800px;
            margin: 0 auto;
            background: #1a1a1a;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 0 40px rgba(0,0,0,0.5);
        }

        h1 {
            font-size: 24px;
            margin: 0 0 20px 0;
            text-align: center;
            background: linear-gradient(45deg, #ff0066, #00ffff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .post-list {
            margin: 20px 0;
        }

        .post-card {
            background: #2a2a2a;
            padding: 20px;
            margin: 15px 0;
            border-radius: 8px;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .post-card:hover {
            transform: translateY(-2px);
        }

        .post-title {
            font-size: 20px;
            margin: 0 0 10px 0;
            color: #ff0066;
        }

        .post-meta {
            font-size: 14px;
            color: #888;
            margin-bottom: 10px;
        }

        .post-content {
            color: #ddd;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.8);
            z-index: 100;
            padding: 20px;
            overflow-y: auto;
        }

        .modal-content {
            background: #1a1a1a;
            max-width: 800px;
            margin: 40px auto;
            padding: 30px;
            border-radius: 12px;
            position: relative;
        }

        .close-button {
            position: absolute;
            top: 20px;
            right: 20px;
            background: none;
            border: none;
            color: #fff;
            font-size: 24px;
            cursor: pointer;
        }

        .modal-title {
            font-size: 24px;
            margin: 0 0 20px 0;
            color: #ff0066;
        }

        .modal-meta {
            font-size: 14px;
            color: #888;
            margin-bottom: 20px;
        }

        .modal-body {
            color: #ddd;
            line-height: 1.6;
        }

        @media (min-width: 600px) {
            body {
                padding: 20px;
            }
            .app-container {
                padding: 30px;
            }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <h1>Blog Posts</h1>
        <div id="posts" class="post-list">
            <!-- Posts will be loaded here -->
        </div>
    </div>

    <div id="modal" class="modal">
        <div class="modal-content">
            <button class="close-button" onclick="closeModal()">&times;</button>
            <h2 id="modal-title" class="modal-title"></h2>
            <div id="modal-meta" class="modal-meta"></div>
            <div id="modal-body" class="modal-body"></div>
        </div>
    </div>

    <script>
        // Initialize for public access
        async function initPublicMode() {
            const anonymousId = 'anon_' + Math.random().toString(36).substr(2, 12);
            const anonymousUser = {
                userLabel: 'Anonymous Reader',
                participantId: anonymousId,
                username: 'Anonymous Reader'
            };
            
            updateZadAuth(anonymousUser.userLabel, anonymousUser.participantId);
            loadLatestPosts();
            startPolling();
        }

        // Load and display posts
        async function loadLatestPosts() {
            const posts = await load('blog_post');
            
            // Filter out deleted posts and sort by timestamp
            const validPosts = posts
                .filter(post => !post.deleted)
                .sort((a, b) => b.timestamp - a.timestamp);

            // Get unique posts (latest version only)
            const uniquePosts = validPosts.reduce((acc, post) => {
                const existing = acc.find(p => p.id === post.id);
                if (!existing || post.timestamp > existing.timestamp) {
                    if (existing) {
                        const index = acc.indexOf(existing);
                        acc[index] = post;
                    } else {
                        acc.push(post);
                    }
                }
                return acc;
            }, []);

            displayPosts(uniquePosts);
        }

        function displayPosts(posts) {
            const container = document.getElementById('posts');
            container.innerHTML = posts.map(post => `
                <div class="post-card" onclick="showPost(${JSON.stringify(post).replace(/"/g, '&quot;')})">
                    <h2 class="post-title">${post.title || 'Untitled Post'}</h2>
                    <div class="post-meta">
                        Posted by ${post.author} on ${new Date(post.created_at).toLocaleDateString()}
                    </div>
                    <div class="post-content">
                        ${post.content ? post.content.substring(0, 150) + '...' : 'No content'}
                    </div>
                </div>
            `).join('');
        }

        function showPost(post) {
            document.getElementById('modal-title').textContent = post.title || 'Untitled Post';
            document.getElementById('modal-meta').textContent = 
                `Posted by ${post.author} on ${new Date(post.created_at).toLocaleDateString()}`;
            document.getElementById('modal-body').textContent = post.content || 'No content';
            document.getElementById('modal').style.display = 'block';
        }

        function closeModal() {
            document.getElementById('modal').style.display = 'none';
        }

        let pollingInterval;

        function startPolling() {
            pollingInterval = setInterval(() => loadLatestPosts(), 2000);
        }

        function stopPolling() {
            if (pollingInterval) clearInterval(pollingInterval);
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('modal');
            if (event.target === modal) {
                closeModal();
            }
        }

        // Initialize for public access
        if (window.currentUser === 'all_users') {
            document.addEventListener('DOMContentLoaded', initPublicMode);
        }
    </script>
</body>
</html>
```