```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>WTAF Hello World Generator</title>
  <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
  <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      min-height: 100vh;
      font-family: 'Inter', sans-serif;
      overflow: hidden;
      cursor: pointer;
      transition: all 0.5s ease;
    }

    #hello {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-family: 'Space Grotesk', sans-serif;
      font-size: 5rem;
      text-align: center;
      color: white;
      text-shadow: 0 0 20px rgba(255,255,255,0.5);
      transition: all 0.3s ease;
      user-select: none;
    }

    .floating-emoji {
      position: absolute;
      font-size: 3rem;
      pointer-events: none;
      transition: transform 0.1s ease;
      animation: float 3s ease-in-out infinite;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-20px); }
    }

    #save-btn {
      position: fixed;
      bottom: 20px;
      right: 20px;
      background: rgba(255,255,255,0.2);
      border: none;
      padding: 15px 30px;
      border-radius: 50px;
      font-family: 'Space Grotesk', sans-serif;
      color: white;
      cursor: pointer;
      backdrop-filter: blur(5px);
      transition: all 0.3s ease;
    }

    #save-btn:hover {
      background: rgba(255,255,255,0.3);
      transform: scale(1.05);
    }

    .prompt-display {
      position: fixed;
      bottom: 10px;
      left: 10px;
      font-size: 0.8rem;
      opacity: 0.7;
      color: white;
    }

    #secret-msg {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: black;
      color: white;
      padding: 20px;
      border-radius: 10px;
      display: none;
      z-index: 100;
    }
  </style>
</head>
<body>
  <div id="hello">Hello World</div>
  <button id="save-btn">‚ù§Ô∏è Save This One</button>
  <div class="prompt-display">Generated from: an app that generates different looking Hello World pages</div>
  <div id="secret-msg">üéâ You found the secret! Type WTAF for more chaos!</div>

  <script>
    const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')
    
    const emojis = '‚ú®üåàüöÄüí´‚≠êüåôüîÆüíñü¶Ñüé®'
    const gradients = [
      'linear-gradient(45deg, #FF2E93, #FF61C7)',
      'linear-gradient(45deg, #3F88FF, #6E7FFF)',
      'linear-gradient(45deg, #FF7C5C, #FFB178)',
      'linear-gradient(45deg, #7C3AED, #A855F7)',
      'linear-gradient(45deg, #00FFC6, #57E2E5)'
    ]

    let currentStyle = {
      gradient: '',
      emojis: [],
      fontSize: '',
      rotation: 0
    }

    function generateRandomStyle() {
      currentStyle.gradient = gradients[Math.floor(Math.random() * gradients.length)]
      currentStyle.emojis = Array.from({length: 6}, () => emojis[Math.floor(Math.random() * emojis.length)])
      currentStyle.fontSize = Math.random() * 4 + 3 + 'rem'
      currentStyle.rotation = Math.random() * 10 - 5 + 'deg'
      
      document.body.style.background = currentStyle.gradient
      document.getElementById('hello').style.fontSize = currentStyle.fontSize
      document.getElementById('hello').style.transform = `translate(-50%, -50%) rotate(${currentStyle.rotation})`
      
      // Clear existing emojis
      document.querySelectorAll('.floating-emoji').forEach(e => e.remove())
      
      // Add new emojis
      currentStyle.emojis.forEach((emoji, i) => {
        const el = document.createElement('div')
        el.className = 'floating-emoji'
        el.textContent = emoji
        el.style.left = Math.random() * 90 + 5 + '%'
        el.style.top = Math.random() * 90 + 5 + '%'
        el.setAttribute('data-value', Math.random() * 4 + 1)
        document.body.appendChild(el)
      })
    }

    // Mouse parallax
    document.addEventListener('mousemove', (e) => {
      document.querySelectorAll('.floating-emoji').forEach(emoji => {
        const speed = emoji.getAttribute('data-value')
        const x = (e.clientX - window.innerWidth/2) * speed / 100
        const y = (e.clientY - window.innerHeight/2) * speed / 100
        emoji.style.transform = `translate(${x}px, ${y}px)`
      })
    })

    // Click to regenerate
    document.body.addEventListener('click', (e) => {
      if(e.target.id !== 'save-btn') {
        generateRandomStyle()
      }
    })

    // Save functionality
    document.getElementById('save-btn').addEventListener('click', async () => {
      try {
        const { data, error } = await supabase.from('wtaf_submissions').insert({
          app_id: 'hello_world_generator',
          submission_data: currentStyle
        })
        if (error) throw error
        alert('Saved your masterpiece! üé®')
      } catch (error) {
        console.error('Error:', error)
        alert('Failed to save. Try again!')
      }
    })

    // Easter egg
    let wtafBuffer = ''
    document.addEventListener('keydown', (e) => {
      wtafBuffer += e.key.toLowerCase()
      if(wtafBuffer.includes('wtaf')) {
        document.getElementById('secret-msg').style.display = 'block'
        setTimeout(() => {
          document.getElementById('secret-msg').style.display = 'none'
          document.body.style.animation = 'spin 1s linear'
          generateRandomStyle()
        }, 2000)
        wtafBuffer = ''
      }
    })

    // Initial generation
    generateRandomStyle()
  </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>WTAF Hello World Admin</title>
  <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
  <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      min-height: 100vh;
      font-family: 'Inter', sans-serif;
      background: #111;
      color: white;
      padding: 2rem;
    }

    h1 {
      font-family: 'Space Grotesk', sans-serif;
      margin-bottom: 2rem;
    }

    .controls {
      margin-bottom: 2rem;
      display: flex;
      gap: 1rem;
    }

    button {
      background: #FF2E93;
      border: none;
      padding: 10px 20px;
      color: white;
      border-radius: 5px;
      cursor: pointer;
      font-family: 'Space Grotesk', sans-serif;
    }

    button:hover {
      opacity: 0.9;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 2rem;
    }

    th, td {
      padding: 1rem;
      text-align: left;
      border-bottom: 1px solid #333;
    }

    th {
      background: #222;
    }

    .preview {
      width: 200px;
      height: 100px;
      border-radius: 5px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-family: 'Space Grotesk', sans-serif;
    }

    .emoji-preview {
      font-size: 1.5rem;
    }
  </style>
</head>
<body>
  <h1>üé® Hello World Designs Admin</h1>
  
  <div class="controls">
    <button onclick="refreshData()">üîÑ Refresh</button>
    <button onclick="exportCSV()">üì• Export CSV</button>
  </div>

  <table id="submissions-table">
    <thead>
      <tr>
        <th>Date</th>
        <th>Preview</th>
        <th>Emojis</th>
        <th>Font Size</th>
        <th>Rotation</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>

  <script>
    const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

    async function refreshData() {
      try {
        const { data, error } = await supabase.from('wtaf_submissions')
          .select('*')
          .eq('app_id', 'hello_world_generator')
          .order('created_at', { ascending: false })
        
        if (error) throw error

        const tbody = document.querySelector('tbody')
        tbody.innerHTML = ''

        data.forEach(row => {
          const tr = document.createElement('tr')
          tr.innerHTML = `
            <td>${new Date(row.created_at).toLocaleString()}</td>
            <td>
              <div class="preview" style="background: ${row.submission_data.gradient}">
                Hello World
              </div>
            </td>
            <td class="emoji-preview">${row.submission_data.emojis.join(' ')}</td>
            <td>${row.submission_data.fontSize}</td>
            <td>${row.submission_data.rotation}</td>
          `
          tbody.appendChild(tr)
        })
      } catch (error) {
        console.error('Error:', error)
        alert('Failed to load submissions')
      }
    }

    function exportCSV() {
      try {
        const rows = Array.from(document.querySelectorAll('tbody tr'))
        const csvContent = 'Date,Gradient,Emojis,FontSize,Rotation\n' + 
          rows.map(row => {
            const cells = Array.from(row.cells)
            return `${cells[0].textContent},${cells[1].querySelector('.preview').style.background},${cells[2].textContent},${cells[3].textContent},${cells[4].textContent}`
          }).join('\n')

        const blob = new Blob([csvContent], { type: 'text/csv' })
        const url = URL.createObjectURL(blob)
        const a = document.createElement('a')
        a.href = url
        a.download = 'hello_world_designs.csv'
        a.click()
      } catch (error) {
        console.error('Error:', error)
        alert('Failed to export CSV')
      }
    }

    // Initial load
    refreshData()
  </script>
</body>
</html>
```