```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Senior Center Rager ðŸŽ‰</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(-45deg, #FF2E93, #FF61C7, #3F88FF, #6E7FFF);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            min-height: 100vh;
            color: white;
            overflow-x: hidden;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
            position: relative;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 4rem;
            margin-bottom: 1rem;
            text-shadow: 0 0 10px rgba(255,255,255,0.5);
            animation: glow 2s ease-in-out infinite;
        }

        @keyframes glow {
            0% { text-shadow: 0 0 10px rgba(255,255,255,0.5); }
            50% { text-shadow: 0 0 20px rgba(255,255,255,0.8), 0 0 30px #FF2E93; }
            100% { text-shadow: 0 0 10px rgba(255,255,255,0.5); }
        }

        .floating-emoji {
            position: absolute;
            font-size: 3rem;
            pointer-events: none;
            transition: transform 0.1s ease;
        }

        .form-container {
            background: rgba(255,255,255,0.1);
            backdrop-filter: blur(10px);
            padding: 2rem;
            border-radius: 20px;
            margin-top: 2rem;
        }

        input {
            width: 100%;
            padding: 1rem;
            margin: 0.5rem 0;
            border: none;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            color: white;
            font-size: 1.1rem;
        }

        input::placeholder {
            color: rgba(255,255,255,0.7);
        }

        button {
            width: 100%;
            padding: 1rem;
            margin-top: 1rem;
            border: none;
            border-radius: 10px;
            background: #FF2E93;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
            transition: transform 0.2s;
        }

        button:hover {
            transform: scale(1.02);
            animation: pulse 1s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.02); }
            100% { transform: scale(1); }
        }

        .success-message {
            display: none;
            text-align: center;
            padding: 1rem;
            background: rgba(0,255,0,0.2);
            border-radius: 10px;
            margin-top: 1rem;
        }

        .text-cta {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #FF2E93;
            padding: 1rem;
            border-radius: 10px;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }

        .prompt {
            position: fixed;
            bottom: 10px;
            left: 10px;
            font-size: 0.8rem;
            opacity: 0.7;
        }
    </style>
</head>
<body>
    <div class="container">
        <span class="floating-emoji" data-value="2" style="top: 10%; left: 10%">ðŸŽ‰</span>
        <span class="floating-emoji" data-value="3" style="top: 20%; right: 20%">ðŸª©</span>
        <span class="floating-emoji" data-value="4" style="bottom: 30%; left: 15%">ðŸ’ƒ</span>
        <span class="floating-emoji" data-value="5" style="bottom: 20%; right: 10%">ðŸŽˆ</span>

        <h1>SENIOR CENTER GOES SICKO MODE</h1>
        <p style="font-size: 1.5rem; margin-bottom: 2rem;">Tomorrow at 8PM - The wildest bingo night you've ever seen ðŸŽ°</p>

        <div class="form-container">
            <form id="rsvpForm">
                <input type="text" id="name" placeholder="Your name (real or alter ego)" required>
                <input type="email" id="email" placeholder="Email where we can send the chaos details" required>
                <button type="submit">SECURE YOUR SPOT IN HISTORY</button>
            </form>
            <div id="successMessage" class="success-message">
                You're in! Get ready for pure mayhem! ðŸŽ‰
            </div>
        </div>
    </div>

    <div class="text-cta">
        ðŸ“± Text START to +1-866-330-0015 to get initiated
    </div>

    <div class="prompt">
        Generated from: make a party invite page for my party at the senior center
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emoji').forEach((emoji) => {
                const speed = emoji.getAttribute('data-value') || 2
                const x = (e.clientX * speed) / 100
                const y = (e.clientY * speed) / 100
                emoji.style.transform = `translateX(${x}px) translateY(${y}px)`
            })
        })

        document.getElementById('rsvpForm').addEventListener('submit', async (e) => {
            e.preventDefault()
            
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                timestamp: new Date().toISOString()
            }

            try {
                const { data, error } = await supabase.from('wtaf_submissions').insert({
                    app_id: 'senior_center_party',
                    submission_data: formData
                })
                
                if (error) throw error
                
                document.getElementById('successMessage').style.display = 'block'
                document.getElementById('rsvpForm').reset()
            } catch (error) {
                console.error('Error:', error)
                alert('RSVP failed. Please try again!')
            }
        })

        // Easter egg
        let wtafTyped = ''
        document.addEventListener('keydown', (e) => {
            wtafTyped += e.key.toLowerCase()
            if (wtafTyped.includes('wtaf')) {
                document.body.style.animation = 'gradient 2s ease infinite'
                alert('ðŸŽ‰ YOU FOUND THE SECRET PARTY MODE! ðŸŽ‰')
                wtafTyped = ''
            }
        })
    </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Party Admin Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #1a1a1a;
            color: white;
            padding: 2rem;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            margin-bottom: 2rem;
            color: #FF2E93;
        }

        .dashboard {
            background: #2a2a2a;
            padding: 2rem;
            border-radius: 10px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 2rem;
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #444;
        }

        th {
            background: #333;
            color: #FF61C7;
        }

        .actions {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        button {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            background: #FF2E93;
            color: white;
            cursor: pointer;
            transition: opacity 0.2s;
        }

        button:hover {
            opacity: 0.8;
        }

        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: #333;
            padding: 1rem;
            border-radius: 5px;
            text-align: center;
        }

        .stat-number {
            font-size: 2rem;
            color: #FF61C7;
            margin-bottom: 0.5rem;
        }
    </style>
</head>
<body>
    <h1>ðŸŽ‰ Party RSVP Dashboard</h1>

    <div class="dashboard">
        <div class="stats">
            <div class="stat-card">
                <div class="stat-number" id="totalRsvps">0</div>
                <div>Total RSVPs</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="lastHour">0</div>
                <div>Last Hour</div>
            </div>
        </div>

        <div class="actions">
            <button onclick="exportCSV()">Export to CSV</button>
            <button onclick="loadSubmissions()">Refresh Data</button>
        </div>

        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Timestamp</th>
                </tr>
            </thead>
            <tbody id="submissionsTable"></tbody>
        </table>
    </div>

    <script>
        let submissions = []

        async function loadSubmissions() {
            try {
                const parentUrl = window.parent ? window.parent.location : window.location
                const urlParams = new URLSearchParams(parentUrl.search)
                const token = urlParams.get('token')
                const appSlug = parentUrl.pathname.split('/').pop().replace('admin-', '')
                
                if (!token) {
                    alert('Missing authentication token')
                    return
                }
                
                const response = await fetch(`/api/admin-submissions?token=${token}&app=${appSlug}`)
                const result = await response.json()
                
                if (!response.ok) {
                    throw new Error(result.error || 'Failed to load submissions')
                }
                
                submissions = result.submissions || []
                
                const table = document.getElementById('submissionsTable')
                table.innerHTML = submissions.map(sub => `
                    <tr>
                        <td>${sub.submission_data.name}</td>
                        <td>${sub.submission_data.email}</td>
                        <td>${new Date(sub.submission_data.timestamp).toLocaleString()}</td>
                    </tr>
                `).join('')

                // Update stats
                document.getElementById('totalRsvps').textContent = submissions.length
                const lastHour = submissions.filter(sub => {
                    const submissionTime = new Date(sub.submission_data.timestamp)
                    const hourAgo = new Date(Date.now() - 3600000)
                    return submissionTime > hourAgo
                }).length
                document.getElementById('lastHour').textContent = lastHour

            } catch (error) {
                console.error('Error:', error)
                alert('Failed to load submissions')
            }
        }

        function exportCSV() {
            const csvContent = 'Name,Email,Timestamp\n' + submissions.map(row => 
                `${row.submission_data.name},${row.submission_data.email},${row.submission_data.timestamp}`
            ).join('\n')
            
            const blob = new Blob([csvContent], { type: 'text/csv' })
            const url = URL.createObjectURL(blob)
            const a = document.createElement('a')
            a.href = url
            a.download = 'party_rsvps.csv'
            a.click()
        }

        // Load data when page loads
        window.addEventListener('load', loadSubmissions)
    </script>
</body>
</html>
```