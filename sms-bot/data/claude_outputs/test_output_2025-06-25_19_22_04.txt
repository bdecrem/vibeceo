```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Snake Game</title>
    <style>
        body, html {
            margin: 0;
            height: 100%;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            touch-action: manipulation;
        }
        canvas {
            background: #000;
            display: block;
        }
        .controls {
            position: absolute;
            bottom: 20px;
            display: flex;
            justify-content: center;
            width: 100%;
        }
        .control-btn {
            width: 44px;
            height: 44px;
            background: #fff;
            border-radius: 5px;
            margin: 0 10px;
            line-height: 44px;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
            user-select: none;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas"></canvas>
    <div class="controls">
        <div id="left" class="control-btn">←</div>
        <div id="up" class="control-btn">↑</div>
        <div id="right" class="control-btn">→</div>
        <div id="down" class="control-btn">↓</div>
    </div>
    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');
        const gridSize = 20;
        const tileCount = 20;
        let snake = [{x: 10, y: 10}];
        let velocity = {x: 0, y: 0};
        let apple = {x: 15, y: 15};
        let score = 0;

        function resizeCanvas() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
            drawGame();
        }

        function drawGame() {
            snakeMovement();
            if (checkCollision()) {
                resetGame();
            }
            drawBackground();
            drawSnake();
            drawApple();
            drawScore();
            requestAnimationFrame(drawGame);
        }

        function snakeMovement() {
            const head = {x: snake[0].x + velocity.x, y: snake[0].y + velocity.y};
            snake.unshift(head);
            if (head.x === apple.x && head.y === apple.y) {
                score++;
                apple = {x: Math.floor(Math.random() * tileCount), y: Math.floor(Math.random() * tileCount)};
            } else {
                snake.pop();
            }
        }

        function checkCollision() {
            const head = snake[0];
            if (head.x < 0 || head.x >= tileCount || head.y < 0 || head.y >= tileCount) {
                return true;
            }
            for (let i = 1; i < snake.length; i++) {
                if (snake[i].x === head.x && snake[i].y === head.y) {
                    return true;
                }
            }
            return false;
        }

        function resetGame() {
            snake = [{x: 10, y: 10}];
            velocity = {x: 0, y: 0};
            score = 0;
        }

        function drawBackground() {
            ctx.fillStyle = '#000';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
        }

        function drawSnake() {
            ctx.fillStyle = '#0F0';
            snake.forEach(part => {
                ctx.fillRect(part.x * gridSize, part.y * gridSize, gridSize - 2, gridSize - 2);
            });
        }

        function drawApple() {
            ctx.fillStyle = '#F00';
            ctx.fillRect(apple.x * gridSize, apple.y * gridSize, gridSize - 2, gridSize - 2);
        }

        function drawScore() {
            ctx.fillStyle = '#FFF';
            ctx.font = '20px Arial';
            ctx.fillText('Score: ' + score, 10, 20);
        }

        function changeDirection(event) {
            const LEFT_KEY = 37;
            const UP_KEY = 38;
            const RIGHT_KEY = 39;
            const DOWN_KEY = 40;

            const keyPressed = event.keyCode;
            const goingUp = velocity.y === -1;
            const goingDown = velocity.y === 1;
            const goingRight = velocity.x === 1;
            const goingLeft = velocity.x === -1;

            if (keyPressed === LEFT_KEY && !goingRight) {
                velocity = {x: -1, y: 0};
            }
            if (keyPressed === UP_KEY && !goingDown) {
                velocity = {x: 0, y: -1};
            }
            if (keyPressed === RIGHT_KEY && !goingLeft) {
                velocity = {x: 1, y: 0};
            }
            if (keyPressed === DOWN_KEY && !goingUp) {
                velocity = {x: 0, y: 1};
            }
        }

        document.addEventListener('keydown', changeDirection);

        const touchStart = {x: 0, y: 0};
        const touchEnd = {x: 0, y: 0};

        function handleTouchStart(event) {
            if (event.touches.length === 1) {
                const touch = event.touches[0];
                touchStart.x = touch.clientX;
                touchStart.y = touch.clientY;
            }
        }

        function handleTouchMove(event) {
            if (event.touches.length === 1) {
                const touch = event.touches[0];
                touchEnd.x = touch.clientX;
                touchEnd.y = touch.clientY;
            }
        }

        function handleTouchEnd() {
            const dx = touchEnd.x - touchStart.x;
            const dy = touchEnd.y - touchStart.y;

            if (Math.abs(dx) > Math.abs(dy)) {
                if (dx > 0 && velocity.x !== -1) {
                    velocity = {x: 1, y: 0};
                } else if (dx < 0 && velocity.x !== 1) {
                    velocity = {x: -1, y: 0};
                }
            } else {
                if (dy > 0 && velocity.y !== -1) {
                    velocity = {x: 0, y: 1};
                } else if (dy < 0 && velocity.y !== 1) {
                    velocity = {x: 0, y: -1};
                }
            }
        }

        ['left', 'up', 'right', 'down'].forEach(direction => {
            document.getElementById(direction).addEventListener('click', () => {
                if (direction === 'left' && velocity.x !== 1) velocity = {x: -1, y: 0};
                if (direction === 'up' && velocity.y !== 1) velocity = {x: 0, y: -1};
                if (direction === 'right' && velocity.x !== -1) velocity = {x: 1, y: 0};
                if (direction === 'down' && velocity.y !== -1) velocity = {x: 0, y: 1};
            });
        });

        window.addEventListener('resize', resizeCanvas);
        document.addEventListener('touchstart', handleTouchStart, false);
        document.addEventListener('touchmove', handleTouchMove, false);
        document.addEventListener('touchend', handleTouchEnd, false);

        resizeCanvas();
        drawGame();
    </script>
</body>
</html>
```