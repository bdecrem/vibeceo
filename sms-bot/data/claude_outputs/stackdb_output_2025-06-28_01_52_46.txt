```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>THE SCRAPPILE</title>
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Courier+Prime:wght@400;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: #000;
            color: #fff;
            font-family: 'Courier Prime', monospace;
            min-height: 100vh;
            overflow-x: hidden;
            background: linear-gradient(45deg, #1a1a1a, #000000);
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
            position: relative;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 4rem;
            text-align: center;
            margin-bottom: 1rem;
            background: linear-gradient(to right, #ff2e93, #ff61c7);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 0 20px rgba(255, 46, 147, 0.5);
            animation: glitch 3s infinite;
        }

        h2 {
            text-align: center;
            color: #ff61c7;
            margin-bottom: 3rem;
            font-style: italic;
        }

        .links-container {
            display: grid;
            gap: 1.5rem;
        }

        .link-card {
            background: rgba(255, 255, 255, 0.05);
            padding: 1.5rem;
            border-radius: 8px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .link-card:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.1);
            border-color: #ff2e93;
        }

        .link-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, #ff2e93, #ff61c7);
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: -1;
        }

        .link-card:hover::before {
            opacity: 0.1;
        }

        .link-title {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
            color: #ff61c7;
        }

        .link-url {
            color: #fff;
            text-decoration: none;
            font-size: 0.9rem;
            opacity: 0.7;
        }

        .link-url:hover {
            opacity: 1;
            text-decoration: underline;
        }

        .floating-emoji {
            position: fixed;
            font-size: 2rem;
            pointer-events: none;
            z-index: 100;
            filter: drop-shadow(0 0 10px rgba(255,255,255,0.5));
            transition: transform 0.1s ease;
        }

        #loading {
            text-align: center;
            font-size: 2rem;
            margin: 2rem;
            animation: pulse 1s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        @keyframes glitch {
            0% { transform: translate(0); }
            20% { transform: translate(-2px, 2px); }
            40% { transform: translate(-2px, -2px); }
            60% { transform: translate(2px, 2px); }
            80% { transform: translate(2px, -2px); }
            100% { transform: translate(0); }
        }

        .cta {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #ff2e93;
            padding: 1rem;
            border-radius: 5px;
            font-weight: bold;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>THE SCRAPPILE</h1>
        <h2>‚Üí A lovingly welded junkyard of vibes</h2>
        
        <div id="loading">‚ö° LOADING CHAOS ‚ö°</div>
        <div id="links" class="links-container"></div>
    </div>

    <div class="floating-emoji" style="top: 10%; left: 10%;" data-value="3">‚ö°</div>
    <div class="floating-emoji" style="top: 20%; right: 15%;" data-value="2">üíÄ</div>
    <div class="floating-emoji" style="bottom: 30%; left: 20%;" data-value="4">üî•</div>
    <div class="floating-emoji" style="bottom: 15%; right: 25%;" data-value="3">‚õìÔ∏è</div>

    <div class="cta">üì± Text START to +1-866-330-0015</div>

    <script>
        const SUPABASE_URL = 'https://tqniseocczttrfwtpbdr.supabase.co'
        const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRxbmlzZW9jY3p0dHJmd3RwYmRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg4ODI5MjIsImV4cCI6MjA2NDQ1ODkyMn0.mwb33p0xIEXy5F7ZoLc1j9-4ZNk3FuT4zrR0aTdm350'
        const supabaseClient = supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY)

        // Parallax effect for floating emojis
        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emoji').forEach((emoji) => {
                const speed = emoji.getAttribute('data-value') || 2
                const x = (e.clientX * speed) / 250
                const y = (e.clientY * speed) / 250
                emoji.style.transform = `translate(${x}px, ${y}px)`
            })
        })

        async function loadLinks() {
            try {
                const { data: submissions, error } = await supabaseClient
                    .from('wtaf_submissions')
                    .select('submission_data, created_at')
                    .eq('app_id', '7d970033-5ab3-4ceb-9f89-910c8c0c0925')
                    .order('created_at', { ascending: false })

                if (error) throw error

                const loading = document.getElementById('loading')
                const linksContainer = document.getElementById('links')
                loading.style.display = 'none'

                if (!submissions.length) {
                    linksContainer.innerHTML = '<div class="link-card">No links in the pile yet... soon‚Ñ¢</div>'
                    return
                }

                submissions.forEach(submission => {
                    const data = submission.submission_data
                    const linkCard = document.createElement('div')
                    linkCard.className = 'link-card'
                    linkCard.innerHTML = `
                        <div class="link-title">${data.title || 'Untitled Link'}</div>
                        <a href="${data.url}" class="link-url" target="_blank">${data.url}</a>
                    `
                    linksContainer.appendChild(linkCard)
                })

            } catch (error) {
                console.error('Error:', error)
                document.getElementById('loading').innerHTML = 'üíÄ CHAOS OVERLOAD üíÄ<br>Try again later'
            }
        }

        loadLinks()

        // Easter egg
        let clicks = 0
        document.querySelector('h1').addEventListener('click', () => {
            clicks++
            if (clicks === 5) {
                document.body.style.animation = 'glitch 0.1s infinite'
                setTimeout(() => document.body.style.animation = '', 1000)
            }
        })
    </script>
</body>
</html>
```