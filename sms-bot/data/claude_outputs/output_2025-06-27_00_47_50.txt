```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HELLO.wtf</title>
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            min-height: 100vh;
            overflow: hidden;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .container {
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            position: relative;
            overflow: hidden;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 8vw;
            position: relative;
            z-index: 2;
            mix-blend-mode: difference;
            color: white;
            text-shadow: 0 0 20px rgba(255,255,255,0.5);
        }

        .floating-emoji {
            position: absolute;
            font-size: 5rem;
            pointer-events: none;
            transition: transform 0.1s ease;
            animation: float 6s ease-in-out infinite;
            filter: drop-shadow(0 0 10px rgba(0,0,0,0.2));
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-20px); }
        }

        .save-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: rgba(255,255,255,0.2);
            border: none;
            padding: 15px 30px;
            border-radius: 50px;
            cursor: pointer;
            font-family: 'Space Grotesk', sans-serif;
            font-size: 1.2rem;
            backdrop-filter: blur(5px);
            transition: all 0.3s ease;
            display: none;
        }

        .save-btn:hover {
            transform: scale(1.1);
        }

        .prompt {
            position: fixed;
            bottom: 10px;
            left: 10px;
            font-size: 0.8rem;
            opacity: 0.7;
        }

        .call-to-text {
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(255,255,255,0.2);
            padding: 1rem;
            border-radius: 5px;
            backdrop-filter: blur(5px);
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>HELLO WORLD</h1>
        <button class="save-btn">‚ù§Ô∏è Save This One</button>
    </div>
    <div class="call-to-text">üì± Text START to +1-866-330-0015</div>
    <div class="prompt">Generated from: hello world generator but make it chaos</div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')
        
        const emojis = ['‚ú®', 'üåà', 'üöÄ', 'ü¶Ñ', 'üí´', 'üé™', 'üåô', '‚ö°Ô∏è']
        const gradients = [
            'linear-gradient(45deg, #FF2E93, #FF61C7)',
            'linear-gradient(45deg, #3F88FF, #6E7FFF)',
            'linear-gradient(45deg, #FF7C5C, #FFB178)',
            'linear-gradient(45deg, #7C3AED, #A855F7)',
            'linear-gradient(45deg, #00FFC6, #57E2E5)'
        ]

        let currentStyle = null

        function createFloatingEmojis() {
            document.querySelectorAll('.floating-emoji').forEach(e => e.remove())
            for(let i = 0; i < 6; i++) {
                const emoji = document.createElement('div')
                emoji.className = 'floating-emoji'
                emoji.textContent = emojis[Math.floor(Math.random() * emojis.length)]
                emoji.style.left = `${Math.random() * 100}vw`
                emoji.style.top = `${Math.random() * 100}vh`
                emoji.setAttribute('data-value', Math.random() * 4 + 1)
                document.body.appendChild(emoji)
            }
        }

        function generateNewStyle() {
            const style = {
                gradient: gradients[Math.floor(Math.random() * gradients.length)],
                rotation: Math.random() * 360,
                scale: 0.8 + Math.random() * 0.4
            }
            document.body.style.background = style.gradient
            document.querySelector('h1').style.transform = `rotate(${style.rotation}deg) scale(${style.scale})`
            document.querySelector('.save-btn').style.display = 'block'
            currentStyle = style
            createFloatingEmojis()
        }

        document.addEventListener('click', generateNewStyle)
        document.addEventListener('touchstart', generateNewStyle)

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emoji').forEach((elem) => {
                const speed = elem.getAttribute('data-value')
                const x = (e.clientX * speed) / 100
                const y = (e.clientY * speed) / 100
                elem.style.transform = `translate(${x}px, ${y}px)`
            })
        })

        document.querySelector('.save-btn').addEventListener('click', async (e) => {
            e.stopPropagation()
            try {
                const { data, error } = await supabase.from('wtaf_submissions').insert({
                    app_id: 'hello_world_generator',
                    submission_data: currentStyle
                })
                if (error) throw error
                alert('Saved! ‚ú®')
            } catch (error) {
                console.error('Error:', error)
                alert('Failed to save. Try again!')
            }
        })

        // Easter egg
        let konamiCode = []
        document.addEventListener('keydown', (e) => {
            konamiCode.push(e.key)
            if (konamiCode.slice(-4).join('') === 'WTAF') {
                document.body.style.animation = 'rainbow 1s infinite'
                alert('üéâ You found the secret code!')
            }
        })

        generateNewStyle()
    </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hello World Admin</title>
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            padding: 2rem;
            background: #f5f5f5;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            margin-bottom: 2rem;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        th {
            background: #7C3AED;
            color: white;
        }

        tr:hover {
            background: #f9f9f9;
        }

        .preview {
            width: 100px;
            height: 100px;
            border-radius: 10px;
        }

        .export-btn {
            padding: 1rem 2rem;
            background: #7C3AED;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-bottom: 1rem;
            font-family: 'Space Grotesk', sans-serif;
        }

        .export-btn:hover {
            background: #6D28D9;
        }
    </style>
</head>
<body>
    <h1>Saved Hello Worlds</h1>
    <button class="export-btn">Export CSV</button>
    <table>
        <thead>
            <tr>
                <th>Date</th>
                <th>Preview</th>
                <th>Gradient</th>
                <th>Rotation</th>
                <th>Scale</th>
            </tr>
        </thead>
        <tbody id="submissions"></tbody>
    </table>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

        async function loadSubmissions() {
            try {
                const { data, error } = await supabase.from('wtaf_submissions')
                    .select('*')
                    .eq('app_id', 'hello_world_generator')
                    .order('created_at', { ascending: false })
                
                if (error) throw error

                const tbody = document.getElementById('submissions')
                tbody.innerHTML = data.map(row => `
                    <tr>
                        <td>${new Date(row.created_at).toLocaleString()}</td>
                        <td>
                            <div class="preview" style="background: ${row.submission_data.gradient}"></div>
                        </td>
                        <td>${row.submission_data.gradient}</td>
                        <td>${Math.round(row.submission_data.rotation)}¬∞</td>
                        <td>${row.submission_data.scale.toFixed(2)}</td>
                    </tr>
                `).join('')
            } catch (error) {
                console.error('Error:', error)
                alert('Failed to load submissions')
            }
        }

        document.querySelector('.export-btn').addEventListener('click', async () => {
            try {
                const { data, error } = await supabase.from('wtaf_submissions')
                    .select('*')
                    .eq('app_id', 'hello_world_generator')
                
                if (error) throw error

                const csvContent = 'Date,Gradient,Rotation,Scale\n' + data.map(row => 
                    `${new Date(row.created_at).toLocaleString()},${row.submission_data.gradient},${row.submission_data.rotation},${row.submission_data.scale}`
                ).join('\n')

                const blob = new Blob([csvContent], { type: 'text/csv' })
                const url = URL.createObjectURL(blob)
                const a = document.createElement('a')
                a.href = url
                a.download = 'hello_world_styles.csv'
                a.click()
            } catch (error) {
                console.error('Error:', error)
                alert('Failed to export CSV')
            }
        })

        loadSubmissions()
    </script>
</body>
</html>
```