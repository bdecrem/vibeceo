Here's a simple journal app that allows users to create, view, and save journal entries:

```html
<!DOCTYPE html>
<html>
<head>
    <title>My Journal</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            max-width: 800px; 
            margin: 0 auto; 
            padding: 20px;
            background-color: #f5f5f5;
        }
        .journal-entry {
            background: white;
            border-radius: 8px;
            padding: 15px;
            margin: 15px 0;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .entry-date {
            color: #666;
            font-size: 0.9em;
            margin-bottom: 10px;
        }
        .entry-text {
            line-height: 1.6;
        }
        #entryForm {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        textarea {
            width: 100%;
            height: 150px;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-family: inherit;
        }
        button {
            background: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background: #45a049;
        }
        h1 {
            color: #333;
            text-align: center;
        }
    </style>
</head>
<body>
    <h1>My Journal</h1>
    
    <div id="entryForm">
        <textarea id="journalEntry" placeholder="Write your journal entry here..."></textarea>
        <button onclick="saveEntry()">Save Entry</button>
    </div>

    <div id="entriesContainer"></div>

    <script>
        // Initialize authentication
        initAuth();

        // Load entries when page loads
        window.addEventListener('load', loadEntries);

        async function saveEntry() {
            const entryText = document.getElementById('journalEntry').value;
            if (!entryText.trim()) return;

            const entry = {
                text: entryText,
                date: new Date().toISOString(),
            };

            try {
                await save('journal-entries', entry);
                document.getElementById('journalEntry').value = '';
                await loadEntries(); // Reload entries after saving
            } catch (error) {
                console.error('Error saving entry:', error);
                alert('Failed to save entry. Please try again.');
            }
        }

        async function loadEntries() {
            try {
                const entries = await load('journal-entries') || [];
                displayEntries(entries);
            } catch (error) {
                console.error('Error loading entries:', error);
                alert('Failed to load entries. Please refresh the page.');
            }
        }

        function displayEntries(entries) {
            const container = document.getElementById('entriesContainer');
            container.innerHTML = '';

            // Sort entries by date, newest first
            entries.sort((a, b) => new Date(b.date) - new Date(a.date));

            entries.forEach(entry => {
                const entryDiv = document.createElement('div');
                entryDiv.className = 'journal-entry';
                
                const date = new Date(entry.date).toLocaleString();
                
                entryDiv.innerHTML = `
                    <div class="entry-date">${date}</div>
                    <div class="entry-text">${entry.text}</div>
                `;
                
                container.appendChild(entryDiv);
            });
        }
    </script>
</body>
</html>
```

This journal app includes the following features:

1. A clean, modern user interface
2. Text area for writing new journal entries
3. Save button to store entries
4. Automatic loading and display of previous entries
5. Entries are displayed in reverse chronological order (newest first)
6. Each entry shows the date and time it was created
7. Responsive design that works on both desktop and mobile
8. Error handling for save and load operations

To use the app:

1. The page loads and authenticates using `initAuth()`
2. Previous entries are automatically loaded and displayed
3. Write a new entry in the text area
4. Click "Save Entry" to save it
5. The new entry will appear at the top of the list
6. Entries are persisted in the database using the `save()` function
7. Entries are retrieved using the `load()` function

The app uses simple styling to create a clean, readable interface, and includes basic error handling to help users understand if something goes wrong. The entries are stored with both the text content and the date they were created, allowing for chronological organization.