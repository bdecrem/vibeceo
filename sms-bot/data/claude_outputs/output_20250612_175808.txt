```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Delusional Pitch Deck</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        .container {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 90%;
            max-width: 600px;
        }
        h1 {
            text-align: center;
            color: #333;
        }
        .crossword {
            display: grid;
            grid-template-columns: repeat(9, 30px);
            grid-template-rows: repeat(9, 30px);
            gap: 2px;
            margin: 20px auto;
        }
        .cell {
            width: 30px;
            height: 30px;
            background-color: #000;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #fff;
            font-size: 14px;
            position: relative;
        }
        .cell input {
            width: 100%;
            height: 100%;
            background-color: #fff;
            border: none;
            text-align: center;
            font-size: 14px;
            outline: none;
        }
        .cell input:focus {
            border: 1px solid #007bff;
        }
        .clue {
            margin: 20px 0;
        }
        .clue h2 {
            margin-bottom: 10px;
        }
        .clue-list {
            list-style-type: none;
            padding: 0;
        }
        .clue-list li {
            margin-bottom: 5px;
        }
        @media (max-width: 600px) {
            .crossword {
                grid-template-columns: repeat(9, 25px);
                grid-template-rows: repeat(9, 25px);
            }
            .cell {
                width: 25px;
                height: 25px;
                font-size: 12px;
            }
            .cell input {
                font-size: 12px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Delusional Pitch Deck Crossword Puzzle</h1>
        <div class="crossword">
            <div class="cell"><input type="text" maxlength="1" data-index="0"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="1"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="2"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="3"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="4"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="5"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="6"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="7"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="8"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="9"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="18"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="19"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="27"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="28"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="29"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="36"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="37"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="38"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="39"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="46"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="47"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="48"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="49"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="50"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="56"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="57"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="58"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="59"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="60"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="61"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="66"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="67"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="68"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="69"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="70"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="71"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="72"></div>
            <div class="cell"></div>
            <div class="cell"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="75"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="76"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="77"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="78"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="79"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="80"></div>
            <div class="cell"><input type="text" maxlength="1" data-index="81"></div>
        </div>
        <div class="clue">
            <h2>Across</h2>
            <ul class="clue-list">
                <li>1. A type of software development (8)</li>
                <li>3. Process of creating a prototype (7)</li>
                <li>6. Method for tracking project progress (6)</li>
                <li>8. Tool for version control (4)</li>
                <li>10. Design principle for user interfaces (5)</li>
            </ul>
        </div>
        <div class="clue">
            <h2>Down</h2>
            <ul class="clue-list">
                <li>1. Essential for project management (8)</li>
                <li>2. Common programming language (6)</li>
                <li>4. Technique for solving problems (7)</li>
                <li>5. Framework for web development (5)</li>
                <li>7. Process for testing software (6)</li>
                <li>9. Method for managing databases (5)</li>
            </ul>
        </div>
    </div>
    <script>
        const answers = {
            across: {
                1: "development",
                3: "prototyping",
                6: "tracking",
                8: "git",
                10: "principles"
            },
            down: {
                1: "management",
                2: "python",
                4: "debugging",
                5: "framework",
                7: "testing",
                9: "sql"
            }
        };

        const cells = document.querySelectorAll('.cell input');
        const acrossClues = document.querySelectorAll('.clue-list li');
        let currentClue = null;

        cells.forEach((cell, index) => {
            cell.addEventListener('input', (e) => {
                const value = e.target.value.toLowerCase();
                const acrossIndex = Math.floor(index / 9);
                const downIndex = index % 9;

                if (value) {
                    if (answers.across[acrossIndex + 1] && answers.across[acrossIndex + 1][downIndex] === value) {
                        e.target.style.backgroundColor = '#c8e6c9';
                    } else {
                        e.target.style.backgroundColor = '#ffcdd2';
                    }

                    if (answers.down[downIndex + 1] && answers.down[downIndex + 1][acrossIndex] === value) {
                        e.target.style.backgroundColor = '#c8e6c9';
                    } else {
                        e.target.style.backgroundColor = '#ffcdd2';
                    }
                } else {
                    e.target.style.backgroundColor = '#fff';
                }
            });

            cell.addEventListener('focus', (e) => {
                const index = parseInt(e.target.getAttribute('data-index'));
                const acrossIndex = Math.floor(index / 9) + 1;
                const downIndex = index % 9 + 1;

                acrossClues.forEach(clue => {
                    if (clue.textContent.includes(`${acrossIndex}.`)) {
                        clue.style.fontWeight = 'bold';
                        currentClue = clue;
                    } else {
                        clue.style.fontWeight = 'normal';
                    }
                });

                acrossClues.forEach(clue => {
                    if (clue.textContent.includes(`${downIndex}.`)) {
                        clue.style.fontWeight = 'bold';
                        currentClue = clue;
                    } else {
                        clue.style.fontWeight = 'normal';
                    }
                });
            });

            cell.addEventListener('blur', () => {
                if (currentClue) {
                    currentClue.style.fontWeight = 'normal';
                }
            });
        });
    </script>
</body>
</html>
```