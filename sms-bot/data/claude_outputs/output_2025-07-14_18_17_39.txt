<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WTAF DIMENSION CHAT 🌌</title>
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@400;600&display=swap');

        body { 
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #FF2E93 0%, #7C3AED 50%, #3F88FF 100%);
            background-size: 400% 400%;
            animation: gradientShift 15s ease-in-out infinite;
            color: white;
            overflow-x: hidden;
            margin: 0;
            min-height: 100vh;
        }

        h1, h2, h3 {
            font-family: 'Space Grotesk', sans-serif;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: -0.02em;
        }

        @keyframes gradientShift {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        .app-container {
            max-width: 800px;
            margin: 20px auto;
            background: rgba(0,0,0,0.4);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            border: 1px solid rgba(255,255,255,0.1);
            position: relative;
            z-index: 10;
            min-height: 80vh;
        }

        .screen { display: none; }
        .screen.active { display: block; animation: fadeIn 0.3s ease; }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        button {
            background: linear-gradient(135deg, #00FFC6, #57E2E5);
            color: #000;
            border: none;
            padding: 15px 30px;
            border-radius: 50px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 14px;
            margin: 10px 5px;
        }

        button:hover {
            transform: scale(1.05);
            box-shadow: 0 0 30px rgba(0, 255, 198, 0.5);
        }

        input, select {
            background: rgba(255,255,255,0.1);
            border: 2px solid rgba(255,255,255,0.2);
            color: white;
            padding: 12px 20px;
            border-radius: 30px;
            font-size: 16px;
            width: calc(100% - 44px);
            margin: 10px 0;
            transition: all 0.3s ease;
        }

        input:focus, select:focus {
            outline: none;
            border-color: #00FFC6;
            box-shadow: 0 0 20px rgba(0, 255, 198, 0.3);
        }

        .floating-emoji {
            position: fixed;
            font-size: 2rem;
            animation: float 6s ease-in-out infinite;
            pointer-events: none;
            z-index: 5;
            opacity: 0.8;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(10deg); }
        }

        .chat-container {
            height: 60vh;
            overflow-y: auto;
            padding: 20px;
            margin: 20px 0;
            background: rgba(0,0,0,0.2);
            border-radius: 15px;
        }

        .message {
            background: rgba(255,255,255,0.1);
            border-radius: 20px;
            padding: 15px 20px;
            margin: 10px 0;
            animation: slideIn 0.3s ease;
            max-width: 80%;
        }

        .message.own {
            margin-left: auto;
            background: rgba(0,255,198,0.2);
        }

        .message-meta {
            font-size: 0.8em;
            opacity: 0.7;
            margin-bottom: 5px;
        }

        .chat-input-container {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }

        .chat-input {
            flex-grow: 1;
        }

        @keyframes slideIn {
            from { opacity: 0; transform: translateX(-50px); }
            to { opacity: 1; transform: translateX(0); }
        }

        #new-user-info {
            background: rgba(255,255,255,0.1);
            padding: 20px;
            border-radius: 15px;
            margin: 20px 0;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(0,255,198,0.4); }
            70% { box-shadow: 0 0 0 10px rgba(0,255,198,0); }
            100% { box-shadow: 0 0 0 0 rgba(0,255,198,0); }
        }
    </style>
</head>
<body>
    <div class="floating-emoji" style="top: 5%; left: 2%;" data-value="2">✨</div>
    <div class="floating-emoji" style="top: 5%; right: 2%;" data-value="3">🌀</div>
    <div class="floating-emoji" style="bottom: 5%; left: 2%;" data-value="1">🚀</div>
    <div class="floating-emoji" style="bottom: 5%; right: 2%;" data-value="4">💥</div>

    <div class="app-container">
        <div id="welcome-screen" class="screen active">
            <h1>WTAF DIMENSION CHAT 🌌</h1>
            <p>ENTER THE VOID WHERE MESSAGES TRANSCEND REALITY</p>
            <button onclick="showNewUserScreen()">New User</button>
            <button onclick="showReturningUserScreen()">Returning User</button>
        </div>
        
        <div id="new-user-screen" class="screen">
            <h1>CREATE YOUR DIGITAL AVATAR</h1>
            <div id="new-user-info"></div>
            <button onclick="registerNewUser()">MATERIALIZE INTO EXISTENCE</button>
            <button onclick="showScreen('welcome-screen')">RETURN TO VOID</button>
        </div>
        
        <div id="returning-user-screen" class="screen">
            <h1>RESUME YOUR EXISTENCE</h1>
            <select id="user-label-select">
                <option>Select Your Avatar</option>
            </select>
            <input type="text" id="returning-passcode" placeholder="Enter your 4-digit reality key" maxlength="4">
            <button onclick="loginReturningUser()">RECONNECT</button>
            <button onclick="showScreen('welcome-screen')">RETURN TO VOID</button>
        </div>
        
        <div id="main-screen" class="screen">
            <h1>DIMENSION CHAT</h1>
            <div id="user-status">CHANNELING AS: <span id="current-user-label"></span></div>
            
            <div class="chat-container" id="chat-messages"></div>
            
            <div class="chat-input-container">
                <input type="text" id="message-input" class="chat-input" placeholder="BROADCAST YOUR THOUGHTS..." onkeypress="if(event.key === 'Enter') sendMessage()">
                <button onclick="sendMessage()">TRANSMIT</button>
            </div>
            
            <button onclick="showScreen('welcome-screen')">LEAVE DIMENSION</button>
        </div>
    </div>

    <script>
        const APP_ID = 'test1';
        const USER_LABELS = ['VOID_WALKER🎯', 'DREAM_WEAVER⚡', 'CHAOS_AGENT🌟', 'NEON_PROPHET🔥', 'DIGITAL_GHOST💎'];
        
        const supabase = window.supabase.createClient(
            'https://tqniseocczttrfwtpbdr.supabase.co',
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRxbmlzZW9jY3p0dHJmd3RwYmRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg4ODI5MjIsImV4cCI6MjA2NDQ1ODkyMn0.mwb33p0xIEXy5F7ZoLc1j9-4ZNk3FuT4zrR0aTdm350'
        );

        let currentUser = null;
        let pollingInterval;

        async function generateNewUser() {
            const { data: existingUsers } = await supabase
                .from('wtaf_zero_admin_collaborative')
                .select('participant_data')
                .eq('app_id', APP_ID)
                .eq('action_type', 'join');
            
            const usedLabels = existingUsers?.map(u => u.participant_data?.userLabel).filter(Boolean) || [];
            
            if (usedLabels.length >= 5) {
                alert('DIMENSION AT CAPACITY! TRY ANOTHER REALITY 🌀');
                return false;
            }
            
            const availableLabel = USER_LABELS.find(label => !usedLabels.includes(label));
            if (!availableLabel) {
                alert('REALITY OVERFLOW! SEEK ALTERNATE DIMENSION 🌌');
                return false;
            }
            
            const code = Math.floor(1000 + Math.random() * 9000).toString();
            currentUser = {
                userLabel: availableLabel,
                passcode: code,
                participantId: availableLabel + '_' + code
            };
            
            document.getElementById('new-user-info').innerHTML = 
                `<strong>YOUR DIGITAL IDENTITY:</strong> ${currentUser.userLabel}<br>
                <strong>REALITY KEY:</strong> ${currentUser.passcode}<br>
                <em>🚨 SCREENSHOT THIS OR FACE DIGITAL OBLIVION 📸</em>`;
            
            return true;
        }

        async function registerNewUser() {
            if (!currentUser) {
                alert('GENERATE YOUR IDENTITY FIRST, WANDERER 🎭');
                return;
            }
            
            try {
                await supabase.from('wtaf_zero_admin_collaborative').insert({
                    app_id: APP_ID,
                    participant_id: currentUser.participantId,
                    action_type: 'join',
                    participant_data: {
                        userLabel: currentUser.userLabel,
                        passcode: currentUser.passcode,
                        join_time: Date.now()
                    },
                    content_data: { message: 'Entered the dimension', timestamp: Date.now() }
                });
                
                enterMainScreen();
            } catch (error) {
                console.error('Registration error:', error);
                alert('REALITY GLITCH! TRY AGAIN 💥');
            }
        }

        async function showNewUserScreen() {
            showScreen('new-user-screen');
            const success = await generateNewUser();
            if (!success) {
                showScreen('welcome-screen');
            }
        }

        async function loginReturningUser() {
            const selectedLabel = document.getElementById('user-label-select').value;
            const enteredPasscode = document.getElementById('returning-passcode').value.trim();
            
            if (!selectedLabel || selectedLabel === 'Select Your Avatar') {
                alert('CHOOSE YOUR IDENTITY, WANDERER 👻');
                return;
            }
            
            if (!enteredPasscode || enteredPasscode.length !== 4) {
                alert('4 DIGITS OF CHAOS REQUIRED 🔢');
                return;
            }
            
            try {
                const { data: joinRecords } = await supabase
                    .from('wtaf_zero_admin_collaborative')
                    .select('*')
                    .eq('app_id', APP_ID)
                    .eq('action_type', 'join');
                
                const userRecord = joinRecords?.find(record => 
                    record.participant_data?.userLabel === selectedLabel && 
                    record.participant_data?.passcode === enteredPasscode
                );
                
                if (userRecord) {
                    currentUser = {
                        userLabel: selectedLabel,
                        passcode: enteredPasscode,
                        participantId: userRecord.participant_id
                    };
                    enterMainScreen();
                } else {
                    alert('REALITY MISMATCH! TRY AGAIN ❌');
                }
            } catch (error) {
                console.error('Login error:', error);
                alert('DIMENSION MALFUNCTION! REALITY UNSTABLE 🌀');
            }
        }

        function showScreen(screenId) {
            document.querySelectorAll('.screen').forEach(screen => 
                screen.classList.remove('active'));
            document.getElementById(screenId).classList.add('active');
            
            if (screenId !== 'main-screen') {
                stopPolling();
            }
        }

        function showReturningUserScreen() {
            showScreen('returning-user-screen');
            const userSelect = document.getElementById('user-label-select');
            userSelect.innerHTML = '<option>Select Your Avatar</option>';
            USER_LABELS.forEach(label => {
                const option = document.createElement('option');
                option.value = label;
                option.textContent = label;
                userSelect.appendChild(option);
            });
        }

        function enterMainScreen() {
            showScreen('main-screen');
            document.getElementById('current-user-label').textContent = currentUser.userLabel;
            startPolling();
            loadLatestData();
        }

        async function sendMessage() {
            const messageInput = document.getElementById('message-input');
            const message = messageInput.value.trim();
            
            if (!message) return;
            
            try {
                await supabase.from('wtaf_zero_admin_collaborative').insert({
                    app_id: APP_ID,
                    participant_id: currentUser.participantId,
                    action_type: 'message',
                    participant_data: {
                        userLabel: currentUser.userLabel
                    },
                    content_data: {
                        message: message,
                        timestamp: Date.now()
                    }
                });
                
                messageInput.value = '';
                await loadLatestData();
            } catch (error) {
                console.error('Message error:', error);
                alert('MESSAGE LOST IN THE VOID! TRY AGAIN 📡');
            }
        }

        function startPolling() {
            pollingInterval = setInterval(loadLatestData, 2000);
        }

        function stopPolling() {
            if (pollingInterval) {
                clearInterval(pollingInterval);
                pollingInterval = null;
            }
        }

        async function loadLatestData() {
            try {
                const { data: messages } = await supabase
                    .from('wtaf_zero_admin_collaborative')
                    .select('*')
                    .eq('app_id', APP_ID)
                    .eq('action_type', 'message')
                    .order('created_at', { ascending: true });
                
                const chatContainer = document.getElementById('chat-messages');
                chatContainer.innerHTML = '';
                
                messages?.forEach(msg => {
                    const messageDiv = document.createElement('div');
                    messageDiv.className = `message ${msg.participant_id === currentUser?.participantId ? 'own' : ''}`;
                    messageDiv.innerHTML = `
                        <div class="message-meta">${msg.participant_data.userLabel}</div>
                        <div class="message-content">${msg.content_data.message}</div>
                    `;
                    chatContainer.appendChild(messageDiv);
                });
                
                chatContainer.scrollTop = chatContainer.scrollHeight;
            } catch (error) {
                console.error('Load error:', error);
            }
        }

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emoji').forEach((elem) => {
                const speed = elem.getAttribute('data-value') || 2;
                const x = (e.clientX * speed) / 100;
                const y = (e.clientY * speed) / 100;
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`;
            });
        });

        console.log('🔥 Welcome to the WTAF dimension! Type wtaf() in console for secrets...');
        window.wtaf = function() {
            document.body.style.animation = 'rainbow 1s infinite';
            setTimeout(() => {
                document.body.style.animation = '';
                alert('🎉 DIMENSIONAL SHIFT UNLOCKED! You found the secret!');
            }, 3000);
        };
    </script>
</body>
</html>