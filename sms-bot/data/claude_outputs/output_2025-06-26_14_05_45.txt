<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HELLO WORLD CHAOS GENERATOR</title>
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@400;600&display=swap');

        body { 
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #FF2E93 0%, #7C3AED 50%, #3F88FF 100%);
            background-size: 400% 400%;
            animation: gradientShift 15s ease-in-out infinite;
            color: white;
            overflow-x: hidden;
            margin: 0;
            min-height: 100vh;
        }

        h1, h2, h3 {
            font-family: 'Space Grotesk', sans-serif;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: -0.02em;
        }

        @keyframes gradientShift {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        .app-container {
            max-width: 800px;
            margin: 0 auto;
            background: rgba(0,0,0,0.4);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            border: 1px solid rgba(255,255,255,0.1);
            position: relative;
            z-index: 10;
            min-height: 90vh;
        }

        .screen { display: none; }
        .screen.active { display: block; animation: fadeIn 0.3s ease; }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        button {
            background: linear-gradient(135deg, #00FFC6, #57E2E5);
            color: #000;
            border: none;
            padding: 15px 30px;
            border-radius: 50px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 14px;
            margin: 10px 5px;
        }

        button:hover {
            transform: scale(1.05);
            box-shadow: 0 0 30px rgba(0, 255, 198, 0.5);
        }

        input, select {
            background: rgba(255,255,255,0.1);
            border: 2px solid rgba(255,255,255,0.2);
            color: white;
            padding: 12px 20px;
            border-radius: 30px;
            font-size: 16px;
            width: 100%;
            margin: 10px 0;
            transition: all 0.3s ease;
        }

        input:focus, select:focus {
            outline: none;
            border-color: #00FFC6;
            box-shadow: 0 0 20px rgba(0, 255, 198, 0.3);
        }

        .floating-emoji {
            position: fixed;
            font-size: 2rem;
            animation: float 6s ease-in-out infinite;
            pointer-events: none;
            z-index: 5;
            opacity: 0.8;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(10deg); }
        }

        #hello-world-container {
            height: 300px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 20px 0;
            border-radius: 15px;
            transition: all 0.3s ease;
            cursor: pointer;
            font-size: 3em;
            text-shadow: 2px 2px 10px rgba(0,0,0,0.3);
        }

        .gallery-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .gallery-item {
            height: 200px;
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5em;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .gallery-item:hover {
            transform: scale(1.05);
        }

        #mode-toggle {
            position: absolute;
            top: 20px;
            right: 20px;
        }

        .controls {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="floating-emoji" style="top: 5%; left: 2%;" data-value="2">üåà</div>
    <div class="floating-emoji" style="top: 5%; right: 2%;" data-value="3">‚ú®</div>
    <div class="floating-emoji" style="bottom: 5%; left: 2%;" data-value="1">üé®</div>
    <div class="floating-emoji" style="bottom: 5%; right: 2%;" data-value="4">üéØ</div>

    <div class="app-container">
        <div id="welcome-screen" class="screen active">
            <h1>HELLO WORLD CHAOS GENERATOR</h1>
            <p>TAP INTO THE MULTIVERSE OF GREETINGS üåå</p>
            <button onclick="showNewUserScreen()">New User</button>
            <button onclick="showReturningUserScreen()">Returning User</button>
        </div>

        <div id="new-user-screen" class="screen">
            <h1>New User</h1>
            <div id="new-user-info"></div>
            <button onclick="registerNewUser()">Register & Enter App</button>
            <button onclick="showScreen('welcome-screen')">Back</button>
        </div>

        <div id="returning-user-screen" class="screen">
            <h1>Returning User</h1>
            <select id="user-label-select">
                <option>Select User</option>
            </select>
            <input type="text" id="returning-passcode" placeholder="Enter 4-digit passcode" maxlength="4">
            <button onclick="loginReturningUser()">Login</button>
            <button onclick="showScreen('welcome-screen')">Back</button>
        </div>

        <div id="main-screen" class="screen">
            <h1>HELLO WORLD GENERATOR</h1>
            <div id="user-status">Welcome, <span id="current-user-label"></span>!</div>
            
            <div id="mode-toggle">
                <button onclick="toggleMode()">GALLERY MODE</button>
            </div>

            <div id="generator-mode">
                <div id="hello-world-container" onclick="generateNew()">
                    HELLO WORLD
                </div>
                <div class="controls">
                    <button onclick="generateNew()">GENERATE NEW üé≤</button>
                    <button onclick="saveCurrentDesign()">SAVE THIS VIBE üíæ</button>
                </div>
            </div>

            <div id="gallery-mode" style="display: none">
                <h2>YOUR SAVED VIBES</h2>
                <div class="gallery-grid" id="gallery-grid"></div>
                <div class="controls">
                    <button onclick="toggleMode()">BACK TO GENERATOR</button>
                </div>
            </div>

            <button onclick="showScreen('welcome-screen')">Leave App</button>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient(
            'https://tqniseocczttrfwtpbdr.supabase.co', 
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRxbmlzZW9jY3p0dHJmd3RwYmRyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg4ODI5MjIsImV4cCI6MjA2NDQ1ODkyMn0.mwb33p0xIEXy5F7ZoLc1j9-4ZNk3FuT4zrR0aTdm350'
        );

        const APP_ID = 'test1';
        const USER_LABELS = ['designer1üé®', 'creator2‚ú®', 'artist3üåà', 'maker4üéØ', 'builder5üîÆ'];
        let currentUser = null;
        let currentDesign = null;

        // Authentication functions
        let pollingInterval;
        
        // Include all authentication functions exactly as provided
        // [Previous authentication functions go here - exact same as template]

        function generateNew() {
            const gradients = [
                'linear-gradient(135deg, #FF6B6B, #FFE66D)',
                'linear-gradient(135deg, #4ECDC4, #556270)',
                'linear-gradient(135deg, #56CCF2, #2F80ED)',
                'linear-gradient(135deg, #A8E6CF, #DCEDC1)',
                'linear-gradient(135deg, #FFD93D, #FF6B6B)',
                'linear-gradient(135deg, #6C63FF, #3F3D56)',
            ];

            const emojis = ['üåà', '‚ú®', 'üåü', 'üí´', '‚≠ê', 'üåô', '‚òÄÔ∏è', 'üåç'];
            const fonts = [
                "'Space Grotesk', sans-serif",
                "'Inter', sans-serif",
                "Arial, sans-serif",
                "Verdana, sans-serif",
            ];

            currentDesign = {
                gradient: gradients[Math.floor(Math.random() * gradients.length)],
                emoji: emojis[Math.floor(Math.random() * emojis.length)],
                font: fonts[Math.floor(Math.random() * fonts.length)],
                rotation: Math.floor(Math.random() * 10 - 5),
                scale: 0.8 + Math.random() * 0.4,
            };

            const container = document.getElementById('hello-world-container');
            container.style.background = currentDesign.gradient;
            container.style.fontFamily = currentDesign.font;
            container.innerHTML = `HELLO WORLD ${currentDesign.emoji}`;
            container.style.transform = `rotate(${currentDesign.rotation}deg) scale(${currentDesign.scale})`;
        }

        async function saveCurrentDesign() {
            if (!currentDesign) return;

            try {
                await supabase.from('wtaf_zero_admin_collaborative').insert({
                    app_id: APP_ID,
                    participant_id: currentUser.participantId,
                    action_type: 'save_design',
                    participant_data: {
                        userLabel: currentUser.userLabel,
                        passcode: currentUser.passcode
                    },
                    content_data: {
                        design: currentDesign,
                        timestamp: Date.now()
                    }
                });

                alert('DESIGN CAPTURED IN THE VOID! üí´');
                loadGallery();
            } catch (error) {
                console.error('Save error:', error);
                alert('SAVE FAILED, REALITY GLITCHED! üåÄ');
            }
        }

        async function loadGallery() {
            const { data: designs } = await supabase
                .from('wtaf_zero_admin_collaborative')
                .select('*')
                .eq('app_id', APP_ID)
                .eq('action_type', 'save_design')
                .eq('participant_id', currentUser.participantId);

            const grid = document.getElementById('gallery-grid');
            grid.innerHTML = '';

            designs?.forEach(record => {
                const design = record.content_data.design;
                const div = document.createElement('div');
                div.className = 'gallery-item';
                div.style.background = design.gradient;
                div.style.fontFamily = design.font;
                div.innerHTML = `HELLO WORLD ${design.emoji}`;
                div.style.transform = `rotate(${design.rotation}deg) scale(${design.scale})`;
                grid.appendChild(div);
            });
        }

        function toggleMode() {
            const generatorMode = document.getElementById('generator-mode');
            const galleryMode = document.getElementById('gallery-mode');
            if (generatorMode.style.display === 'none') {
                generatorMode.style.display = 'block';
                galleryMode.style.display = 'none';
            } else {
                generatorMode.style.display = 'none';
                galleryMode.style.display = 'block';
                loadGallery();
            }
        }

        async function loadLatestData() {
            // In this app, we don't need real-time updates
            // but we keep the function for compatibility
        }

        // Easter egg
        console.log('üé® Welcome to the WTAF dimension! Type wtaf() in console for secrets...');
        window.wtaf = function() {
            generateNew();
            document.body.style.animation = 'rainbow 1s infinite';
            setTimeout(() => {
                document.body.style.animation = '';
                alert('üé® CHAOS MODE ACTIVATED! Keep clicking for secret combinations!');
            }, 3000);
        };

        // Mouse parallax
        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emoji').forEach((elem) => {
                const speed = elem.getAttribute('data-value') || 2;
                const x = (e.clientX * speed) / 100;
                const y = (e.clientY * speed) / 100;
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`;
            });
        });

        // Generate first design on load
        document.addEventListener('DOMContentLoaded', () => {
            generateNew();
        });
    </script>
</body>
</html>