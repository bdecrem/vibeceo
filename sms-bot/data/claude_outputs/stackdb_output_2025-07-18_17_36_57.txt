<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>âœ¨ WTAF Billboard Editor</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --gradient-1: linear-gradient(45deg, #FF2E93, #FF61C7, #FFA5E5);
            --gradient-2: linear-gradient(145deg, #3F88FF, #6E7FFF, #ABF7FF);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #111;
            color: #fff;
            min-height: 100vh;
            padding: 2rem;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 3rem;
            background: var(--gradient-1);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 2rem;
            animation: glow 2s ease-in-out infinite;
        }

        .floating-emoji {
            position: fixed;
            pointer-events: none;
            font-size: 2rem;
            transition: transform 0.1s ease-out;
        }

        .billboard-item {
            background: rgba(255,255,255,0.05);
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
            position: relative;
            border: 1px solid rgba(255,255,255,0.1);
        }

        .billboard-item:hover {
            background: rgba(255,255,255,0.1);
            transform: translateY(-2px);
        }

        .message {
            font-size: 1.2rem;
            margin-bottom: 1rem;
            word-break: break-word;
        }

        .meta {
            font-size: 0.8rem;
            color: #888;
        }

        .actions {
            position: absolute;
            right: 1rem;
            top: 1rem;
            display: flex;
            gap: 0.5rem;
        }

        button {
            background: var(--gradient-2);
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            color: white;
            cursor: pointer;
            font-family: 'Inter', sans-serif;
            transition: all 0.3s ease;
        }

        button:hover {
            transform: scale(1.05);
            box-shadow: 0 0 15px rgba(63,136,255,0.4);
        }

        .loading {
            text-align: center;
            padding: 3rem;
            font-size: 1.2rem;
            color: #888;
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            background: rgba(255,255,255,0.05);
            border-radius: 12px;
        }

        @keyframes glow {
            0%, 100% { text-shadow: 0 0 20px rgba(255,46,147,0.5); }
            50% { text-shadow: 0 0 40px rgba(255,46,147,0.8); }
        }

        .edit-mode {
            background: rgba(63,136,255,0.1) !important;
        }

        textarea {
            width: 100%;
            background: rgba(0,0,0,0.3);
            border: 1px solid rgba(255,255,255,0.2);
            color: white;
            padding: 1rem;
            border-radius: 6px;
            font-family: 'Inter', sans-serif;
            font-size: 1rem;
            margin: 1rem 0;
        }

        #error-message {
            color: #ff4444;
            text-align: center;
            padding: 1rem;
        }

        .floating-cta {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--gradient-1);
            padding: 1rem;
            border-radius: 8px;
            font-weight: bold;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>âœ¨ Billboard Editor</h1>
        <div id="loading" class="loading">Loading the chaos...</div>
        <div id="error-message"></div>
        <div id="billboard-items"></div>
    </div>

    <div class="floating-emoji" style="top: 10%; left: 10%">âœ¨</div>
    <div class="floating-emoji" style="top: 20%; right: 15%">ðŸŒˆ</div>
    <div class="floating-emoji" style="bottom: 30%; left: 5%">âš¡</div>
    <div class="floating-emoji" style="bottom: 20%; right: 10%">ðŸš€</div>

    <div class="floating-cta">
        ðŸ“± Text START to +1-866-330-0015
    </div>

    <script>
        let editingId = null;

        async function loadSubmissions() {
            try {
                document.getElementById('loading').style.display = 'block';
                const response = await fetch('/api/admin/load?origin_app_slug=ORIGIN_APP_SLUG');
                if (!response.ok) throw new Error('Failed to load submissions');
                const submissions = await response.json();
                
                document.getElementById('loading').style.display = 'none';
                const container = document.getElementById('billboard-items');
                
                if (!submissions.length) {
                    container.innerHTML = `
                        <div class="empty-state">
                            <h2>No messages yet!</h2>
                            <p>Be the first to write something wild...</p>
                        </div>
                    `;
                    return;
                }

                container.innerHTML = submissions.map(sub => {
                    const data = sub.submission_data;
                    const message = data.message || 'Empty message';
                    const date = new Date(sub.created_at).toLocaleString();
                    
                    return `
                        <div class="billboard-item" id="item-${sub.id}">
                            <div class="actions">
                                <button onclick="editMessage('${sub.id}', '${message.replace(/'/g, "\\'")}')">Edit</button>
                                <button onclick="deleteMessage('${sub.id}')">Delete</button>
                            </div>
                            <div class="message">${message}</div>
                            <div class="meta">Posted: ${date}</div>
                        </div>
                    `;
                }).join('');
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('error-message').textContent = 'Failed to load messages';
                document.getElementById('loading').style.display = 'none';
            }
        }

        async function editMessage(id, message) {
            const item = document.getElementById(`item-${id}`);
            if (editingId === id) {
                // Save changes
                const textarea = item.querySelector('textarea');
                try {
                    const response = await fetch('/api/admin/update', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            id,
                            message: textarea.value
                        })
                    });
                    if (!response.ok) throw new Error('Failed to update');
                    loadSubmissions();
                } catch (error) {
                    console.error('Error:', error);
                    document.getElementById('error-message').textContent = 'Failed to update message';
                }
                editingId = null;
            } else {
                // Enter edit mode
                editingId = id;
                item.classList.add('edit-mode');
                item.innerHTML = `
                    <div class="actions">
                        <button onclick="editMessage('${id}', '')">Save</button>
                        <button onclick="loadSubmissions()">Cancel</button>
                    </div>
                    <textarea>${message}</textarea>
                `;
            }
        }

        async function deleteMessage(id) {
            if (!confirm('Are you sure you want to delete this message?')) return;
            
            try {
                const response = await fetch('/api/admin/delete', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id })
                });
                if (!response.ok) throw new Error('Failed to delete');
                loadSubmissions();
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('error-message').textContent = 'Failed to delete message';
            }
        }

        // Parallax effect for floating emojis
        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emoji').forEach((emoji) => {
                const speed = Math.random() * 2 + 1;
                const x = (e.clientX * speed) / 100;
                const y = (e.clientY * speed) / 100;
                emoji.style.transform = `translate(${x}px, ${y}px)`;
            });
        });

        // Initial load
        loadSubmissions();

        // Easter egg
        let clicks = 0;
        document.querySelector('h1').addEventListener('click', () => {
            clicks++;
            if (clicks === 5) {
                document.body.style.background = '#000';
                alert('ðŸŽ‰ WTAF MASTER EDITOR UNLOCKED!');
            }
        });
    </script>
</body>
</html>