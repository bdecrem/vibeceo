```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Berghain Bash | Exclusive Night</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(220deg, #0a0a0a, #1a1a1a, #2a2a2a);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            color: #fff;
            font-family: 'Inter', sans-serif;
            min-height: 100vh;
            overflow-x: hidden;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .glass-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 3rem;
            margin: 2rem 0;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: transform 0.3s ease;
        }

        .glass-card:hover {
            transform: translateY(-5px);
        }

        h1, h2, h3 {
            font-family: 'Space Grotesk', sans-serif;
            color: #fff;
        }

        h1 {
            font-size: 4rem;
            margin-bottom: 1rem;
            background: linear-gradient(90deg, #ff00ff, #00ffff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .floating-emojis span {
            position: fixed;
            font-size: 2rem;
            pointer-events: none;
            transition: transform 0.1s ease;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        input, select {
            width: 100%;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            color: #fff;
            font-family: 'Inter', sans-serif;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        input:focus, select:focus {
            outline: none;
            border-color: #ff00ff;
            background: rgba(255, 255, 255, 0.15);
        }

        button {
            background: linear-gradient(90deg, #ff00ff, #00ffff);
            color: #fff;
            border: none;
            padding: 1rem 2rem;
            border-radius: 8px;
            font-family: 'Space Grotesk', sans-serif;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 20px rgba(255, 0, 255, 0.3);
        }

        .event-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            margin: 3rem 0;
        }

        .detail-item {
            text-align: center;
        }

        .detail-item h3 {
            color: #00ffff;
            margin-bottom: 0.5rem;
        }

        #map {
            height: 300px;
            border-radius: 20px;
            margin: 2rem 0;
        }

        @media (max-width: 768px) {
            h1 {
                font-size: 2.5rem;
            }

            .glass-card {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="floating-emojis">
        <span class="emoji-1" data-value="2">ðŸŽ‰</span>
        <span class="emoji-2" data-value="3">ðŸŽµ</span>
        <span class="emoji-3" data-value="1">ðŸŒ™</span>
        <span class="emoji-4" data-value="4">âœ¨</span>
    </div>

    <div class="container">
        <h1>Berghain Bash</h1>
        <div class="glass-card">
            <div class="event-details">
                <div class="detail-item">
                    <h3>Date</h3>
                    <p>Friday, December 15th</p>
                </div>
                <div class="detail-item">
                    <h3>Time</h3>
                    <p>23:00 - LATE</p>
                </div>
                <div class="detail-item">
                    <h3>Location</h3>
                    <p>Berghain, Am Wriezener Bahnhof, Berlin</p>
                </div>
            </div>
        </div>

        <div class="glass-card">
            <h2>Register for Entry</h2>
            <form id="signupForm">
                <div class="form-group">
                    <input type="text" id="name" placeholder="Full Name" required>
                </div>
                <div class="form-group">
                    <input type="email" id="email" placeholder="Email Address" required>
                </div>
                <div class="form-group">
                    <select id="timeSlot" required>
                        <option value="">Select Entry Time</option>
                        <option value="23:00">23:00</option>
                        <option value="00:00">00:00</option>
                        <option value="01:00">01:00</option>
                    </select>
                </div>
                <button type="submit">Secure Your Spot</button>
            </form>
        </div>

        <div class="glass-card">
            <div id="map"></div>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emojis span').forEach((elem) => {
                const speed = elem.getAttribute('data-value')
                const x = (e.clientX * speed) / 100
                const y = (e.clientY * speed) / 100
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`
            })
        })

        document.getElementById('signupForm').addEventListener('submit', async (e) => {
            e.preventDefault()
            
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                timeSlot: document.getElementById('timeSlot').value
            }

            try {
                const { data, error } = await supabase.from('wtaf_submissions').insert({
                    app_id: 'brief_admin_table_id_here',
                    submission_data: formData
                })
                if (error) throw error
                alert('Registration successful! See you at Berghain.')
                document.getElementById('signupForm').reset()
            } catch (error) {
                console.error('Error:', error)
                alert('Registration failed. Please try again.')
            }
        })

        // Initialize map (placeholder)
        const mapDiv = document.getElementById('map')
        mapDiv.style.background = `url('https://maps.googleapis.com/maps/api/staticmap?center=Berghain,Berlin&zoom=15&size=600x300&key=YOUR_API_KEY')`
        mapDiv.style.backgroundSize = 'cover'
        mapDiv.style.backgroundPosition = 'center'
    </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Berghain Bash Admin</title>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;700&family=Inter:wght@300;400;600&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(220deg, #0a0a0a, #1a1a1a, #2a2a2a);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
            color: #fff;
            font-family: 'Inter', sans-serif;
            min-height: 100vh;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .glass-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 3rem;
            margin: 2rem 0;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 3rem;
            margin-bottom: 2rem;
            background: linear-gradient(90deg, #ff00ff, #00ffff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .floating-emojis span {
            position: fixed;
            font-size: 2rem;
            pointer-events: none;
            transition: transform 0.1s ease;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin: 2rem 0;
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        th {
            font-family: 'Space Grotesk', sans-serif;
            color: #00ffff;
        }

        button {
            background: linear-gradient(90deg, #ff00ff, #00ffff);
            color: #fff;
            border: none;
            padding: 1rem 2rem;
            border-radius: 8px;
            font-family: 'Space Grotesk', sans-serif;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 2rem;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 20px rgba(255, 0, 255, 0.3);
        }

        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.1);
            padding: 1.5rem;
            border-radius: 10px;
            text-align: center;
        }

        .stat-card h3 {
            color: #00ffff;
            margin-bottom: 0.5rem;
        }

        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            .glass-card {
                padding: 1.5rem;
            }

            table {
                display: block;
                overflow-x: auto;
            }
        }
    </style>
</head>
<body>
    <div class="floating-emojis">
        <span class="emoji-1" data-value="2">ðŸ‘¾</span>
        <span class="emoji-2" data-value="3">ðŸŽ§</span>
        <span class="emoji-3" data-value="1">ðŸŒƒ</span>
        <span class="emoji-4" data-value="4">ðŸ’«</span>
    </div>

    <div class="container">
        <h1>Berghain Bash Admin</h1>
        
        <button id="exportCsv">Export to CSV</button>

        <div class="glass-card">
            <div class="stats">
                <div class="stat-card">
                    <h3>Total Registrations</h3>
                    <div id="totalCount">0</div>
                </div>
                <div class="stat-card">
                    <h3>23:00 Slot</h3>
                    <div id="slot2300">0</div>
                </div>
                <div class="stat-card">
                    <h3>00:00 Slot</h3>
                    <div id="slot0000">0</div>
                </div>
                <div class="stat-card">
                    <h3>01:00 Slot</h3>
                    <div id="slot0100">0</div>
                </div>
            </div>

            <table id="submissionsTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Time Slot</th>
                        <th>Registration Date</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <script>
        const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emojis span').forEach((elem) => {
                const speed = elem.getAttribute('data-value')
                const x = (e.clientX * speed) / 100
                const y = (e.clientY * speed) / 100
                elem.style.transform = `translateX(${x}px) translateY(${y}px)`
            })
        })

        async function loadSubmissions() {
            try {
                const { data, error } = await supabase.from('wtaf_submissions')
                    .select('*')
                    .eq('app_id', 'brief_admin_table_id_here')
                    .order('created_at', { ascending: false })
                
                if (error) throw error

                const tbody = document.querySelector('#submissionsTable tbody')
                tbody.innerHTML = ''

                let slot2300Count = 0
                let slot0000Count = 0
                let slot0100Count = 0

                data.forEach(row => {
                    const tr = document.createElement('tr')
                    tr.innerHTML = `
                        <td>${row.submission_data.name}</td>
                        <td>${row.submission_data.email}</td>
                        <td>${row.submission_data.timeSlot}</td>
                        <td>${new Date(row.created_at).toLocaleString()}</td>
                    `
                    tbody.appendChild(tr)

                    // Update counts
                    switch(row.submission_data.timeSlot) {
                        case '23:00': slot2300Count++; break
                        case '00:00': slot0000Count++; break
                        case '01:00': slot0100Count++; break
                    }
                })

                // Update stats
                document.getElementById('totalCount').textContent = data.length
                document.getElementById('slot2300').textContent = slot2300Count
                document.getElementById('slot0000').textContent = slot0000Count
                document.getElementById('slot0100').textContent = slot0100Count

            } catch (error) {
                console.error('Error:', error)
                alert('Failed to load submissions')
            }
        }

        document.getElementById('exportCsv').addEventListener('click', async () => {
            try {
                const { data, error } = await supabase.from('wtaf_submissions')
                    .select('*')
                    .eq('app_id', 'brief_admin_table_id_here')
                
                if (error) throw error

                const csvContent = 'Name,Email,Time Slot,Registration Date\n' + 
                    data.map(row => `${row.submission_data.name},${row.submission_data.email},${row.submission_data.timeSlot},${new Date(row.created_at).toLocaleString()}`).join('\n')

                const blob = new Blob([csvContent], { type: 'text/csv' })
                const url = URL.createObjectURL(blob)
                const a = document.createElement('a')
                a.href = url
                a.download = 'berghain-bash-registrations.csv'
                a.click()
            } catch (error) {
                console.error('Error:', error)
                alert('Failed to export CSV')
            }
        })

        // Load submissions on page load
        loadSubmissions()
    </script>
</body>
</html>
```