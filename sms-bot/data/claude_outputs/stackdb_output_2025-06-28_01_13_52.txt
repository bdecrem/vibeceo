```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>THE SCRAPPILE</title>
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Courier+Prime:wght@400;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: #000;
            color: #fff;
            font-family: 'Courier Prime', monospace;
            min-height: 100vh;
            overflow-x: hidden;
            background: linear-gradient(45deg, #1a1a1a, #000000);
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
            position: relative;
        }

        h1 {
            font-family: 'Space Grotesk', sans-serif;
            font-size: 4rem;
            text-align: center;
            margin: 2rem 0;
            color: #ff2e93;
            text-shadow: 0 0 10px #ff2e93;
            animation: glitch 3s infinite;
        }

        h2 {
            text-align: center;
            font-size: 1.2rem;
            margin-bottom: 4rem;
            color: #57E2E5;
            font-style: italic;
        }

        .links-container {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .link-item {
            background: rgba(255,255,255,0.05);
            padding: 1rem;
            border: 1px solid rgba(255,255,255,0.1);
            border-radius: 4px;
            transition: all 0.3s ease;
            text-decoration: none;
            color: #fff;
            position: relative;
            overflow: hidden;
        }

        .link-item:hover {
            background: rgba(255,255,255,0.1);
            transform: translateX(10px);
            border-color: #ff2e93;
        }

        .link-item:before {
            content: "‚ö°";
            position: absolute;
            left: -20px;
            opacity: 0;
            transition: all 0.3s ease;
        }

        .link-item:hover:before {
            left: 10px;
            opacity: 1;
        }

        .floating-emoji {
            position: fixed;
            pointer-events: none;
            font-size: 2rem;
            transition: all 0.1s ease;
        }

        .loading {
            text-align: center;
            font-size: 2rem;
            margin: 2rem;
            animation: pulse 1s infinite;
        }

        @keyframes glitch {
            0% { transform: translate(0); }
            20% { transform: translate(-2px, 2px); }
            40% { transform: translate(-2px, -2px); }
            60% { transform: translate(2px, 2px); }
            80% { transform: translate(2px, -2px); }
            100% { transform: translate(0); }
        }

        @keyframes pulse {
            0% { opacity: 0.5; }
            50% { opacity: 1; }
            100% { opacity: 0.5; }
        }

        .empty-state {
            text-align: center;
            padding: 2rem;
            color: #57E2E5;
        }

    </style>
</head>
<body>
    <div class="container">
        <h1>THE SCRAPPILE</h1>
        <h2>‚Üí A lovingly welded junkyard of vibes</h2>
        <div id="links" class="links-container">
            <div class="loading">Loading the chaos...</div>
        </div>
    </div>

    <div class="floating-emoji" data-value="3" style="top: 10%; left: 10%">üî•</div>
    <div class="floating-emoji" data-value="2" style="top: 20%; right: 15%">‚ö°</div>
    <div class="floating-emoji" data-value="4" style="bottom: 20%; left: 20%">üíÄ</div>
    <div class="floating-emoji" data-value="1" style="bottom: 10%; right: 10%">‚õìÔ∏è</div>

    <script>
        const supabase = supabase.createClient('https://xyzcompany.supabase.co', 'public-anon-key');
        
        async function fetchLinks() {
            const { data: submissions, error } = await supabase
                .from('wtaf_submissions')
                .select('submission_data, created_at')
                .eq('app_id', '7d970033-5ab3-4ceb-9f89-910c8c0c0925')
                .order('created_at', { ascending: false });

            if (error) {
                document.getElementById('links').innerHTML = `
                    <div class="empty-state">
                        SYSTEM MALFUNCTION... BUT IN A COOL WAY ü§ò
                    </div>
                `;
                return;
            }

            if (!submissions || submissions.length === 0) {
                document.getElementById('links').innerHTML = `
                    <div class="empty-state">
                        NO LINKS YET... TIME TO MAKE SOME NOISE üé∏
                    </div>
                `;
                return;
            }

            const linksHTML = submissions
                .map(sub => {
                    const data = sub.submission_data;
                    const name = data.name || data.firstName || data.username || 'Anonymous Punk';
                    return `
                        <a href="#" class="link-item">
                            ${name}
                        </a>
                    `;
                })
                .join('');

            document.getElementById('links').innerHTML = linksHTML;
        }

        // Parallax effect for floating emojis
        document.addEventListener('mousemove', (e) => {
            document.querySelectorAll('.floating-emoji').forEach((emoji) => {
                const speed = emoji.getAttribute('data-value') || 2;
                const x = (e.clientX * speed) / 250;
                const y = (e.clientY * speed) / 250;
                emoji.style.transform = `translate(${x}px, ${y}px)`;
            });
        });

        // Easter egg - type WTAF
        let typed = '';
        document.addEventListener('keydown', (e) => {
            typed += e.key.toLowerCase();
            if (typed.includes('wtaf')) {
                document.body.style.animation = 'glitch 0.2s infinite';
                setTimeout(() => {
                    document.body.style.animation = '';
                }, 1000);
                typed = '';
            }
            if (typed.length > 10) typed = '';
        });

        fetchLinks();
    </script>
</body>
</html>
```