```html
<!DOCTYPE html>
<html>
<head>
  <title>Hello World Generator</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Inter:wght@400;600&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      min-height: 100vh;
      overflow: hidden;
      transition: all 0.5s;
    }

    .container {
      position: relative;
      height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    h1 {
      font-family: 'Space Grotesk', sans-serif;
      font-size: 8vw;
      background-clip: text;
      -webkit-background-clip: text;
      color: transparent;
      text-align: center;
      position: relative;
      z-index: 2;
    }

    .floating-emoji {
      position: fixed;
      font-size: 4rem;
      pointer-events: none;
      transition: transform 0.1s;
      animation: float 6s ease-in-out infinite;
      z-index: 1;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-20px); }
    }

    .controls {
      position: fixed;
      bottom: 2rem;
      right: 2rem;
      display: flex;
      gap: 1rem;
      z-index: 3;
    }

    button {
      font-family: 'Space Grotesk', sans-serif;
      padding: 1rem 2rem;
      border: none;
      border-radius: 50px;
      cursor: pointer;
      font-size: 1.2rem;
      transition: all 0.3s;
      background: rgba(255,255,255,0.2);
      backdrop-filter: blur(10px);
      color: white;
    }

    button:hover {
      transform: scale(1.1);
    }

    .hidden {
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Hello World</h1>
    <div class="controls">
      <button onclick="generateNew()">NEXT âš¡</button>
      <button onclick="saveThis()">SAVE THIS ðŸ’¾</button>
    </div>
  </div>

  <script>
    const gradients = [
      'linear-gradient(45deg, #FF2E93, #FF61C7, #FFA5E5)',
      'linear-gradient(45deg, #3F88FF, #6E7FFF, #ABF7FF)', 
      'linear-gradient(45deg, #FF7C5C, #FFB178, #FFEAC2)',
      'linear-gradient(45deg, #7C3AED, #A855F7, #D8B4FE)',
      'linear-gradient(45deg, #00FFC6, #57E2E5, #8CFFDA)'
    ];

    const emojis = ['âœ¨', 'ðŸŒ€', 'ðŸš€', 'ðŸ¦„', 'ðŸ’«', 'âš¡', 'ðŸ”®', 'ðŸ’Ž'];
    let currentState = null;

    async function checkSavedState() {
      try {
        const response = await fetch('/api/admin/load?app_id=hello_world_gen');
        if (!response.ok) throw new Error('Failed to load state');
        const data = await response.json();
        
        if (data && data.length > 0) {
          currentState = data[data.length - 1].submission_data;
          applyState(currentState);
          document.querySelector('.controls').classList.add('hidden');
        } else {
          generateNew();
        }
      } catch (error) {
        console.error('Error:', error);
        generateNew();
      }
    }

    function generateNew() {
      const gradient = gradients[Math.floor(Math.random() * gradients.length)];
      document.body.style.background = gradient;
      document.querySelector('h1').style.backgroundImage = gradient;
      
      // Clear existing emojis
      document.querySelectorAll('.floating-emoji').forEach(e => e.remove());
      
      // Add new floating emojis
      for (let i = 0; i < 6; i++) {
        const emoji = document.createElement('div');
        emoji.className = 'floating-emoji';
        emoji.textContent = emojis[Math.floor(Math.random() * emojis.length)];
        emoji.style.left = `${Math.random() * 100}vw`;
        emoji.style.top = `${Math.random() * 100}vh`;
        emoji.setAttribute('data-value', Math.random() * 4 + 1);
        document.body.appendChild(emoji);
      }

      currentState = {
        gradient,
        emojis: Array.from(document.querySelectorAll('.floating-emoji')).map(e => ({
          text: e.textContent,
          left: e.style.left,
          top: e.style.top
        }))
      };
    }

    async function saveThis() {
      try {
        const response = await fetch('/api/admin/save', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            app_id: 'hello_world_gen',
            submission_data: currentState
          })
        });
        
        if (!response.ok) throw new Error('Failed to save');
        document.querySelector('.controls').classList.add('hidden');
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to save. Please try again.');
      }
    }

    function applyState(state) {
      document.body.style.background = state.gradient;
      document.querySelector('h1').style.backgroundImage = state.gradient;
      
      document.querySelectorAll('.floating-emoji').forEach(e => e.remove());
      
      state.emojis.forEach(emojiData => {
        const emoji = document.createElement('div');
        emoji.className = 'floating-emoji';
        emoji.textContent = emojiData.text;
        emoji.style.left = emojiData.left;
        emoji.style.top = emojiData.top;
        emoji.setAttribute('data-value', Math.random() * 4 + 1);
        document.body.appendChild(emoji);
      });
    }

    // Parallax effect
    document.addEventListener('mousemove', (e) => {
      document.querySelectorAll('.floating-emoji').forEach((emoji) => {
        const speed = emoji.getAttribute('data-value');
        const x = (e.clientX * speed) / 250;
        const y = (e.clientY * speed) / 250;
        emoji.style.transform = `translate(${x}px, ${y}px)`;
      });
    });

    checkSavedState();
  </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html>
<head>
  <title>Hello World Generator Admin</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Inter:wght@400;600&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Inter', sans-serif;
    }

    body {
      padding: 2rem;
      background: #111;
      color: white;
    }

    h1 {
      font-family: 'Space Grotesk', sans-serif;
      margin-bottom: 2rem;
      background: linear-gradient(45deg, #FF2E93, #FF61C7);
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
    }

    .admin-panel {
      background: rgba(255,255,255,0.1);
      padding: 2rem;
      border-radius: 1rem;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 1rem;
    }

    th, td {
      padding: 1rem;
      text-align: left;
      border-bottom: 1px solid rgba(255,255,255,0.1);
    }

    th {
      font-family: 'Space Grotesk', sans-serif;
      background: rgba(255,255,255,0.05);
    }

    .preview {
      width: 200px;
      height: 100px;
      border-radius: 0.5rem;
      margin: 0.5rem 0;
    }

    button {
      font-family: 'Space Grotesk', sans-serif;
      padding: 1rem 2rem;
      border: none;
      border-radius: 50px;
      cursor: pointer;
      background: linear-gradient(45deg, #FF2E93, #FF61C7);
      color: white;
      margin-top: 1rem;
    }

    button:hover {
      transform: scale(1.05);
    }
  </style>
</head>
<body>
  <h1>Hello World Generator Admin</h1>
  
  <div class="admin-panel">
    <table>
      <thead>
        <tr>
          <th>Date</th>
          <th>Gradient Preview</th>
          <th>Emoji Count</th>
          <th>Status</th>
        </tr>
      </thead>
      <tbody id="submissions">
        <!-- Data will be populated here -->
      </tbody>
    </table>

    <button onclick="exportCSV()">Export to CSV</button>
  </div>

  <script>
    async function loadSubmissions() {
      try {
        const response = await fetch('/api/admin/load?app_id=hello_world_gen');
        if (!response.ok) throw new Error('Failed to load submissions');
        const data = await response.json();
        
        const tbody = document.getElementById('submissions');
        tbody.innerHTML = '';
        
        data.forEach(submission => {
          const row = document.createElement('tr');
          const date = new Date().toLocaleDateString();
          row.innerHTML = `
            <td>${date}</td>
            <td>
              <div class="preview" style="background: ${submission.submission_data.gradient}"></div>
            </td>
            <td>${submission.submission_data.emojis.length} emojis</td>
            <td>Active Configuration</td>
          `;
          tbody.appendChild(row);
        });
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to load submissions');
      }
    }

    function exportCSV() {
      try {
        const response = await fetch('/api/admin/load?app_id=hello_world_gen');
        if (!response.ok) throw new Error('Failed to load submissions');
        const data = await response.json();
        
        const csvContent = 'Date,Gradient,EmojiCount\n' + data.map(row => 
          `${new Date().toLocaleDateString()},${row.submission_data.gradient},${row.submission_data.emojis.length}`
        ).join('\n');
        
        const blob = new Blob([csvContent], { type: 'text/csv' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'hello_world_configurations.csv';
        a.click();
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to export CSV');
      }
    }

    loadSubmissions();
  </script>
</body>
</html>
```