Here's a complete public ASCII critter wall app using ZAD database:

<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
<title>ASCII Critter Wall</title>
<style>
* { box-sizing: border-box; }

body {
  font-family: monospace;
  background: #0a0a0a;
  color: #fff;
  margin: 0;
  padding: 10px;
  font-size: 16px;
}

.app-container {
  max-width: 1200px;
  margin: 0 auto;
  background: #1a1a1a;
  border-radius: 12px;
  padding: 20px;
  box-shadow: 0 0 40px rgba(0,0,0,0.5);
}

.critter-wall {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
  gap: 10px;
  margin-bottom: 30px;
}

.critter-tile {
  background: #2a2a2a;
  padding: 8px;
  border-radius: 8px;
  text-align: center;
  min-height: 120px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 12px;
  line-height: 1.2;
  position: relative;
  overflow: hidden;
}

.critter-name {
  font-size: 8px;
  opacity: 0.8;
  margin-top: 4px;
  font-family: 'Comic Sans MS', cursive;
  transform: rotate(-2deg);
}

.critter-author {
  position: absolute;
  bottom: 2px;
  right: 4px;
  font-size: 6px;
  opacity: 0.6;
}

.picker {
  background: #2a2a2a;
  padding: 20px;
  border-radius: 8px;
  margin: 20px 0;
  text-align: center;
}

button {
  background: #ff0066;
  color: white;
  border: none;
  padding: 16px 24px;
  border-radius: 6px;
  font-weight: bold;
  cursor: pointer;
  margin: 8px;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 16px;
  min-height: 44px;
}

input {
  background: #333;
  border: 1px solid #444;
  color: white;
  padding: 16px;
  border-radius: 6px;
  width: 100%;
  max-width: 300px;
  margin: 10px;
  font-size: 16px;
  min-height: 44px;
}

#current-critter {
  font-size: 14px;
  line-height: 1.2;
  margin: 20px 0;
  white-space: pre;
}

#user-status {
  background: #333;
  padding: 8px 12px;
  border-radius: 4px;
  margin: 10px 0;
  font-size: 14px;
  text-align: center;
  opacity: 0.8;
}
</style>
</head>
<body>

<div class="app-container">
    <div id="main-screen" class="screen active">
        <h1>ASCII Critter Wall</h1>
        <div id="user-status">Anonymous User: <span id="current-user-label"></span></div>
        
        <div id="critter-wall" class="critter-wall">
            <!-- Critters load here -->
        </div>

        <div class="picker">
            <div id="current-critter"></div>
            <input type="text" id="critter-name" placeholder="Name your critter" maxlength="20">
            <button onclick="pickRandomCritter()">Next Random Critter</button>
            <button onclick="saveCritter()">Save to Wall</button>
        </div>
    </div>
</div>

<script>
const COLORS = ['#ff3333', '#3333ff', '#33ff33', '#9933ff', '#ff9933', 
                '#ffff33', '#ff33ff', '#33ffff', '#ff0066', '#66ff00'];

const CRITTERS = [
`  /\\___/\\
 (  o o  )
 (  =^=  )
  (______)`,

`   /\\___/\\
  |  . .  |
   \\_____/
    |   |
    |   |`,

`  /\\  /\\
 {  \\/  }
  >    <
  \\____/`,

`  /\\___/\\
 ( =^.^= )
  >  <  <
   \\ | /
    \\|/`,

`   ^---^
  ( o.o )
   > ^ <
  /  |  \\
    / \\`,

`  /\\___/\\
 (  ' '  )
  ( (-) )
   \\___/`,

`   /\\-/\\
  (o.o  )
   > ^ <
  /   \\`,

`  ^--^
 (o.o)
  |^|
 /   \\`,

`   /\\__/\\
  (  ..  )
   \\    /
    \\__/`,

`  /\\___/\\
 (  - -  )
  ( www )
   \\___/`,

`   ^--^
  (o_o)
  /   \\
 |     |`,

`  /\\___/\\
 ( o   o )
  (  ^  )
   \\___/`,

`   /\\-/\\
  (o.o  )
   > ~ <
  /   \\`,

`  ^--^
 (*.*)
  |^|
 /   \\`,

`   /\\__/\\
  (  @@  )
   \\    /
    \\__/`,

`  /\\___/\\
 (  - -  )
  ( --- )
   \\___/`,

`   ^--^
  (>.<)
  /   \\
 |     |`,

`  /\\___/\\
 ( o   o )
  (  v  )
   \\___/`,

`   /\\-/\\
  (o.o  )
   > * <
  /   \\`,

`  ^--^
 (^.^)
  |^|
 /   \\`
];

let currentCritter = '';
let currentUser = null;
let pollingInterval;

async function initPublicMode() {
    currentUser = await generateAnonymousUser();
    if (currentUser?.success) {
        updateZadAuth(currentUser.userLabel, currentUser.participantId);
        document.getElementById('current-user-label').textContent = currentUser.userLabel;
        startPolling();
        loadLatestData();
        pickRandomCritter();
    }
}

function startPolling() {
    pollingInterval = setInterval(() => loadLatestData(), 2000);
}

function getRandomColor() {
    return COLORS[Math.floor(Math.random() * COLORS.length)];
}

function pickRandomCritter() {
    currentCritter = CRITTERS[Math.floor(Math.random() * CRITTERS.length)];
    document.getElementById('current-critter').textContent = currentCritter;
}

async function saveCritter() {
    const name = document.getElementById('critter-name').value.trim();
    if (!name || !currentCritter) return;
    
    await save('critter', {
        name: name,
        ascii: currentCritter,
        color: getRandomColor()
    });
    
    document.getElementById('critter-name').value = '';
    pickRandomCritter();
    await loadLatestData();
}

async function loadLatestData() {
    const critters = await load('critter');
    const wall = document.getElementById('critter-wall');
    
    wall.innerHTML = critters.map(critter => `
        <div class="critter-tile" style="background:${critter.color || getRandomColor()}">
            <pre>${critter.ascii}</pre>
            <div class="critter-name">${critter.name}</div>
            <div class="critter-author">${critter.author}</div>
        </div>
    `).join('');
}

initPublicMode();
</script>
</body>
</html>