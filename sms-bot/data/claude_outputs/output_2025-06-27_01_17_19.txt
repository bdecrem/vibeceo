```html
<!DOCTYPE html>
<html>
<head>
  <title>WTAF Hello World Generator</title>
  <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
  <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      min-height: 100vh;
      font-family: 'Inter', sans-serif;
      overflow: hidden;
      transition: all 0.5s ease;
    }

    .container {
      position: relative;
      width: 100vw;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
    }

    h1 {
      font-family: 'Space Grotesk', sans-serif;
      font-size: 5rem;
      background: linear-gradient(to right, #fff, rgba(255,255,255,0.7));
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
      text-shadow: 0 0 20px rgba(255,255,255,0.3);
      cursor: pointer;
      transition: all 0.3s ease;
      z-index: 2;
    }

    .floating-emoji {
      position: absolute;
      font-size: 4rem;
      pointer-events: none;
      transition: all 0.1s ease;
      filter: drop-shadow(0 0 10px rgba(255,255,255,0.3));
    }

    .save-btn {
      position: fixed;
      bottom: 20px;
      right: 20px;
      font-size: 2rem;
      background: none;
      border: none;
      cursor: pointer;
      transform: scale(1);
      transition: transform 0.3s ease;
    }

    .save-btn:hover {
      transform: scale(1.2);
    }

    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-20px); }
    }

    .easter-egg {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 10rem;
      opacity: 0;
      pointer-events: none;
      transition: all 0.5s ease;
    }

    .prompt-display {
      position: fixed;
      bottom: 10px;
      left: 10px;
      font-size: 0.8rem;
      opacity: 0.7;
      color: white;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Hello World</h1>
    <div class="easter-egg">üéâ</div>
  </div>
  <button class="save-btn">‚ù§Ô∏è</button>
  <div class="prompt-display">Generated from: Hello World Generator with Easter Eggs</div>

  <script>
    const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')
    
    const emojis = ['‚ú®', 'üåà', 'üöÄ', 'ü¶Ñ', 'üí´', 'üåô', '‚≠ê', 'üîÆ']
    const gradients = [
      'linear-gradient(45deg, #FF2E93, #FF61C7)',
      'linear-gradient(45deg, #3F88FF, #6E7FFF)',
      'linear-gradient(45deg, #FF7C5C, #FFB178)',
      'linear-gradient(45deg, #7C3AED, #A855F7)',
      'linear-gradient(45deg, #00FFC6, #57E2E5)'
    ]

    function createFloatingEmojis() {
      document.querySelectorAll('.floating-emoji').forEach(e => e.remove())
      
      for(let i = 0; i < 6; i++) {
        const emoji = document.createElement('div')
        emoji.className = 'floating-emoji'
        emoji.textContent = emojis[Math.floor(Math.random() * emojis.length)]
        emoji.style.left = `${Math.random() * 80 + 10}vw`
        emoji.style.top = `${Math.random() * 80 + 10}vh`
        emoji.style.animation = `float ${Math.random() * 3 + 4}s ease-in-out infinite`
        emoji.setAttribute('data-value', Math.random() * 4 + 1)
        document.body.appendChild(emoji)
      }
    }

    function generateNewStyle() {
      const gradient = gradients[Math.floor(Math.random() * gradients.length)]
      document.body.style.background = gradient
      createFloatingEmojis()
    }

    document.addEventListener('click', generateNewStyle)
    document.addEventListener('touchstart', generateNewStyle)

    document.addEventListener('mousemove', (e) => {
      document.querySelectorAll('.floating-emoji').forEach(emoji => {
        const speed = emoji.getAttribute('data-value')
        const x = (e.clientX * speed) / 100
        const y = (e.clientY * speed) / 100
        emoji.style.transform = `translate(${x}px, ${y}px)`
      })
    })

    let clicks = 0
    document.querySelector('h1').addEventListener('click', (e) => {
      e.stopPropagation()
      clicks++
      if(clicks === 5) {
        const easterEgg = document.querySelector('.easter-egg')
        easterEgg.style.opacity = '1'
        setTimeout(() => easterEgg.style.opacity = '0', 2000)
        clicks = 0
      }
    })

    document.querySelector('.save-btn').addEventListener('click', async (e) => {
      e.stopPropagation()
      try {
        const styleData = {
          background: document.body.style.background,
          emojis: Array.from(document.querySelectorAll('.floating-emoji')).map(e => e.textContent)
        }
        
        const { data, error } = await supabase.from('wtaf_submissions').insert({
          app_id: 'hello_world_generator',
          submission_data: styleData
        })
        
        if (error) throw error
        alert('Style saved! ‚ú®')
      } catch (error) {
        console.error('Error:', error)
        alert('Failed to save style. Please try again.')
      }
    })

    generateNewStyle()
  </script>
</body>
</html>

<!-- WTAF_ADMIN_PAGE_STARTS_HERE -->

<!DOCTYPE html>
<html>
<head>
  <title>WTAF Hello World Admin</title>
  <script src="https://unpkg.com/@supabase/supabase-js@2"></script>
  <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      padding: 2rem;
      background: #1a1a1a;
      color: white;
    }

    h1 {
      font-family: 'Space Grotesk', sans-serif;
      margin-bottom: 2rem;
      font-size: 2.5rem;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 2rem;
    }

    th, td {
      padding: 1rem;
      text-align: left;
      border-bottom: 1px solid #333;
    }

    th {
      background: #222;
    }

    .preview {
      width: 100px;
      height: 60px;
      border-radius: 8px;
    }

    .export-btn {
      padding: 1rem 2rem;
      background: #FF2E93;
      border: none;
      border-radius: 8px;
      color: white;
      font-family: 'Space Grotesk', sans-serif;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .export-btn:hover {
      transform: scale(1.05);
    }

    .emoji-list {
      display: flex;
      gap: 0.5rem;
      font-size: 1.2rem;
    }
  </style>
</head>
<body>
  <h1>Saved Hello World Styles</h1>
  <table>
    <thead>
      <tr>
        <th>Date</th>
        <th>Preview</th>
        <th>Gradient</th>
        <th>Emojis</th>
      </tr>
    </thead>
    <tbody id="submissions-table"></tbody>
  </table>
  <button class="export-btn">Export CSV</button>

  <script>
    const supabase = window.supabase.createClient('YOUR_SUPABASE_URL', 'YOUR_SUPABASE_ANON_KEY')

    async function loadSubmissions() {
      try {
        const { data, error } = await supabase.from('wtaf_submissions')
          .select('*')
          .eq('app_id', 'hello_world_generator')
          .order('created_at', { ascending: false })
        
        if (error) throw error

        const tableBody = document.getElementById('submissions-table')
        tableBody.innerHTML = ''

        data.forEach(row => {
          const tr = document.createElement('tr')
          tr.innerHTML = `
            <td>${new Date(row.created_at).toLocaleString()}</td>
            <td><div class="preview" style="background: ${row.submission_data.background}"></div></td>
            <td>${row.submission_data.background}</td>
            <td><div class="emoji-list">${row.submission_data.emojis.join(' ')}</div></td>
          `
          tableBody.appendChild(tr)
        })
      } catch (error) {
        console.error('Error:', error)
        alert('Failed to load submissions')
      }
    }

    document.querySelector('.export-btn').addEventListener('click', async () => {
      try {
        const { data, error } = await supabase.from('wtaf_submissions')
          .select('*')
          .eq('app_id', 'hello_world_generator')
        
        if (error) throw error

        const csvContent = 'Date,Gradient,Emojis\n' + data.map(row => 
          `${new Date(row.created_at).toLocaleString()},${row.submission_data.background},"${row.submission_data.emojis.join(' ')}"`
        ).join('\n')

        const blob = new Blob([csvContent], { type: 'text/csv' })
        const url = URL.createObjectURL(blob)
        const a = document.createElement('a')
        a.href = url
        a.download = 'hello_world_styles.csv'
        a.click()
      } catch (error) {
        console.error('Error:', error)
        alert('Failed to export data')
      }
    })

    loadSubmissions()
  </script>
</body>
</html>
```