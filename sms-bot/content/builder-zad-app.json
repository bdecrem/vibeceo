{
  "role": "system",
  "content": "Create a Zero Admin Data (ZAD) collaborative app. These are multi-user apps for small groups where friends share data without any admin interface.\n\nMANDATORY FEATURES TO IMPLEMENT:\n\n1. EMOJI AUTHENTICATION SYSTEM:\n   - Welcome screen with 5 emoji choices: ðŸŽ¯ðŸŽ¨ðŸŽ®ðŸŽªðŸŽ­\n   - Generate 4-digit passcode for each user\n   - Return user login: emoji + passcode\n   - Show \"X of 5 spots taken\"\n\n2. DATABASE INTEGRATION (REQUIRED):\n   - Use Supabase table: wtaf_zero_admin_collaborative\n   - Save user joins, messages, actions\n   - Load collaboration history on page load\n\n3. COLLABORATION INTERFACE:\n   - Show all participants with their emojis\n   - Share data between users (messages, votes, counters)\n   - Show who did what with emoji attribution\n\nCODE TEMPLATE TO FOLLOW:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Collaborative App</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2\"></script>\n</head>\n<body>\n    <div id=\"welcome-screen\">\n        <h1>Choose Your Emoji</h1>\n        <div class=\"emoji-grid\">\n            <button onclick=\"selectEmoji('ðŸŽ¯')\">ðŸŽ¯</button>\n            <button onclick=\"selectEmoji('ðŸŽ¨')\">ðŸŽ¨</button>\n            <button onclick=\"selectEmoji('ðŸŽ®')\">ðŸŽ®</button>\n            <button onclick=\"selectEmoji('ðŸŽª')\">ðŸŽª</button>\n            <button onclick=\"selectEmoji('ðŸŽ­')\">ðŸŽ­</button>\n        </div>\n        <div id=\"slots-info\">Loading available slots...</div>\n    </div>\n    \n    <div id=\"login-screen\" style=\"display:none\">\n        <h1>Welcome Back!</h1>\n        <select id=\"emoji-select\">\n            <option value=\"ðŸŽ¯\">ðŸŽ¯</option>\n            <option value=\"ðŸŽ¨\">ðŸŽ¨</option>\n            <option value=\"ðŸŽ®\">ðŸŽ®</option>\n            <option value=\"ðŸŽª\">ðŸŽª</option>\n            <option value=\"ðŸŽ­\">ðŸŽ­</option>\n        </select>\n        <input type=\"text\" id=\"passcode\" placeholder=\"Enter your 4-digit code\">\n        <button onclick=\"login()\">Login</button>\n    </div>\n    \n    <div id=\"app-screen\" style=\"display:none\">\n        <div id=\"participants\">Participants: </div>\n        <div id=\"collaboration-area\">\n            <!-- Your specific app content here -->\n        </div>\n    </div>\n\n    <script>\n        const supabase = window.supabase.createClient(\n            'YOUR_SUPABASE_URL', \n            'YOUR_SUPABASE_ANON_KEY'\n        );\n        \n        const APP_ID = 'app-' + Math.random().toString(36).substr(2, 9);\n        let currentUser = null;\n        \n        async function selectEmoji(emoji) {\n            const passcode = Math.floor(1000 + Math.random() * 9000).toString();\n            \n            // Save to database\n            const { data, error } = await supabase\n                .from('wtaf_zero_admin_collaborative')\n                .insert({\n                    app_id: APP_ID,\n                    participant_id: emoji + passcode,\n                    participant_data: {emoji, passcode, slot: 1, join_time: Date.now()},\n                    action_type: 'join',\n                    content_data: {message: 'Joined the group', timestamp: Date.now()}\n                });\n            \n            currentUser = {emoji, passcode};\n            localStorage.setItem('user', JSON.stringify(currentUser));\n            showAppScreen();\n        }\n        \n        async function login() {\n            const emoji = document.getElementById('emoji-select').value;\n            const passcode = document.getElementById('passcode').value;\n            \n            // Validate credentials\n            const { data } = await supabase\n                .from('wtaf_zero_admin_collaborative')\n                .select('*')\n                .eq('app_id', APP_ID)\n                .eq('participant_id', emoji + passcode);\n            \n            if (data && data.length > 0) {\n                currentUser = {emoji, passcode};\n                localStorage.setItem('user', JSON.stringify(currentUser));\n                showAppScreen();\n            } else {\n                alert('Invalid credentials');\n            }\n        }\n        \n        async function loadParticipants() {\n            const { data } = await supabase\n                .from('wtaf_zero_admin_collaborative')\n                .select('participant_data')\n                .eq('app_id', APP_ID)\n                .eq('action_type', 'join');\n            \n            const participants = data.map(p => p.participant_data.emoji).join(' ');\n            document.getElementById('participants').textContent = 'Participants: ' + participants;\n        }\n        \n        function showAppScreen() {\n            document.getElementById('welcome-screen').style.display = 'none';\n            document.getElementById('login-screen').style.display = 'none';\n            document.getElementById('app-screen').style.display = 'block';\n            loadParticipants();\n        }\n        \n        // Check if returning user\n        const savedUser = localStorage.getItem('user');\n        if (savedUser) {\n            document.getElementById('welcome-screen').style.display = 'none';\n            document.getElementById('login-screen').style.display = 'block';\n        }\n    </script>\n</body>\n</html>\n```\n\nCUSTOMIZE THIS TEMPLATE:\n- Add your specific collaboration features in #collaboration-area\n- Implement your data sharing logic (messages, votes, counters, etc.)\n- Style with WTAF punk aesthetic\n- Make mobile responsive\n\nYou MUST include:\nâœ… Emoji authentication (ðŸŽ¯ðŸŽ¨ðŸŽ®ðŸŽªðŸŽ­)\nâœ… wtaf_zero_admin_collaborative database calls\nâœ… Passcode system\nâœ… Participant display\nâœ… Functional collaboration features\n\nWrap your response in ```html code blocks."
} 