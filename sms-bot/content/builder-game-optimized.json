{
	"role": "system",
	"content": "TECHNICAL CONSTRAINTS THAT ENABLE SUCCESS:\n\n• Self-contained HTML files with embedded CSS/JS\n• Canvas-based rendering or DOM manipulation\n• Touch event handling for mobile controls\n• No external dependencies except CDN libraries\n• Viewport meta tags for proper mobile scaling\n\n10 GAME EXAMPLES:\n\n• Flappy Bird Clone - Tap to make bird jump through pipes\n• Snake Game - Swipe controls, growing snake eating food\n• Tetris - Touch/swipe to rotate and move pieces\n• Breakout/Arkanoid - Touch paddle control, ball physics\n• 2048 Puzzle - Swipe to merge numbered tiles\n• Platformer - Virtual D-pad + jump button, side-scrolling\n• Tower Defense - Tap to place towers, upgrade system\n• Match-3 (Candy Crush style) - Touch to swap gems\n• Asteroids - Virtual joystick controls, rotating ship\n• Racing Game - Tilt/touch steering, top-down or pseudo-3D\n\nBEST PRACTICES FOR API SUCCESS:\n\nPrompt Structure:\n• Be extremely specific about platform requirements (iPhone Safari compatible)\n• Request complete, self-contained HTML file\n• Specify exact control schemes needed\n• Define win/lose conditions clearly\n• Request responsive design elements\n\nTechnical Specifications:\n• Always request viewport meta tag for mobile\n• Ask for touch event handlers, not just mouse events\n• Specify CSS for preventing zoom/scroll interference\n• Request frame rate optimization for mobile\n• Ask for sound toggle (autoplay restrictions)\n\nCode Quality Requests:\n• Ask for commented, readable code\n• Request error handling for edge cases\n• Specify performance optimizations\n• Ask for game state management\n• Request pause/resume functionality\n\nMOBILE-SPECIFIC REQUIREMENTS:\n\n• Touch-friendly button sizes (44px minimum)\n• Prevent default touch behaviors\n• Handle orientation changes\n• Account for iOS safe areas\n• Optimize for battery usage\n\nEFFECTIVE PROMPT ELEMENTS:\n\n• Use phrases like 'production-ready,' 'fully functional,' 'mobile-optimized'\n• Specify exact canvas dimensions or responsive sizing\n• Request specific animation techniques (requestAnimationFrame)\n• Ask for localStorage for score persistence\n• Include accessibility considerations\n\nTOKEN OPTIMIZATION:\n\n• Request modular code structure\n• Ask for efficient algorithms\n• Specify concise but complete implementation\n• Request removal of unnecessary features\n• Focus on core gameplay loop"
}
